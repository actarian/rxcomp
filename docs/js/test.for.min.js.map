{"version":3,"sources":["test/js/test.for.ts","../../src/core/factory.ts","../../src/core/directive.ts","../../src/class/class.directive.ts","../../src/event/event.directive.ts","../../src/core/structure.ts","../../src/core/component.ts","../../src/core/context.ts","../../src/for/for.item.ts","../../src/for/for.structure.ts","../../src/href/href.directive.ts","../../src/if/if.structure.ts","../../src/inner-html/inner-html.directive.ts","../../src/core/pipe.ts","../../src/json/json.pipe.ts","../../src/module/module.ts","../../src/src/src.directive.ts","../../src/style/style.directive.ts","../../src/core.module.ts","../../src/platform/platform.ts","../../src/platform/browser.ts","../../test/js/test.for.ts"],"names":["rxjs","operators","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","Constructor","protoProps","staticProps","prototype","_inheritsLoose","subClass","superClass","create","constructor","__proto__","_setPrototypeOf","o","p","setPrototypeOf","isNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","toString","call","e","_construct","Parent","args","Class","a","push","apply","instance","Function","bind","arguments","CONTEXTS","NODES","Factory","this","rxcompId","unsubscribe$","Subject","changes$","ReplaySubject","_proto","onInit","onChanges","changes","onView","onDestroy","pushChanges","next","getContext","Directive","_Factory","ClassDirective","_this","_Directive","class","keys","_this2","node","Array","slice","classList","forEach","x","object","split","concat","setAttribute","join","meta","selector","inputs","EventDirective","event","_getContext","module","parentInstance","replace","event$","fromEvent","pipe","shareReplay","expression","getAttribute","outputFunction","makeFunction","takeUntil","subscribe","resolve","Structure","Component","parse","RESERVED_PROPERTIES","Context","descriptors","_Component","mergeDescriptors","getPrototypeOf","defineProperties","self","ReferenceError","_assertThisInitialized","source","properties","getOwnPropertyNames","_loop","shift","indexOf","hasOwnProperty","getOwnPropertyDescriptor","value","_len","ForItem","$key","$value","index","count","_Context","get","even","ForStructure","_Structure","instances","forbegin","document","createComment","parentNode","replaceChild","forend","insertBefore","nextSibling","removeAttribute","token","getExpressionToken","forFunction","iterable","context","result","isArray","array","total","previous","Math","max","clonedNode","cloneNode","makeInstance","forItemContext","compile","removeChild","remove","trim","expressions","map","filter","forExpressions","keyValueMatches","match","indexExpressions","HrefDirective","set","href","href_","IfStructure","ifbegin","ifend","ifFunction","element","InnerHtmlDirective","innerHTML","innerHTML_","undefined","Pipe","transform","JsonPipe","_Pipe","JSON","stringify","name","ID","Module","componentNode","querySelectorsAll","selectors","factory","getParentInstance","makeContext","makeHosts","makeInputs","outputs","makeOutputs","resolveInputsOutputs","params","parseExpression","payload","childNodes","child","nodeType","getContextByNode","text","parseTextNode","keepInstance","keepContext","traverseDown","deleteContext","destroy","nodeInnerHTML","getInstance","Document","window","_this3","traverseUp","_this4","nodeExpressions","parseTextNodeExpression","wholeText","replacedText","reduce","c","nodeValue","textNode","createTextNode","pushFragment","from","to","fragment","substring","matches","regex","lastIndex","exec","hosts","getHost","nodeContexts","makeInput","input","hasAttribute","b","_this5","makeOutput","_this6","output$","tap","_this7","output","inputFunction","rx1","parsePipes","parseOptionalChaining","parsePipeParams","func","segments","word","block","t","substr","tokens","rxcompNodeId","id","keepContexts","complete","matchSelectors","results","selectorResult","template","selectorResults","find","callback","j","traversePrevious","previousSibling","traverseNext","current","SrcDirective","src","src_","StyleDirective","style","previousStyle","propertyName","removeProperty","splitted","setProperty","factories","pipes","CoreModule","_Module","declarations","exports","ORDER","Browser","_Platform","Platform","bootstrap","moduleFactory","resolveMeta","isBrowser","Boolean","querySelector","resolveImportedMeta","resolvePipes","resolveFactories","sortFactories","unshift","unwrapSelectors","assign","imports","exported","importedPipes","importMeta","pipeFactory","_Array$prototype$conc","importedFactories","factoryList","sort","getExpressions","matchers","c1","a2","u3","v4","a5","e6","contains","nodeName","toLowerCase","excludes","matchSelector","unmatchSelector","includes","included","excluded","RootComponent","flag","nested","items","interval","take","getColor","ExamplePipe","AppModule"],"mappings":"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","file":"docs\\js\\test.for.min.js","sourcesContent":[null,"import { ReplaySubject, Subject } from 'rxjs';\r\nimport { IContext, IFactoryMeta } from './types';\r\n\r\nexport const CONTEXTS: { [key: number]: IContext } = {};\r\nexport const NODES: { [key: number]: IContext[] } = {};\r\n\r\nexport default class Factory {\r\n\r\n\tstatic meta: IFactoryMeta;\r\n\r\n\trxcompId: number = -1;\r\n\r\n\tunsubscribe$: Subject<void> = new Subject();\r\n\tchanges$: ReplaySubject<Factory> = new ReplaySubject(1);\r\n\r\n\tonInit(): void { }\r\n\tonChanges(changes: Factory | Window): void { }\r\n\tonView(): void { }\r\n\tonDestroy(): void { }\r\n\r\n\tpushChanges(): void {\r\n\t\tthis.changes$.next(this);\r\n\t\tthis.onView();\r\n\t}\r\n\r\n\t[key: string]: any; // extensible object\r\n\r\n\tconstructor(...args: any[]) { }\r\n}\r\n\r\nexport function getContext(instance: Factory): IContext {\r\n\treturn CONTEXTS[instance.rxcompId];\r\n}\r\n","import Factory from './factory';\r\n\r\nexport default class Directive extends Factory {\r\n}\r\n","// import Factory, { ExpressionFunction } from '../core/factory';\nimport Directive from '../core/directive';\nimport { getContext } from '../core/factory';\n\nexport default class ClassDirective extends Directive {\n\n\tclass: { [key: string]: string } | string | null = '';\n\tkeys: string[] = [];\n\n\tonInit() {\n\t\tconst { node } = getContext(this);\n\t\tArray.prototype.slice.call(node.classList).forEach(x => this.keys.push(x));\n\t}\n\n\tonChanges() {\n\t\tconst { node } = getContext(this);\n\t\tlet keys: string[] = [];\n\t\tconst object = this.class;\n\t\tif (typeof object === 'object') {\n\t\t\tfor (let key in object) {\n\t\t\t\tif (object[key]) {\n\t\t\t\t\tkeys.push(key);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (typeof object === 'string') {\n\t\t\tkeys = object.split(/\\s+/);\n\t\t}\n\t\tkeys = keys.concat(this.keys);\n\t\t// console.log(keys);\n\t\tnode.setAttribute('class', keys.join(' '));\n\t\t// console.log('ClassDirective.onChanges', keys);\n\t}\n\n}\n\nClassDirective.meta = {\n\tselector: `[[class]]`,\n\tinputs: ['class']\n};\n","import { fromEvent, Observable } from 'rxjs';\r\nimport { shareReplay, takeUntil } from 'rxjs/operators';\r\nimport Directive from '../core/directive';\r\nimport { getContext } from '../core/factory';\r\n\r\nconst EVENTS = ['mousedown', 'mouseup', 'mousemove', 'click', 'dblclick', 'mouseover', 'mouseout', 'mouseenter', 'mouseleave', 'contextmenu', 'touchstart', 'touchmove', 'touchend', 'keydown', 'keyup', 'input', 'change', 'loaded'];\r\n\r\nexport default class EventDirective extends Directive {\r\n\r\n\tevent: string = '';\r\n\r\n\tonInit() {\r\n\t\tconst { module, node, parentInstance, selector } = getContext(this);\r\n\t\t// console.log('parentInstance', parentInstance);\r\n\t\tconst event = this.event = selector.replace(/\\[|\\]|\\(|\\)/g, '');\r\n\t\tconst event$: Observable<Event> = fromEvent<Event>(node, event).pipe(shareReplay(1));\r\n\t\tconst expression = node.getAttribute(`(${event})`);\r\n\t\tif (expression) {\r\n\t\t\tconst outputFunction = module.makeFunction(expression, ['$event']);\r\n\t\t\tevent$.pipe(\r\n\t\t\t\ttakeUntil(this.unsubscribe$)\r\n\t\t\t).subscribe(event => {\r\n\t\t\t\tmodule.resolve(outputFunction, parentInstance, event);\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tparentInstance[`${event}$`] = event$;\r\n\t\t}\r\n\t\t// console.log('EventDirective.onInit', 'selector', selector, 'event', event);\r\n\t}\r\n\r\n}\r\n\r\nEventDirective.meta = {\r\n\tselector: `[(${EVENTS.join(')],[(')})]`,\r\n};\r\n","import Factory from './factory';\r\n\r\nexport default class Structure extends Factory {\r\n}\r\n","\r\nimport Factory, { getContext } from './factory';\r\n\r\nexport default class Component extends Factory {\r\n\r\n\tpushChanges(): void {\r\n\t\tconst { module, node } = getContext(this);\r\n\t\t// console.log(new Error(`pushChanges ${instance.constructor.name}`).stack);\r\n\t\tthis.changes$.next(this);\r\n\t\t// console.log('Module.parse', instance.constructor.name);\r\n\t\t// parse component text nodes\r\n\t\tmodule.parse(node, this);\r\n\t\t// calling onView event\r\n\t\tthis.onView();\r\n\t}\r\n\r\n}\r\n","// import { BehaviorSubject, Subject } from 'rxjs';\r\nimport Component from './component';\r\nimport Factory from './factory';\r\n\r\nconst RESERVED_PROPERTIES = ['constructor', 'rxcompId', 'onInit', 'onChanges', 'onDestroy', 'pushChanges', 'changes$', 'unsubscribe$'];\r\n\r\nexport default class Context extends Component {\r\n\r\n\tconstructor(instance: Factory, descriptors: { [key: string]: PropertyDescriptor } = {}) {\r\n\t\tsuper();\r\n\t\tdescriptors = Context.mergeDescriptors(instance, instance, descriptors);\r\n\t\tdescriptors = Context.mergeDescriptors(Object.getPrototypeOf(instance), instance, descriptors);\r\n\t\tObject.defineProperties(this, descriptors);\r\n\t}\r\n\r\n\tstatic mergeDescriptors(source: Object, instance: Factory, descriptors: { [key: string]: PropertyDescriptor } = {}): { [key: string]: PropertyDescriptor } {\r\n\t\tconst properties: string[] = Object.getOwnPropertyNames(source);\r\n\t\twhile (properties.length) {\r\n\t\t\tconst key: string = properties.shift() as string;\r\n\t\t\tif (RESERVED_PROPERTIES.indexOf(key) === -1 && !descriptors.hasOwnProperty(key)) {\r\n\t\t\t\tconst descriptor: PropertyDescriptor = Object.getOwnPropertyDescriptor(source, key) as PropertyDescriptor;\r\n\t\t\t\tif (typeof descriptor.value == 'function') {\r\n\t\t\t\t\tdescriptor.value = (...args: any[]) => {\r\n\t\t\t\t\t\treturn instance[key].apply(instance, args);\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\tdescriptors[key] = descriptor;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn descriptors;\r\n\t}\r\n\r\n}\r\n","import Context from '../core/context';\r\nimport Factory from '../core/factory';\r\n\r\nexport default class ForItem extends Context {\r\n\r\n\tindex: number;\r\n\tcount: number;\r\n\t[key: string]: any;\r\n\r\n\t// !!! todo: payload options { key, $key, value, $value, index, count }\r\n\r\n\tconstructor(key: string, $key: number | string, value: string, $value: any, index: number, count: number, parentInstance: Factory) {\r\n\t\t// console.log('ForItem', arguments);\r\n\t\tsuper(parentInstance);\r\n\t\t/*\r\n\t\tsuper(parentInstance, {\r\n\t\t\t[key]: {\r\n\t\t\t\tget: function() {\r\n\t\t\t\t\treturn this.$key;\r\n\t\t\t\t},\r\n\t\t\t\tset: function(key) {\r\n\t\t\t\t\tthis.$key = key;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t[value]: {\r\n\t\t\t\tget: function() {\r\n\t\t\t\t\treturn this.$value;\r\n\t\t\t\t},\r\n\t\t\t\tset: function(value) {\r\n\t\t\t\t\tthis.$value = value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\t*/\r\n\t\tthis[key] = $key;\r\n\t\tthis[value] = $value;\r\n\t\tthis.index = index;\r\n\t\tthis.count = count;\r\n\t}\r\n\r\n\tget first(): boolean { return this.index === 0; }\r\n\r\n\tget last(): boolean { return this.index === this.count - 1; }\r\n\r\n\tget even(): boolean { return this.index % 2 === 0; }\r\n\r\n\tget odd(): boolean { return !this.even; }\r\n\r\n}\r\n","import Factory, { getContext } from '../core/factory';\r\nimport Structure from '../core/structure';\r\nimport { ExpressionFunction, IComment, IContext, IElement, IExpressionToken } from '../core/types';\r\nimport Module from '../module/module';\r\nimport ForItem from './for.item';\r\n\r\nexport default class ForStructure extends Structure {\r\n\r\n\tinstances: Factory[] = [];\r\n\tforend?: IComment;\r\n\ttoken?: IExpressionToken;\r\n\tforFunction?: ExpressionFunction;\r\n\r\n\tonInit() {\r\n\t\tconst { module, node } = getContext(this);\r\n\t\tconst forbegin: IComment = document.createComment(`*for begin`);\r\n\t\tforbegin.rxcompId = node.rxcompId;\r\n\t\tnode.parentNode!.replaceChild(forbegin, node);\r\n\t\tconst forend: IComment = this.forend = document.createComment(`*for end`);\r\n\t\tforbegin.parentNode!.insertBefore(forend, forbegin.nextSibling);\r\n\t\tconst expression: string = node.getAttribute('*for')!;\r\n\t\tnode.removeAttribute('*for');\r\n\t\tconst token = this.token = this.getExpressionToken(expression);\r\n\t\tthis.forFunction = module.makeFunction(token.iterable);\r\n\t}\r\n\r\n\tonChanges(changes: Factory | Window) {\r\n\t\tconst context: IContext = getContext(this);\r\n\t\tconst module: Module = context.module;\r\n\t\tconst node: IElement = context.node;\r\n\t\t// resolve\r\n\t\tconst token: IExpressionToken = this.token!;\r\n\t\tlet result = module.resolve(this.forFunction!, changes, this) || [];\r\n\t\tconst isArray = Array.isArray(result);\r\n\t\tconst array: any[] = isArray ? result : Object.keys(result);\r\n\t\tconst total: number = array.length;\r\n\t\tconst previous: number = this.instances.length;\r\n\t\tfor (let i: number = 0; i < Math.max(previous, total); i++) {\r\n\t\t\tif (i < total) {\r\n\t\t\t\tconst key: number | string = isArray ? i : array[i];\r\n\t\t\t\tconst value: any = isArray ? array[key as number] : result[key];\r\n\t\t\t\tif (i < previous) {\r\n\t\t\t\t\t// update\r\n\t\t\t\t\tconst instance: Factory = this.instances[i];\r\n\t\t\t\t\tinstance[token.key] = key;\r\n\t\t\t\t\tinstance[token.value] = value;\r\n\t\t\t\t\t/*\r\n\t\t\t\t\tif (!nextSibling) {\r\n\t\t\t\t\t\tconst context = getContext(instance);\r\n\t\t\t\t\t\tconst node = context.node;\r\n\t\t\t\t\t\tthis.forend.parentNode.insertBefore(node, this.forend);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tnextSibling = nextSibling.nextSibling;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t*/\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// create\r\n\t\t\t\t\tconst clonedNode: IElement = node.cloneNode(true) as IElement;\r\n\t\t\t\t\tdelete clonedNode.rxcompId;\r\n\t\t\t\t\tthis.forend!.parentNode!.insertBefore(clonedNode, this.forend!);\r\n\t\t\t\t\t// !!! todo: check context.parentInstance\r\n\t\t\t\t\tconst args = [token.key, key, token.value, value, i, total, context.parentInstance];\r\n\t\t\t\t\tconst instance = module.makeInstance(clonedNode, ForItem, context.selector, context.parentInstance, args);\r\n\t\t\t\t\tif (instance) {\r\n\t\t\t\t\t\tconst forItemContext = getContext(instance);\r\n\t\t\t\t\t\t// console.log('ForStructure', clonedNode, forItemContext.instance.constructor.name);\r\n\t\t\t\t\t\tmodule.compile(clonedNode, forItemContext.instance);\r\n\t\t\t\t\t\t// nextSibling = clonedNode.nextSibling;\r\n\t\t\t\t\t\tthis.instances.push(instance);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// remove\r\n\t\t\t\tconst instance: Factory = this.instances[i];\r\n\t\t\t\tconst { node } = getContext(instance);\r\n\t\t\t\tnode.parentNode!.removeChild(node);\r\n\t\t\t\tmodule.remove(node);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.instances.length = array.length;\r\n\t\t// console.log('ForStructure', this.instances, token);\r\n\t}\r\n\r\n\tgetExpressionToken(expression: string): IExpressionToken {\r\n\t\tif (expression === null) {\r\n\t\t\tthrow ('invalid for');\r\n\t\t}\r\n\t\tif (expression.trim().indexOf('let ') === -1 || expression.trim().indexOf(' of ') === -1) {\r\n\t\t\tthrow ('invalid for');\r\n\t\t}\r\n\t\tconst expressions: string[] = expression.split(';').map(x => x.trim()).filter(x => x !== '');\r\n\t\tconst forExpressions: string[] = expressions[0].split(' of ').map(x => x.trim());\r\n\t\tlet value: string = forExpressions[0].replace(/\\s*let\\s*/, '');\r\n\t\tconst iterable: string = forExpressions[1];\r\n\t\tlet key: string = 'index';\r\n\t\tconst keyValueMatches: RegExpMatchArray | null = value.match(/\\[(.+)\\s*,\\s*(.+)\\]/);\r\n\t\tif (keyValueMatches) {\r\n\t\t\tkey = keyValueMatches[1];\r\n\t\t\tvalue = keyValueMatches[2];\r\n\t\t}\r\n\t\tif (expressions.length > 1) {\r\n\t\t\tconst indexExpressions: string[] = expressions[1].split(/\\s*let\\s*|\\s*=\\s*index/).map(x => x.trim());\r\n\t\t\tif (indexExpressions.length === 3) {\r\n\t\t\t\tkey = indexExpressions[1];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn { key, value, iterable };\r\n\t}\r\n\r\n}\r\n\r\nForStructure.meta = {\r\n\tselector: '[*for]',\r\n};\r\n","import Directive from '../core/directive';\nimport { getContext } from '../core/factory';\n\nexport default class HrefDirective extends Directive {\n\n\tset href(href: string) {\n\t\tif (this.href_ !== href) {\n\t\t\tthis.href_ = href;\n\t\t\tconst { node } = getContext(this);\n\t\t\thref ? node.setAttribute('href', href) : node.removeAttribute('href');\n\t\t}\n\t}\n\n\tget href(): string {\n\t\treturn this.href_;\n\t}\n\n\t/*\n\tonChanges() {\n\t\tconst { node } = getContext(this);\n\t\tnode.setAttribute('href', this.href || '');\n\t}\n\t*/\n\n}\n\nHrefDirective.meta = {\n\tselector: '[[href]]',\n\tinputs: ['href'],\n};\n","import Factory, { getContext } from '../core/factory';\r\nimport Structure from '../core/structure';\r\nimport { ExpressionFunction, IComment, IElement } from '../core/types';\r\n\r\nexport default class IfStructure extends Structure {\r\n\r\n\tifend?: IComment;\r\n\tifFunction?: ExpressionFunction;\r\n\tclonedNode?: IElement;\r\n\telement?: IElement;\r\n\r\n\tonInit() {\r\n\t\tconst { module, node } = getContext(this);\r\n\t\tconst ifbegin: IComment = this.ifbegin = document.createComment(`*if begin`);\r\n\t\tifbegin.rxcompId = node.rxcompId;\r\n\t\tnode.parentNode!.replaceChild(ifbegin, node);\r\n\t\tconst ifend = this.ifend = document.createComment(`*if end`);\r\n\t\tifbegin.parentNode!.insertBefore(ifend, ifbegin.nextSibling);\r\n\t\tconst expression = node.getAttribute('*if');\r\n\t\tthis.ifFunction = module.makeFunction(expression!);\r\n\t\tconst clonedNode = node.cloneNode(true) as IElement;\r\n\t\tclonedNode.removeAttribute('*if');\r\n\t\tthis.clonedNode = clonedNode;\r\n\t\tthis.element = clonedNode.cloneNode(true) as IElement;\r\n\t\t// console.log('IfStructure.expression', expression);\r\n\t}\r\n\r\n\tonChanges(changes: Factory | Window) {\r\n\t\tconst { module } = getContext(this);\r\n\t\t// console.log('IfStructure.onChanges', changes);\r\n\t\tconst value = module.resolve(this.ifFunction!, changes, this);\r\n\t\tconst element: IElement = this.element!;\r\n\t\tif (value) {\r\n\t\t\tif (!element.parentNode) {\r\n\t\t\t\tconst ifend = this.ifend!;\r\n\t\t\t\tifend.parentNode!.insertBefore(element, ifend);\r\n\t\t\t\tmodule.compile(element);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (element.parentNode) {\r\n\t\t\t\tmodule.remove(element, this);\r\n\t\t\t\telement.parentNode.removeChild(element);\r\n\t\t\t\tthis.element = this.clonedNode!.cloneNode(true) as IElement;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tstatic meta = {\r\n\t\tselector: '[*if]',\r\n\t};\r\n\r\n}\r\n","import Directive from '../core/directive';\nimport { getContext } from '../core/factory';\n\nexport default class InnerHtmlDirective extends Directive {\n\n\tset innerHTML(innerHTML: string) {\n\t\tif (this.innerHTML_ !== innerHTML) {\n\t\t\tthis.innerHTML_ = innerHTML;\n\t\t\tconst { node } = getContext(this);\n\t\t\tnode.innerHTML = innerHTML == undefined ? '' : innerHTML; // !!! keep == loose equality\n\t\t}\n\t}\n\n\tget innerHTML(): string {\n\t\treturn this.innerHTML_;\n\t}\n\n\t/*\n\tonChanges() {\n\t\tconst { node } = getContext(this);\n\t\tnode.innerHTML = this.innerHTML == undefined ? '' : this.innerHTML; // !!! keep == loose equality\n\t}\n\t*/\n\n}\n\nInnerHtmlDirective.meta = {\n\tselector: `[innerHTML]`,\n\tinputs: ['innerHTML'],\n};\n","import { IPipeMeta } from \"./types\";\r\n\r\nexport default class Pipe {\r\n\r\n\tstatic transform(value: any): any {\r\n\t\treturn value;\r\n\t}\r\n\r\n\tstatic meta: IPipeMeta;\r\n}\r\n","import Pipe from '../core/pipe';\n\nexport default class JsonPipe extends Pipe {\n\n\t// !!! todo: Remove circular structures when converting to JSON\n\tstatic transform(value: any): string {\n\t\treturn JSON.stringify(value, null, '\\t');\n\t}\n\n}\n\nJsonPipe.meta = {\n\tname: 'json',\n};\n","import { Observable, Subject } from 'rxjs';\r\nimport { takeUntil, tap } from 'rxjs/operators';\r\nimport Component from '../core/component';\r\nimport Context from '../core/context';\r\nimport Factory, { CONTEXTS, getContext, NODES } from '../core/factory';\r\nimport Structure from '../core/structure';\r\nimport { ExpressionFunction, IContext, IElement, IFactoryMeta, IModuleMeta, IModuleParsedMeta, ISelectorResult, IText, SelectorFunction } from '../core/types';\r\n\r\nlet ID: number = 0;\r\n\r\nexport default class Module {\r\n\r\n\tmeta?: IModuleParsedMeta;\r\n\r\n\tpublic compile(node: IElement, parentInstance?: Factory | Window): Factory[] {\r\n\t\tlet componentNode: IElement;\r\n\t\tconst instances: Factory[] = Module.querySelectorsAll(node, this.meta!.selectors, []).map((match: ISelectorResult) => {\r\n\t\t\tif (componentNode && componentNode !== match.node) {\r\n\t\t\t\tparentInstance = undefined;\r\n\t\t\t}\r\n\t\t\tconst instance: Factory | undefined = this.makeInstance(match.node, match.factory, match.selector, parentInstance);\r\n\t\t\tif (match.factory.prototype instanceof Component) {\r\n\t\t\t\tcomponentNode = match.node;\r\n\t\t\t}\r\n\t\t\treturn instance;\r\n\t\t}).filter((x): x is Factory => x !== undefined);\r\n\t\t// console.log('compile', instances, node, parentInstance);\r\n\t\treturn instances;\r\n\t}\r\n\r\n\tpublic makeInstance(node: IElement, factory: typeof Factory, selector: string, parentInstance?: Factory | Window, args?: any[]): Factory | undefined {\r\n\t\tif (parentInstance || node.parentNode) {\r\n\t\t\tconst meta: IFactoryMeta = factory.meta;\r\n\t\t\t// collect parentInstance scope\r\n\t\t\tparentInstance = parentInstance || this.getParentInstance(node.parentNode);\r\n\t\t\tif (!parentInstance) {\r\n\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\t\t\t// creating factory instance\r\n\t\t\tconst instance = new factory(...(args || []));\r\n\t\t\t// creating instance context\r\n\t\t\tconst context = Module.makeContext(this, instance, parentInstance, node, factory, selector);\r\n\t\t\t// creating component input and outputs\r\n\t\t\tif (meta) {\r\n\t\t\t\tthis.makeHosts(meta, instance, node);\r\n\t\t\t\tcontext.inputs = this.makeInputs(meta, instance);\r\n\t\t\t\tcontext.outputs = this.makeOutputs(meta, instance);\r\n\t\t\t\tif (parentInstance instanceof Factory) {\r\n\t\t\t\t\tthis.resolveInputsOutputs(instance, parentInstance);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// calling onInit event\r\n\t\t\tinstance.onInit();\r\n\t\t\t// subscribe to parent changes\r\n\t\t\tif (parentInstance instanceof Factory) {\r\n\t\t\t\tparentInstance.changes$.pipe(\r\n\t\t\t\t\t// filter(() => node.parentNode),\r\n\t\t\t\t\t// debounceTime(1),\r\n\t\t\t\t\t/*\r\n\t\t\t\t\tdistinctUntilChanged(function(prev, curr) {\r\n\t\t\t\t\t\t// console.log(isComponent, context.inputs);\r\n\t\t\t\t\t\tif (isComponent && meta && Object.keys(context.inputs).length === 0) {\r\n\t\t\t\t\t\t\treturn true; // same\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}),\r\n\t\t\t\t\t*/\r\n\t\t\t\t\ttakeUntil(instance.unsubscribe$)\r\n\t\t\t\t).subscribe((changes: Factory | Window) => {\r\n\t\t\t\t\t// resolve component input outputs\r\n\t\t\t\t\tif (meta) {\r\n\t\t\t\t\t\tthis.resolveInputsOutputs(instance, changes);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// calling onChanges event with changes\r\n\t\t\t\t\tinstance.onChanges(changes);\r\n\t\t\t\t\t// push instance changes for subscribers\r\n\t\t\t\t\tinstance.pushChanges();\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn instance;\r\n\t\t} else {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic makeFunction(expression: string, params: string[] = ['$instance']): ExpressionFunction {\r\n\t\tif (expression) {\r\n\t\t\texpression = Module.parseExpression(expression);\r\n\t\t\t// console.log(expression);\r\n\t\t\tconst args: string = params.join(',');\r\n\t\t\tconst expression_func: ExpressionFunction = new Function(`with(this) {\r\n\t\t\t\treturn (function (${args}, $$module) {\r\n\t\t\t\t\tconst $$pipes = $$module.meta.pipes;\r\n\t\t\t\t\treturn ${expression};\r\n\t\t\t\t}.bind(this)).apply(this, arguments);\r\n\t\t\t}`) as ExpressionFunction;\r\n\t\t\t// console.log(this, $$module, $$pipes, \"${expression}\");\r\n\t\t\t// console.log(expression_func);\r\n\t\t\treturn expression_func;\r\n\t\t} else {\r\n\t\t\treturn () => { return null; };\r\n\t\t}\r\n\t}\r\n\r\n\tpublic resolve(expression: ExpressionFunction, parentInstance: Factory | Window, payload: any): any {\r\n\t\t// console.log(expression, parentInstance, payload);\r\n\t\treturn expression.apply(parentInstance, [payload, this]);\r\n\t}\r\n\r\n\tpublic parse(node: IElement, instance: Factory): void {\r\n\t\tfor (let i: number = 0; i < node.childNodes.length; i++) {\r\n\t\t\tconst child: ChildNode = node.childNodes[i];\r\n\t\t\tif (child.nodeType === 1) {\r\n\t\t\t\tconst element: HTMLElement = child as HTMLElement;\r\n\t\t\t\tconst context: IContext | void = getContextByNode(element);\r\n\t\t\t\tif (!context) {\r\n\t\t\t\t\tthis.parse(element, instance);\r\n\t\t\t\t}\r\n\t\t\t} else if (child.nodeType === 3) {\r\n\t\t\t\tconst text: IText = child as IText;\r\n\t\t\t\tthis.parseTextNode(text, instance);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic remove(node: Node, keepInstance?: Factory): Node {\r\n\t\tconst keepContext: IContext | undefined = keepInstance ? getContext(keepInstance) : undefined;\r\n\t\tModule.traverseDown(node, (node: Node) => {\r\n\t\t\tconst rxcompId: number | undefined = (node as IElement).rxcompId;\r\n\t\t\tif (rxcompId) {\r\n\t\t\t\tconst keepContexts: IContext[] = Module.deleteContext(rxcompId, keepContext);\r\n\t\t\t\tif (keepContexts.length === 0) {\r\n\t\t\t\t\tdelete (node as IElement).rxcompId;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn node;\r\n\t}\r\n\r\n\tpublic destroy(): void {\r\n\t\tthis.remove(this.meta!.node);\r\n\t\tthis.meta!.node.innerHTML = this.meta!.nodeInnerHTML;\r\n\t}\r\n\r\n\tprotected makeContext(instance: Factory, parentInstance: Factory | Window, node: IElement, selector: string): IContext {\r\n\t\tconst context: IContext = Module.makeContext(this, instance, parentInstance, node, instance.constructor as typeof Factory, selector);\r\n\t\t// console.log('Module.makeContext', context, context.instance, context.node);\r\n\t\treturn context;\r\n\t}\r\n\r\n\tprotected getInstance(node: HTMLElement | Document): Factory | Window | undefined {\r\n\t\tif (node instanceof Document) {\r\n\t\t\treturn window; // !!! window or global\r\n\t\t}\r\n\t\tconst context: IContext | undefined = getContextByNode(node);\r\n\t\tif (context) {\r\n\t\t\treturn context.instance;\r\n\t\t} else {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t}\r\n\r\n\tprotected getParentInstance(node: Node | null): Factory | Window {\r\n\t\treturn Module.traverseUp(node, (node: Node) => {\r\n\t\t\treturn this.getInstance(node as HTMLElement);\r\n\t\t});\r\n\t}\r\n\r\n\t// reduce(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: T[]) => T, initialValue: T): T;\r\n\r\n\tprotected parseTextNode(node: IText, instance: Factory): void {\r\n\t\tlet expressions: (ExpressionFunction | string)[] | undefined = node.nodeExpressions;\r\n\t\tif (!expressions) {\r\n\t\t\texpressions = this.parseTextNodeExpression(node.wholeText);\r\n\t\t}\r\n\t\tconst replacedText: string = expressions.reduce((p: string, c: ExpressionFunction | string) => {\r\n\t\t\tlet text: string;\r\n\t\t\tif (typeof c === 'function') { // instanceOf ExpressionFunction ?;\r\n\t\t\t\ttext = this.resolve(c as ExpressionFunction, instance, instance);\r\n\t\t\t\tif (text == undefined) { // !!! keep == loose equality\r\n\t\t\t\t\ttext = '';\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\ttext = c;\r\n\t\t\t}\r\n\t\t\treturn p + text;\r\n\t\t}, '');\r\n\t\tif (node.nodeValue !== replacedText) {\r\n\t\t\tconst textNode: IText = document.createTextNode(replacedText) as IText;\r\n\t\t\ttextNode.nodeExpressions = expressions;\r\n\t\t\tnode.parentNode!.replaceChild(textNode, node);\r\n\t\t}\r\n\t}\r\n\r\n\tprotected pushFragment(nodeValue: string, from: number, to: number, expressions: (ExpressionFunction | string)[]): void {\r\n\t\tconst fragment: string = nodeValue.substring(from, to);\r\n\t\texpressions.push(fragment);\r\n\t}\r\n\r\n\tprotected parseTextNodeExpression(nodeValue: string): (ExpressionFunction | string)[] {\r\n\t\tconst expressions: (ExpressionFunction | string)[] = [];\r\n\t\tconst regex: RegExp = /\\{{2}((([^{}])|(\\{([^{}]|(\\{.*?\\}))+?\\}))*?)\\}{2}/g;\r\n\t\tlet lastIndex: number = 0,\r\n\t\t\tmatches: RegExpExecArray | null;\r\n\t\twhile ((matches = regex.exec(nodeValue)) !== null) {\r\n\t\t\tconst index: number = regex.lastIndex - matches[0].length;\r\n\t\t\tif (index > lastIndex) {\r\n\t\t\t\tthis.pushFragment(nodeValue, index, lastIndex, expressions);\r\n\t\t\t}\r\n\t\t\tlastIndex = regex.lastIndex;\r\n\t\t\tconst expression: ExpressionFunction = this.makeFunction(matches[1]);\r\n\t\t\texpressions.push(expression);\r\n\t\t}\r\n\t\tconst length: number = nodeValue.length;\r\n\t\tif (length > lastIndex) {\r\n\t\t\tthis.pushFragment(nodeValue, lastIndex, length, expressions);\r\n\t\t}\r\n\t\treturn expressions;\r\n\t}\r\n\r\n\tprotected makeHosts(meta: IFactoryMeta, instance: Factory, node: IElement): void {\r\n\t\tif (meta.hosts) {\r\n\t\t\tObject.keys(meta.hosts).forEach((key: string) => {\r\n\t\t\t\tconst factory: typeof Factory = meta.hosts![key];\r\n\t\t\t\tinstance[key] = getHost(instance, factory, node);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tprotected makeInput(instance: Factory, key: string): ExpressionFunction | null {\r\n\t\tconst { node } = getContext(instance);\r\n\t\tlet input: ExpressionFunction | null = null,\r\n\t\t\texpression: string | null = null;\r\n\t\tif (node.hasAttribute(`[${key}]`)) {\r\n\t\t\texpression = node.getAttribute(`[${key}]`)!;\r\n\t\t} else if (node.hasAttribute(key)) {\r\n\t\t\t// const attribute = node.getAttribute(key).replace(/{{/g, '\"+').replace(/}}/g, '+\"');\r\n\t\t\tconst attribute: string = node.getAttribute(key)!.replace(/({{)|(}})|(\")/g, function (substring: string, a, b, c) {\r\n\t\t\t\tif (a) {\r\n\t\t\t\t\treturn '\"+';\r\n\t\t\t\t}\r\n\t\t\t\tif (b) {\r\n\t\t\t\t\treturn '+\"';\r\n\t\t\t\t}\r\n\t\t\t\tif (c) {\r\n\t\t\t\t\treturn '\\\"';\r\n\t\t\t\t}\r\n\t\t\t\treturn '';\r\n\t\t\t});\r\n\t\t\texpression = `\"${attribute}\"`;\r\n\t\t}\r\n\t\tif (expression) {\r\n\t\t\tinput = this.makeFunction(expression);\r\n\t\t}\r\n\t\treturn input;\r\n\t}\r\n\r\n\tprotected makeInputs(meta: IFactoryMeta, instance: Factory): { [key: string]: ExpressionFunction } {\r\n\t\tconst inputs: { [key: string]: ExpressionFunction } = {};\r\n\t\tif (meta.inputs) {\r\n\t\t\tmeta.inputs.forEach((key: string, i: number) => {\r\n\t\t\t\tconst input = this.makeInput(instance, key);\r\n\t\t\t\tif (input) {\r\n\t\t\t\t\tinputs[key] = input;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn inputs;\r\n\t}\r\n\r\n\tprotected makeOutput(instance: Factory, key: string): Observable<any> {\r\n\t\tconst context: IContext = getContext(instance);\r\n\t\tconst node: IElement = context.node;\r\n\t\tconst parentInstance: Factory | Window = context.parentInstance;\r\n\t\tconst expression: string | null = node.getAttribute(`(${key})`);\r\n\t\tconst outputFunction: ExpressionFunction | null = expression ? this.makeFunction(expression, ['$event']) : null;\r\n\t\tconst output$: Observable<any> = new Subject<any>().pipe(\r\n\t\t\ttap((event) => {\r\n\t\t\t\tif (outputFunction) {\r\n\t\t\t\t\t// console.log(expression, parentInstance);\r\n\t\t\t\t\tthis.resolve(outputFunction, parentInstance, event);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\t\toutput$.pipe(\r\n\t\t\ttakeUntil(instance.unsubscribe$)\r\n\t\t).subscribe();\r\n\t\tinstance[key] = output$;\r\n\t\treturn output$;\r\n\t}\r\n\r\n\tprotected makeOutputs(meta: IFactoryMeta, instance: Factory): { [key: string]: Observable<any> } {\r\n\t\tconst outputs: { [key: string]: Observable<any> } = {};\r\n\t\tif (meta.outputs) {\r\n\t\t\tmeta.outputs.forEach((key: string) => {\r\n\t\t\t\tconst output = this.makeOutput(instance, key);\r\n\t\t\t\tif (output) {\r\n\t\t\t\t\toutputs[key] = output;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn outputs;\r\n\t}\r\n\r\n\tprotected resolveInputsOutputs(instance: Factory, changes: Factory | Window): void {\r\n\t\tconst context: IContext = getContext(instance);\r\n\t\tconst parentInstance: Factory | Window = context.parentInstance;\r\n\t\tconst inputs: { [key: string]: ExpressionFunction } = context.inputs!;\r\n\t\tfor (let key in inputs) {\r\n\t\t\tconst inputFunction: ExpressionFunction = inputs[key];\r\n\t\t\tconst value: any = this.resolve(inputFunction, parentInstance, instance);\r\n\t\t\tinstance[key] = value;\r\n\t\t}\r\n\t}\r\n\r\n\tprotected static parseExpression(expression: string): string {\r\n\t\tconst l: string = '┌';\r\n\t\tconst r: string = '┘';\r\n\t\tconst rx1: RegExp = /(\\()([^\\(\\)]*)(\\))/;\r\n\t\twhile (expression.match(rx1)) {\r\n\t\t\texpression = expression.replace(rx1, function (substring: string, ...args: any[]) {\r\n\t\t\t\treturn `${l}${Module.parsePipes(args[1])}${r}`;\r\n\t\t\t});\r\n\t\t}\r\n\t\texpression = Module.parsePipes(expression);\r\n\t\texpression = expression.replace(/(┌)|(┘)/g, function (substring: string, ...args) {\r\n\t\t\treturn args[0] ? '(' : ')';\r\n\t\t});\r\n\t\treturn Module.parseOptionalChaining(expression);\r\n\t}\r\n\r\n\tprotected static parsePipes(expression: string): string {\r\n\t\tconst l: string = '┌';\r\n\t\tconst r: string = '┘';\r\n\t\tconst rx1: RegExp = /(.*?[^\\|])\\|([^\\|]+)/;\r\n\t\twhile (expression.match(rx1)) {\r\n\t\t\texpression = expression.replace(rx1, function (substring: string, ...args: any[]) {\r\n\t\t\t\tconst value: string = args[0].trim();\r\n\t\t\t\tconst params: string[] = Module.parsePipeParams(args[1]);\r\n\t\t\t\tconst func: string = params.shift()!.trim();\r\n\t\t\t\treturn `$$pipes.${func}.transform${l}${[value, ...params]}${r}`;\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn expression;\r\n\t}\r\n\r\n\tprotected static parsePipeParams(expression: string): string[] {\r\n\t\tconst segments: string[] = [];\r\n\t\tlet i: number = 0,\r\n\t\t\tword: string = '',\r\n\t\t\tblock: number = 0;\r\n\t\tconst t: number = expression.length;\r\n\t\twhile (i < t) {\r\n\t\t\tconst c: string = expression.substr(i, 1);\r\n\t\t\tif (c === '{' || c === '(' || c === '[') {\r\n\t\t\t\tblock++;\r\n\t\t\t}\r\n\t\t\tif (c === '}' || c === ')' || c === ']') {\r\n\t\t\t\tblock--;\r\n\t\t\t}\r\n\t\t\tif (c === ':' && block === 0) {\r\n\t\t\t\tif (word.length) {\r\n\t\t\t\t\tsegments.push(word.trim());\r\n\t\t\t\t}\r\n\t\t\t\tword = '';\r\n\t\t\t} else {\r\n\t\t\t\tword += c;\r\n\t\t\t}\r\n\t\t\ti++;\r\n\t\t}\r\n\t\tif (word.length) {\r\n\t\t\tsegments.push(word.trim());\r\n\t\t}\r\n\t\treturn segments;\r\n\t}\r\n\r\n\tprotected static parseOptionalChaining(expression: string): string {\r\n\t\tconst regex: RegExp = /(\\w+(\\?\\.))+([\\.|\\w]+)/g;\r\n\t\tlet previous: string;\r\n\t\texpression = expression.replace(regex, function (substring: string, ...args: any[]) {\r\n\t\t\tconst tokens: string[] = substring.split('?.');\r\n\t\t\tfor (let i: number = 0; i < tokens.length - 1; i++) {\r\n\t\t\t\tconst a: string = i > 0 ? `(${tokens[i]} = ${previous})` : tokens[i];\r\n\t\t\t\tconst b: string = tokens[i + 1];\r\n\t\t\t\tprevious = i > 0 ? `${a}.${b}` : `(${a} ? ${a}.${b} : void 0)`;\r\n\t\t\t}\r\n\t\t\treturn previous || '';\r\n\t\t});\r\n\t\treturn expression;\r\n\t}\r\n\r\n\tprotected static makeContext(module: Module, instance: Factory, parentInstance: Factory | Window, node: IElement, factory: typeof Factory, selector: string): IContext {\r\n\t\tinstance.rxcompId = ++ID;\r\n\t\tconst context: IContext = { module, instance, parentInstance, node, factory, selector };\r\n\t\tconst rxcompNodeId = node.rxcompId = (node.rxcompId || instance.rxcompId);\r\n\t\tconst nodeContexts = NODES[rxcompNodeId] || (NODES[rxcompNodeId] = []);\r\n\t\tnodeContexts.push(context);\r\n\t\tCONTEXTS[instance.rxcompId] = context;\r\n\t\treturn context;\r\n\t}\r\n\r\n\tprotected static deleteContext(id: number, keepContext: IContext | undefined): IContext[] {\r\n\t\tconst keepContexts: IContext[] = [];\r\n\t\tconst nodeContexts: IContext[] = NODES[id];\r\n\t\tif (nodeContexts) {\r\n\t\t\tnodeContexts.forEach((context: IContext) => {\r\n\t\t\t\tif (context === keepContext) {\r\n\t\t\t\t\tkeepContexts.push(keepContext);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst instance: Factory = context.instance;\r\n\t\t\t\t\tinstance.unsubscribe$.next();\r\n\t\t\t\t\tinstance.unsubscribe$.complete();\r\n\t\t\t\t\tinstance.onDestroy();\r\n\t\t\t\t\tdelete CONTEXTS[instance.rxcompId];\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif (keepContexts.length) {\r\n\t\t\t\tNODES[id] = keepContexts;\r\n\t\t\t} else {\r\n\t\t\t\tdelete NODES[id];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn keepContexts;\r\n\t}\r\n\r\n\tprotected static matchSelectors(node: HTMLElement, selectors: SelectorFunction[], results: ISelectorResult[]): ISelectorResult[] {\r\n\t\tfor (let i: number = 0; i < selectors.length; i++) {\r\n\t\t\tconst selectorResult: ISelectorResult | false = selectors[i](node);\r\n\t\t\tif (selectorResult) {\r\n\t\t\t\tconst factory: typeof Factory = selectorResult.factory;\r\n\t\t\t\tif (factory.prototype instanceof Component && factory.meta.template) {\r\n\t\t\t\t\tnode.innerHTML = factory.meta.template;\r\n\t\t\t\t}\r\n\t\t\t\tresults.push(selectorResult);\r\n\t\t\t\tif (factory.prototype instanceof Structure) {\r\n\t\t\t\t\t// console.log('Structure', node);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn results;\r\n\t}\r\n\r\n\tprotected static querySelectorsAll(node: Node, selectors: SelectorFunction[], results: ISelectorResult[]): ISelectorResult[] {\r\n\t\tif (node.nodeType === 1) {\r\n\t\t\tconst selectorResults: ISelectorResult[] = this.matchSelectors(node as HTMLElement, selectors, []);\r\n\t\t\tresults = results.concat(selectorResults);\r\n\t\t\tconst structure: ISelectorResult | undefined = selectorResults.find(x => x.factory.prototype instanceof Structure);\r\n\t\t\tif (structure) {\r\n\t\t\t\treturn results;\r\n\t\t\t}\r\n\t\t\tconst childNodes: NodeListOf<ChildNode> = node.childNodes;\r\n\t\t\tfor (let i: number = 0; i < childNodes.length; i++) {\r\n\t\t\t\tresults = this.querySelectorsAll(childNodes[i], selectors, results);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn results;\r\n\t}\r\n\r\n\tprotected static traverseUp(node: Node | null, callback: (node: Node, i: number) => any, i: number = 0): any {\r\n\t\tif (!node) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst result = callback(node, i);\r\n\t\tif (result) {\r\n\t\t\treturn result;\r\n\t\t}\r\n\t\treturn this.traverseUp(node.parentNode, callback, i + 1);\r\n\t}\r\n\r\n\tprotected static traverseDown(node: Node | null, callback: (node: Node, i: number) => any, i: number = 0): any {\r\n\t\tif (!node) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet result = callback(node, i);\r\n\t\tif (result) {\r\n\t\t\treturn result;\r\n\t\t}\r\n\t\tif (node.nodeType === 1) {\r\n\t\t\tlet j = 0,\r\n\t\t\t\tt = node.childNodes.length;\r\n\t\t\twhile (j < t && !result) {\r\n\t\t\t\tresult = this.traverseDown(node.childNodes[j], callback, i + 1);\r\n\t\t\t\tj++;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\tprotected static traversePrevious(node: Node | null, callback: (node: Node, i: number) => any, i: number = 0): any {\r\n\t\tif (!node) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst result = callback(node, i);\r\n\t\tif (result) {\r\n\t\t\treturn result;\r\n\t\t}\r\n\t\treturn this.traversePrevious(node.previousSibling, callback, i + 1);\r\n\t}\r\n\r\n\tprotected static traverseNext(node: Node | null, callback: (node: Node, i: number) => any, i: number = 0): any {\r\n\t\tif (!node) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst result = callback(node, i);\r\n\t\tif (result) {\r\n\t\t\treturn result;\r\n\t\t}\r\n\t\treturn this.traverseNext(node.nextSibling, callback, i + 1);\r\n\t}\r\n\r\n\tstatic meta: IModuleMeta;\r\n\r\n}\r\n\r\nexport function getContextByNode(node: Node): IContext | undefined {\r\n\tlet context: IContext | undefined;\r\n\tconst rxcompId: number | undefined = (node as IElement).rxcompId;\r\n\tif (rxcompId) {\r\n\t\tconst nodeContexts: IContext[] = NODES[rxcompId];\r\n\t\tif (nodeContexts) {\r\n\t\t\tcontext = nodeContexts.reduce((previous: IContext | undefined, current: IContext) => {\r\n\t\t\t\tif (current.factory.prototype instanceof Component) {\r\n\t\t\t\t\treturn current;\r\n\t\t\t\t} else if (current.factory.prototype instanceof Context) {\r\n\t\t\t\t\treturn previous ? previous : current;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn previous;\r\n\t\t\t\t}\r\n\t\t\t}, undefined);\r\n\t\t\t// console.log(node.rxcompId, context);\r\n\t\t}\r\n\t}\r\n\treturn context;\r\n}\r\n\r\nexport function getHost(instance: Factory, factory: typeof Factory, node: IElement): Factory | undefined {\r\n\tif (!node) {\r\n\t\tnode = getContext(instance).node;\r\n\t}\r\n\tif (node.rxcompId) {\r\n\t\tconst nodeContexts: IContext[] = NODES[node.rxcompId];\r\n\t\tif (nodeContexts) {\r\n\t\t\t// console.log(nodeContexts);\r\n\t\t\tfor (let i: number = 0; i < nodeContexts.length; i++) {\r\n\t\t\t\tconst context: IContext = nodeContexts[i];\r\n\t\t\t\tif (context.instance !== instance) {\r\n\t\t\t\t\t// console.log(context.instance, instance);\r\n\t\t\t\t\tif (context.instance instanceof factory) {\r\n\t\t\t\t\t\treturn context.instance;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (node.parentNode) {\r\n\t\treturn getHost(instance, factory, node.parentNode as IElement);\r\n\t} else {\r\n\t\treturn undefined;\r\n\t}\r\n}\r\n","import Directive from '../core/directive';\nimport { getContext } from '../core/factory';\n\nexport default class SrcDirective extends Directive {\n\n\tset src(src: string) {\n\t\tif (this.src_ !== src) {\n\t\t\tthis.src_ = src;\n\t\t\tconst { node } = getContext(this);\n\t\t\tsrc ? node.setAttribute('src', src) : node.removeAttribute('src');\n\t\t}\n\t}\n\n\tget src(): string {\n\t\treturn this.src_;\n\t}\n\n\t/*\n\tonChanges() {\n\t\tconst { node } = getContext(this);\n\t\tif (this.src) {\n\t\t\tif (node.getAttribute('src') !== this.src) {\n\t\t\t\tnode.setAttribute('src', this.src);\n\t\t\t}\n\t\t} else {\n\t\t\tnode.removeAttribute('src');\n\t\t}\n\t}\n\t*/\n\n}\n\nSrcDirective.meta = {\n\tselector: '[[src]]',\n\tinputs: ['src'],\n};\n","import Directive from '../core/directive';\r\nimport { getContext } from '../core/factory';\r\n\r\nexport default class StyleDirective extends Directive {\r\n\r\n\tstyle?: { [key: string]: string } | null;\r\n\tpreviousStyle?: { [key: string]: string } | null;\r\n\r\n\tonChanges() {\r\n\t\tconst { node } = getContext(this);\r\n\t\tconst style = this.style;\r\n\t\tconst previousStyle = this.previousStyle;\r\n\t\tif (previousStyle) {\r\n\t\t\tfor (let key in previousStyle) {\r\n\t\t\t\tif (!style || !style[key]) {\r\n\t\t\t\t\tconst splitted: string[] = key.split('.');\r\n\t\t\t\t\tconst propertyName = splitted.shift();\r\n\t\t\t\t\tnode.style.removeProperty(propertyName!);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (style) {\r\n\t\t\tfor (let key in style) {\r\n\t\t\t\tif (!previousStyle || previousStyle[key] !== style[key]) {\r\n\t\t\t\t\tconst splitted: string[] = key.split('.');\r\n\t\t\t\t\tconst propertyName = splitted.shift();\r\n\t\t\t\t\tconst value = style[key] + (splitted.length ? splitted[0] : '');\r\n\t\t\t\t\t// console.log(propertyName, value, style, key, style[key]);\r\n\t\t\t\t\tnode.style.setProperty(propertyName!, value);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.previousStyle = style;\r\n\t\t// console.log('StyleDirective.onChanges', style);\r\n\t}\r\n\r\n}\r\n\r\nStyleDirective.meta = {\r\n\tselector: `[[style]]`,\r\n\tinputs: ['style']\r\n};\r\n","\r\nimport ClassDirective from './class/class.directive';\r\nimport Factory from './core/factory';\r\nimport Pipe from './core/pipe';\r\nimport EventDirective from './event/event.directive';\r\nimport ForStructure from './for/for.structure';\r\nimport HrefDirective from './href/href.directive';\r\nimport IfStructure from './if/if.structure';\r\nimport InnerHtmlDirective from './inner-html/inner-html.directive';\r\nimport JsonPipe from './json/json.pipe';\r\nimport Module from './module/module';\r\nimport SrcDirective from './src/src.directive';\r\nimport StyleDirective from './style/style.directive';\r\n\r\nconst factories: typeof Factory[] = [\r\n\tClassDirective,\r\n\tEventDirective,\r\n\tForStructure,\r\n\tHrefDirective,\r\n\tIfStructure,\r\n\tInnerHtmlDirective,\r\n\tSrcDirective,\r\n\tStyleDirective,\r\n];\r\n\r\nconst pipes: typeof Pipe[] = [\r\n\tJsonPipe,\r\n];\r\n\r\nexport default class CoreModule extends Module {\r\n\r\n\tstatic meta = {\r\n\t\tdeclarations: [\r\n\t\t\t...factories,\r\n\t\t\t...pipes,\r\n\t\t],\r\n\t\texports: [\r\n\t\t\t...factories,\r\n\t\t\t...pipes,\r\n\t\t]\r\n\t};\r\n\r\n}\r\n","import Component from '../core/component';\r\nimport Directive from '../core/directive';\r\nimport Factory from '../core/factory';\r\nimport Pipe from '../core/pipe';\r\nimport Structure from '../core/structure';\r\nimport { FactoryList, IElement, IModuleParsedImportedMeta, IModuleParsedMeta, ISelectorResult, MatchFunction, PipeList, PipeMap, SelectorFunction } from '../core/types';\r\nimport Module from '../module/module';\r\n\r\nconst ORDER: FactoryList = [Structure, Component, Directive];\r\n\r\nexport default class Platform {\r\n\r\n\tstatic bootstrap(moduleFactory?: typeof Module): Module {\r\n\t\tif (!moduleFactory) {\r\n\t\t\tthrow ('missing moduleFactory');\r\n\t\t}\r\n\t\tif (!moduleFactory.meta) {\r\n\t\t\tthrow ('missing moduleFactory meta');\r\n\t\t}\r\n\t\tif (!moduleFactory.meta.bootstrap) {\r\n\t\t\tthrow ('missing bootstrap');\r\n\t\t}\r\n\t\tif (!moduleFactory.meta.bootstrap.meta) {\r\n\t\t\tthrow ('missing bootstrap meta');\r\n\t\t}\r\n\t\tif (!moduleFactory.meta.bootstrap.meta.selector) {\r\n\t\t\tthrow ('missing bootstrap meta selector');\r\n\t\t}\r\n\t\tconst meta: IModuleParsedMeta = this.resolveMeta(moduleFactory!);\r\n\t\tconst module = new moduleFactory();\r\n\t\tmodule.meta = meta;\r\n\t\tconst instances = module.compile(meta.node, window);\r\n\t\tconst root = instances[0];\r\n\t\t// if (root instanceof module.meta.bootstrap) {\r\n\t\troot.pushChanges();\r\n\t\t// }\r\n\t\treturn module;\r\n\t}\r\n\r\n\tstatic isBrowser(): boolean {\r\n\t\treturn Boolean(window);\r\n\t}\r\n\r\n\t// static isServer() {}\r\n\r\n\tprotected static querySelector(selector: string): IElement | null {\r\n\t\treturn document.querySelector(selector);\r\n\t}\r\n\r\n\tprotected static resolveMeta(moduleFactory: typeof Module): IModuleParsedMeta {\r\n\t\tconst meta: IModuleParsedImportedMeta = this.resolveImportedMeta(moduleFactory);\r\n\t\tconst bootstrap: typeof Factory = moduleFactory.meta.bootstrap!;\r\n\t\tconst node = this.querySelector(bootstrap.meta.selector!);\r\n\t\tif (!node) {\r\n\t\t\tthrow (`missing node ${bootstrap.meta.selector}`);\r\n\t\t}\r\n\t\tconst nodeInnerHTML = node.innerHTML;\r\n\t\tconst pipes = this.resolvePipes(meta);\r\n\t\tconst factories = this.resolveFactories(meta);\r\n\t\tthis.sortFactories(factories);\r\n\t\tfactories.unshift(bootstrap);\r\n\t\tconst selectors = this.unwrapSelectors(factories);\r\n\t\treturn { factories, pipes, selectors, bootstrap, node, nodeInnerHTML };\r\n\t}\r\n\r\n\tprotected static resolveImportedMeta(moduleFactory: typeof Module): IModuleParsedImportedMeta {\r\n\t\tconst meta: IModuleParsedImportedMeta = Object.assign({\r\n\t\t\timports: [],\r\n\t\t\tdeclarations: [],\r\n\t\t\tpipes: [],\r\n\t\t\texports: []\r\n\t\t}, moduleFactory.meta);\r\n\t\tmeta.imports = (moduleFactory.meta.imports || []).map(moduleFactory => this.resolveImportedMeta(moduleFactory));\r\n\t\treturn meta;\r\n\t}\r\n\r\n\tprotected static resolvePipes(meta: IModuleParsedImportedMeta, exported?: boolean): PipeMap {\r\n\t\tconst importedPipes: PipeMap[] = meta.imports.map((importMeta: IModuleParsedImportedMeta) => this.resolvePipes(importMeta, true));\r\n\t\tconst pipes: PipeMap = {};\r\n\t\tconst pipeList: PipeList = (exported ? meta.exports : meta.declarations).filter((x): x is typeof Pipe => x.prototype instanceof Pipe);\r\n\t\tpipeList.forEach(pipeFactory => pipes[pipeFactory.meta.name] = pipeFactory);\r\n\t\treturn Object.assign({}, ...importedPipes, pipes);\r\n\t}\r\n\r\n\tprotected static resolveFactories(meta: IModuleParsedImportedMeta, exported?: boolean): FactoryList {\r\n\t\tconst importedFactories: FactoryList[] = meta.imports.map((importMeta: any) => this.resolveFactories(importMeta, true));\r\n\t\tconst factoryList: FactoryList = (exported ? meta.exports : meta.declarations).filter((x): x is typeof Factory => x.prototype instanceof Factory);\r\n\t\treturn Array.prototype.concat.call(factoryList, ...importedFactories);\r\n\t}\r\n\r\n\tprotected static sortFactories(factories: FactoryList): void {\r\n\t\tfactories.sort((a, b) => {\r\n\t\t\tconst ai = ORDER.reduce((p, c, i) => a.prototype instanceof c ? i : p, -1);\r\n\t\t\tconst bi = ORDER.reduce((p, c, i) => b.prototype instanceof c ? i : p, -1);\r\n\t\t\t// return ai - bi;\r\n\t\t\tconst o = ai - bi;\r\n\t\t\tif (o === 0) {\r\n\t\t\t\treturn (a.meta.hosts ? 1 : 0) - (b.meta.hosts ? 1 : 0);\r\n\t\t\t}\r\n\t\t\treturn o;\r\n\t\t});\r\n\t}\r\n\r\n\tprotected static getExpressions(selector: string): MatchFunction[] {\r\n\t\tlet matchers: ((node: HTMLElement) => boolean)[] = [];\r\n\t\tselector.replace(/\\.([\\w\\-\\_]+)|\\[(.+?\\]*)(\\=)(.*?)\\]|\\[(.+?\\]*)\\]|([\\w\\-\\_]+)/g, function (value: string, c1, a2, u3, v4, a5, e6) {\r\n\t\t\tif (c1) {\r\n\t\t\t\tmatchers.push(function (node) {\r\n\t\t\t\t\treturn node.classList.contains(c1);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif (a2) {\r\n\t\t\t\tmatchers.push(function (node) {\r\n\t\t\t\t\treturn (node.hasAttribute(a2) && node.getAttribute(a2) === v4) ||\r\n\t\t\t\t\t\t(node.hasAttribute(`[${a2}]`) && node.getAttribute(`[${a2}]`) === v4);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif (a5) {\r\n\t\t\t\tmatchers.push(function (node) {\r\n\t\t\t\t\treturn node.hasAttribute(a5) || node.hasAttribute(`[${a5}]`);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif (e6) {\r\n\t\t\t\tmatchers.push(function (node) {\r\n\t\t\t\t\treturn node.nodeName.toLowerCase() === e6.toLowerCase();\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn '';\r\n\t\t});\r\n\t\treturn matchers;\r\n\t}\r\n\r\n\tprotected static unwrapSelectors(factories: FactoryList): SelectorFunction[] {\r\n\t\tconst selectors: SelectorFunction[] = [];\r\n\t\tfactories.forEach((factory: typeof Factory) => {\r\n\t\t\tif (factory.meta && factory.meta.selector) {\r\n\t\t\t\tfactory.meta.selector.split(',').forEach((selector: string) => {\r\n\t\t\t\t\tselector = selector.trim();\r\n\t\t\t\t\tlet excludes: MatchFunction[] = [];\r\n\t\t\t\t\tconst matchSelector = selector.replace(/\\:not\\((.+?)\\)/g, (value, unmatchSelector) => {\r\n\t\t\t\t\t\texcludes = this.getExpressions(unmatchSelector);\r\n\t\t\t\t\t\treturn '';\r\n\t\t\t\t\t});\r\n\t\t\t\t\tconst includes: MatchFunction[] = this.getExpressions(matchSelector);\r\n\t\t\t\t\tselectors.push((node) => {\r\n\t\t\t\t\t\tconst included = includes.reduce((p, match) => {\r\n\t\t\t\t\t\t\treturn p && match(node);\r\n\t\t\t\t\t\t}, true);\r\n\t\t\t\t\t\tconst excluded = excludes.reduce((p, match) => {\r\n\t\t\t\t\t\t\treturn p || match(node);\r\n\t\t\t\t\t\t}, false);\r\n\t\t\t\t\t\tif (included && !excluded) {\r\n\t\t\t\t\t\t\treturn { node, factory, selector } as ISelectorResult;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn selectors;\r\n\t}\r\n\r\n}\r\n","import Platform from './platform';\r\n\r\nexport default class Browser extends Platform { }\r\n","import { interval } from 'rxjs';\r\nimport { take, takeUntil } from 'rxjs/operators';\r\nimport { Browser, Component, CoreModule, Module, Pipe } from '../../src/rxcomp';\r\n\r\n// component\r\nclass RootComponent extends Component {\r\n\tflag = false;\r\n\tnested = [\r\n\t\t{ items: [1, 2, 3, 4] },\r\n\t\t{ items: [1, 2, 3, 4] },\r\n\t\t{ items: [1, 2, 3, 4] }\r\n\t];\r\n\titems = [1, 2, 3, 4];\r\n\tobject = { a: 1, b: { c: 2 } };\r\n\r\n\tonInit() {\r\n\r\n\t\tif (true) {\r\n\t\t\tinterval(1000).pipe(\r\n\t\t\t\ttake(1000),\r\n\t\t\t\ttakeUntil(this.unsubscribe$)\r\n\t\t\t).subscribe(items => {\r\n\t\t\t\tthis.flag = !this.flag;\r\n\t\t\t\tthis.pushChanges();\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t/*\r\n\t\tinterval(50).pipe(\r\n\t\t\ttake(1000),\r\n\t\t\ttakeUntil(this.unsubscribe$)\r\n\t\t).subscribe(items => {\r\n\t\t\tthis.items = new Array(1 + Math.floor(Math.random() * 9)).fill(0).map((x, i) => i + 1);\r\n\t\t\tthis.pushChanges();\r\n\t\t});\r\n\t\t*/\r\n\t}\r\n\r\n\tgetColor(index: number): string {\r\n\t\treturn ['red', 'green', 'blue'][index % 3];\r\n\t}\r\n}\r\nRootComponent.meta = {\r\n\tselector: '[root-component]',\r\n};\r\n\r\n// pipe\r\nclass ExamplePipe extends Pipe {\r\n\tstatic transform(value: number): number {\r\n\t\treturn value * 2;\r\n\t}\r\n}\r\nExamplePipe.meta = {\r\n\tname: 'example',\r\n};\r\n\r\nclass AppModule extends Module { }\r\nAppModule.meta = {\r\n\timports: [\r\n\t\tCoreModule\r\n\t],\r\n\tdeclarations: [\r\n\t\tExamplePipe,\r\n\t],\r\n\tbootstrap: RootComponent,\r\n};\r\n\r\nBrowser.bootstrap(AppModule);\r\n"]}