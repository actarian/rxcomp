{"version":3,"sources":["test/js/test.scope.ts","../../src/core/factory.ts","../../src/core/directive.ts","../../src/core/component.ts","../../src/core/context.ts","../../src/core/structure.ts","../../src/module/module.ts","../../src/class/class.directive.ts","../../src/event/event.directive.ts","../../src/for/for.item.ts","../../src/for/for.structure.ts","../../src/href/href.directive.ts","../../src/if/if.structure.ts","../../src/inner-html/inner-html.directive.ts","../../src/core/pipe.ts","../../src/json/json.pipe.ts","../../src/src/src.directive.ts","../../src/style/style.directive.ts","../../src/core.module.ts","../../src/platform/platform.ts","../../src/platform/browser.ts","../../test/js/test.scope.ts"],"names":["rxjs","operators","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_inheritsLoose","subClass","superClass","prototype","create","constructor","__proto__","_setPrototypeOf","o","p","setPrototypeOf","isNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","toString","call","e","_construct","Parent","args","Class","a","push","apply","instance","Function","bind","arguments","Factory","Directive","_Factory","this","Component","RESERVED_PROPERTIES","Context","descriptors","_this","_Component","mergeDescriptors","getPrototypeOf","defineProperties","self","ReferenceError","_assertThisInitialized","source","properties","getOwnPropertyNames","_loop","shift","indexOf","hasOwnProperty","getOwnPropertyDescriptor","value","_len","Structure","ID","CONTEXTS","NODES","Module","_proto","compile","node","parentInstance","componentNode","querySelectorsAll","meta","selectors","map","match","undefined","makeInstance","factory","selector","filter","x","_this2","parentNode","isComponent","getParentInstance","initialized","context","makeContext","changes$","BehaviorSubject","unsubscribe$","Subject","module","pushChanges","next","parse","setTimeout","onView","makeHosts","inputs","makeInputs","outputs","makeOutputs","onInit","pipe","takeUntil","subscribe","changes","resolveInputsOutputs","onChanges","makeFunction","expression","params","parseExpression","join","resolve","payload","remove","keepInstance","keepContext","getContext","traverseDown","rxcompId","deleteContext","destroy","innerHTML","nodeInnerHTML","getInstance","Document","window","getContextByNode","_this3","traverseUp","childNodes","child","nodeType","element","text","parseTextNode","_this4","expressions","nodeExpressions","parseTextNodeExpression","wholeText","replacedText","reduce","c","nodeValue","textNode","document","createTextNode","replaceChild","pushFragment","from","to","fragment","substring","matches","regex","lastIndex","exec","index","hosts","keys","forEach","getHost","nodeContexts","makeInput","input","hasAttribute","getAttribute","replace","b","_this5","makeOutput","_this6","outputFunction","output$","tap","event","_this7","output","inputFunction","rx1","parsePipes","parseOptionalChaining","trim","parsePipeParams","func","concat","segments","word","block","t","substr","previous","tokens","split","rxcompNodeId","id","keepContexts","complete","onDestroy","matchSelectors","results","selectorResult","template","selectorResults","find","callback","result","j","traversePrevious","previousSibling","traverseNext","nextSibling","current","ClassDirective","_Directive","class","classList","object","setAttribute","EventDirective","_getContext","event$","fromEvent","shareReplay","ForItem","$key","$value","count","_Context","Constructor","protoProps","staticProps","get","even","ForStructure","_Structure","instances","forbegin","createComment","forend","insertBefore","removeAttribute","token","getExpressionToken","forFunction","iterable","isArray","Array","array","total","Math","max","clonedNode","cloneNode","forItemContext","removeChild","forExpressions","keyValueMatches","indexExpressions","HrefDirective","href","IfStructure","ifbegin","ifend","ifFunction","InnerHtmlDirective","Pipe","transform","JsonPipe","_Pipe","JSON","stringify","name","SrcDirective","src","StyleDirective","style","previousStyle","propertyName","removeProperty","splitted","setProperty","factories","pipes","CoreModule","_Module","declarations","exports","ORDER","Browser","_Platform","Platform","bootstrap","moduleFactory","resolveMeta","isBrowser","Boolean","querySelector","resolveImportedMeta","resolvePipes","resolveFactories","sortFactories","unshift","unwrapSelectors","assign","imports","exported","importedPipes","importMeta","pipeFactory","_Array$prototype$conc","importedFactories","factoryList","sort","getExpressions","matchers","c1","a2","u3","v4","a5","e6","contains","nodeName","toLowerCase","excludes","matchSelector","unmatchSelector","includes","included","excluded","RootComponent","background","items","onItem","item","console","log","SubComponent","_Component2","onToggle","toggle","HostDirective","HostedDirective","_Directive2","host","AppModule"],"mappings":"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","file":"docs/js/test.scope.min.js","sourcesContent":[null,"import { BehaviorSubject, Subject } from 'rxjs';\nimport { IFactoryMeta } from './types';\n\nexport default class Factory {\n\n\trxcompId?: number;\n\tchanges$?: BehaviorSubject<Factory>;\n\tunsubscribe$?: Subject<void>;\n\tpushChanges?: Function;\n\tstatic meta: IFactoryMeta;\n\n\t/*\n\tonInit?: () => void;\n\tonChanges?: (changes: Factory | Window) => void;\n\tonView?: () => void;\n\tonDestroy?: () => void;\n\t*/\n\n\t[key: string]: any; // extensible object\n\n\tconstructor(...args: any[]) {\n\n\t}\n}\n","import Factory from './factory';\n\nexport default class Directive extends Factory {\n}\n","import Factory from './factory';\n\nexport default class Component extends Factory {\n}\n","// import { BehaviorSubject, Subject } from 'rxjs';\nimport Component from './component';\nimport Factory from './factory';\n\nconst RESERVED_PROPERTIES = ['constructor', 'rxcompId', 'onInit', 'onChanges', 'onDestroy', 'pushChanges', 'changes$', 'unsubscribe$'];\n\nexport default class Context extends Component {\n\n\tconstructor(instance: Factory, descriptors: { [key: string]: PropertyDescriptor } = {}) {\n\t\tsuper();\n\t\tdescriptors = Context.mergeDescriptors(instance, instance, descriptors);\n\t\tdescriptors = Context.mergeDescriptors(Object.getPrototypeOf(instance), instance, descriptors);\n\t\t/*\n\t\tconst subjects = {\n\t\t\tchanges$: {\n\t\t\t\tvalue: new BehaviorSubject(this),\n\t\t\t\twritable: false,\n\t\t\t\tenumerable: false,\n\t\t\t},\n\t\t\tunsubscribe$: {\n\t\t\t\tvalue: new Subject(),\n\t\t\t\twritable: false,\n\t\t\t\tenumerable: false,\n\t\t\t}\n\t\t};\n\t\t*/\n\t\tObject.defineProperties(this, descriptors);\n\t}\n\n\tstatic mergeDescriptors(source: Object, instance: Factory, descriptors: { [key: string]: PropertyDescriptor } = {}): { [key: string]: PropertyDescriptor } {\n\t\tconst properties: string[] = Object.getOwnPropertyNames(source);\n\t\twhile (properties.length) {\n\t\t\tconst key: string = properties.shift() as string;\n\t\t\tif (RESERVED_PROPERTIES.indexOf(key) === -1 && !descriptors.hasOwnProperty(key)) {\n\t\t\t\tconst descriptor: PropertyDescriptor = Object.getOwnPropertyDescriptor(source, key) as PropertyDescriptor;\n\t\t\t\tif (typeof descriptor.value == 'function') {\n\t\t\t\t\tdescriptor.value = (...args: any[]) => {\n\t\t\t\t\t\treturn instance[key].apply(instance, args);\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tdescriptors[key] = descriptor;\n\t\t\t}\n\t\t}\n\t\treturn descriptors;\n\t}\n\n}\n","import Factory from './factory';\n\nexport default class Structure extends Factory {\n}\n","import { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { takeUntil, tap } from 'rxjs/operators';\nimport Component from '../core/component';\nimport Context from '../core/context';\nimport Factory from '../core/factory';\nimport Structure from '../core/structure';\nimport { ExpressionFunction, IContext, IElement, IFactoryMeta, IModuleMeta, IModuleParsedMeta, ISelectorResult, IText, SelectorFunction } from '../core/types';\n\nlet ID: number = 0;\nconst CONTEXTS: { [key: number]: IContext } = {};\nconst NODES: { [key: number]: IContext[] } = {};\n\nexport default class Module {\n\n\tmeta?: IModuleParsedMeta;\n\n\tpublic compile(node: IElement, parentInstance?: Factory | Window): Factory[] {\n\t\tlet componentNode: IElement;\n\t\tconst instances: Factory[] = Module.querySelectorsAll(node, this.meta!.selectors, []).map((match: ISelectorResult) => {\n\t\t\tif (componentNode && componentNode !== match.node) {\n\t\t\t\tparentInstance = undefined;\n\t\t\t}\n\t\t\tconst instance: Factory | undefined = this.makeInstance(match.node, match.factory, match.selector, parentInstance);\n\t\t\tif (match.factory.prototype instanceof Component) {\n\t\t\t\tcomponentNode = match.node;\n\t\t\t}\n\t\t\treturn instance;\n\t\t}).filter((x): x is Factory => x !== undefined);\n\t\t// console.log('compile', instances, node, parentInstance);\n\t\treturn instances;\n\t}\n\n\tpublic makeInstance(node: IElement, factory: typeof Factory, selector: string, parentInstance?: Factory | Window, args?: any[]): Factory | undefined {\n\t\tif (parentInstance || node.parentNode) {\n\t\t\tconst isComponent = factory.prototype instanceof Component;\n\t\t\tconst meta: IFactoryMeta = factory.meta;\n\t\t\t// console.log('meta', meta, factory);\n\t\t\t// collect parentInstance scope\n\t\t\tparentInstance = parentInstance || this.getParentInstance(node.parentNode);\n\t\t\tif (!parentInstance) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\t// creating factory instance\n\t\t\tconst instance = new factory(...(args || []));\n\t\t\t// creating instance context\n\t\t\tconst context = Module.makeContext(this, instance, parentInstance, node, factory, selector);\n\t\t\t// injecting changes$ and unsubscribe$ subjects\n\t\t\tObject.defineProperties(instance, {\n\t\t\t\tchanges$: {\n\t\t\t\t\tvalue: new BehaviorSubject(instance),\n\t\t\t\t\twritable: false,\n\t\t\t\t\tenumerable: false,\n\t\t\t\t},\n\t\t\t\tunsubscribe$: {\n\t\t\t\t\tvalue: new Subject(),\n\t\t\t\t\twritable: false,\n\t\t\t\t\tenumerable: false,\n\t\t\t\t}\n\t\t\t});\n\t\t\tlet initialized: boolean;\n\t\t\t// injecting instance pushChanges method\n\t\t\tconst module = this;\n\t\t\tinstance.pushChanges = function () {\n\t\t\t\t// console.log(new Error(`pushChanges ${instance.constructor.name}`).stack);\n\t\t\t\tthis.changes$!.next(this);\n\t\t\t\t// parse component text nodes\n\t\t\t\tif (isComponent) {\n\t\t\t\t\t// console.log('Module.parse', instance.constructor.name);\n\t\t\t\t\tinitialized ? module.parse(node, instance) : setTimeout(function () { module.parse(node, instance); });\n\t\t\t\t}\n\t\t\t\t// calling onView event\n\t\t\t\tif (typeof instance.onView === 'function') {\n\t\t\t\t\t// console.log('onView', instance.constructor.name);\n\t\t\t\t\tinstance.onView();\n\t\t\t\t}\n\t\t\t};\n\t\t\t// creating component input and outputs\n\t\t\t// if (isComponent && meta) {\n\t\t\tif (meta) {\n\t\t\t\tthis.makeHosts(meta, instance, node);\n\t\t\t\tcontext.inputs = this.makeInputs(meta, instance);\n\t\t\t\tcontext.outputs = this.makeOutputs(meta, instance);\n\t\t\t}\n\t\t\t// calling onInit event\n\t\t\tif (typeof instance.onInit === 'function') {\n\t\t\t\tinstance.onInit();\n\t\t\t}\n\t\t\tinitialized = true;\n\t\t\t// subscribe to parent changes\n\t\t\tif (parentInstance instanceof Factory && parentInstance.changes$) {\n\t\t\t\tparentInstance.changes$.pipe(\n\t\t\t\t\t// filter(() => node.parentNode),\n\t\t\t\t\t// debounceTime(1),\n\t\t\t\t\t/*\n\t\t\t\t\tdistinctUntilChanged(function(prev, curr) {\n\t\t\t\t\t\tconsole.log(isComponent, context.inputs);\n\t\t\t\t\t\tif (isComponent && meta && Object.keys(context.inputs).length === 0) {\n\t\t\t\t\t\t\treturn true; // same\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t\t*/\n\t\t\t\t\ttakeUntil(instance.unsubscribe$!)\n\t\t\t\t).subscribe((changes: Factory | Window) => {\n\t\t\t\t\t// resolve component input outputs\n\t\t\t\t\t// if (isComponent && meta) {\n\t\t\t\t\tif (meta) {\n\t\t\t\t\t\tthis.resolveInputsOutputs(instance, changes);\n\t\t\t\t\t}\n\t\t\t\t\t// calling onChanges event with changes\n\t\t\t\t\tif (typeof instance.onChanges === 'function') {\n\t\t\t\t\t\t// console.log('onChanges', instance.constructor.name);\n\t\t\t\t\t\t// console.log('onChanges', instance.constructor.meta.selector, changes);\n\t\t\t\t\t\tinstance.onChanges(changes);\n\t\t\t\t\t}\n\t\t\t\t\t// push instance changes for subscribers\n\t\t\t\t\tinstance.pushChanges!();\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn instance;\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n\tpublic makeFunction(expression: string, params: string[] = ['$instance']): ExpressionFunction {\n\t\tif (expression) {\n\t\t\texpression = Module.parseExpression(expression);\n\t\t\t// console.log(expression);\n\t\t\tconst args: string = params.join(',');\n\t\t\tconst expression_func: ExpressionFunction = new Function(`with(this) {\n\t\t\t\treturn (function (${args}, $$module) {\n\t\t\t\t\tconst $$pipes = $$module.meta.pipes;\n\t\t\t\t\treturn ${expression};\n\t\t\t\t}.bind(this)).apply(this, arguments);\n\t\t\t}`) as ExpressionFunction;\n\t\t\t// console.log(this, $$module, $$pipes, \"${expression}\");\n\t\t\t// console.log(expression_func);\n\t\t\treturn expression_func;\n\t\t} else {\n\t\t\treturn () => { return null; };\n\t\t}\n\t}\n\n\tpublic resolve(expression: ExpressionFunction, parentInstance: Factory | Window, payload: any): any {\n\t\t// console.log(expression, parentInstance, payload);\n\t\treturn expression.apply(parentInstance, [payload, this]);\n\t}\n\n\tpublic remove(node: Node, keepInstance?: Factory): Node {\n\t\tconst keepContext: IContext | undefined = keepInstance ? getContext(keepInstance) : undefined;\n\t\tModule.traverseDown(node, (node: Node) => {\n\t\t\tconst rxcompId: number | undefined = (node as IElement).rxcompId;\n\t\t\tif (rxcompId) {\n\t\t\t\tconst keepContexts: IContext[] = Module.deleteContext(rxcompId, keepContext);\n\t\t\t\tif (keepContexts.length === 0) {\n\t\t\t\t\tdelete (node as IElement).rxcompId;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn node;\n\t}\n\n\tpublic destroy(): void {\n\t\tthis.remove(this.meta!.node);\n\t\tthis.meta!.node.innerHTML = this.meta!.nodeInnerHTML;\n\t}\n\n\tprotected makeContext(instance: Factory, parentInstance: Factory | Window, node: IElement, selector: string): IContext {\n\t\tconst context: IContext = Module.makeContext(this, instance, parentInstance, node, instance.constructor as typeof Factory, selector);\n\t\t// console.log('Module.makeContext', context, context.instance, context.node);\n\t\treturn context;\n\t}\n\n\tprotected getInstance(node: HTMLElement | Document): Factory | Window | undefined {\n\t\tif (node instanceof Document) {\n\t\t\treturn window; // !!! window or global\n\t\t}\n\t\tconst context: IContext | undefined = getContextByNode(node);\n\t\tif (context) {\n\t\t\treturn context.instance;\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n\tprotected getParentInstance(node: Node | null): Factory | Window {\n\t\treturn Module.traverseUp(node, (node: Node) => {\n\t\t\treturn this.getInstance(node as HTMLElement);\n\t\t});\n\t}\n\n\tprotected parse(node: IElement, instance: Factory): void {\n\t\tfor (let i: number = 0; i < node.childNodes.length; i++) {\n\t\t\tconst child: ChildNode = node.childNodes[i];\n\t\t\tif (child.nodeType === 1) {\n\t\t\t\tconst element: HTMLElement = child as HTMLElement;\n\t\t\t\tconst context: IContext | void = getContextByNode(element);\n\t\t\t\tif (!context) {\n\t\t\t\t\tthis.parse(element, instance);\n\t\t\t\t}\n\t\t\t} else if (child.nodeType === 3) {\n\t\t\t\tconst text: IText = child as IText;\n\t\t\t\tthis.parseTextNode(text, instance);\n\t\t\t}\n\t\t}\n\t}\n\n\t// reduce(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: T[]) => T, initialValue: T): T;\n\n\tprotected parseTextNode(node: IText, instance: Factory): void {\n\t\tlet expressions: (ExpressionFunction | string)[] | undefined = node.nodeExpressions;\n\t\tif (!expressions) {\n\t\t\texpressions = this.parseTextNodeExpression(node.wholeText);\n\t\t}\n\t\tconst replacedText: string = expressions.reduce((p: string, c: ExpressionFunction | string) => {\n\t\t\tlet text: string;\n\t\t\tif (typeof c === 'function') { // instanceOf ExpressionFunction ?;\n\t\t\t\ttext = this.resolve(c as ExpressionFunction, instance, instance);\n\t\t\t\tif (text == undefined) { // !!! keep == loose equality\n\t\t\t\t\ttext = '';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttext = c;\n\t\t\t}\n\t\t\treturn p + text;\n\t\t}, '');\n\t\tif (node.nodeValue !== replacedText) {\n\t\t\tconst textNode: IText = document.createTextNode(replacedText) as IText;\n\t\t\ttextNode.nodeExpressions = expressions;\n\t\t\tnode.parentNode!.replaceChild(textNode, node);\n\t\t}\n\t}\n\n\tprotected pushFragment(nodeValue: string, from: number, to: number, expressions: (ExpressionFunction | string)[]): void {\n\t\tconst fragment: string = nodeValue.substring(from, to);\n\t\texpressions.push(fragment);\n\t};\n\n\tprotected parseTextNodeExpression(nodeValue: string): (ExpressionFunction | string)[] {\n\t\tconst expressions: (ExpressionFunction | string)[] = [];\n\t\tconst regex: RegExp = /\\{{2}((([^{}])|(\\{([^{}]|(\\{.*?\\}))+?\\}))*?)\\}{2}/g;\n\t\tlet lastIndex: number = 0,\n\t\t\tmatches: RegExpExecArray | null;\n\t\t/*\n\t\tconst pushFragment = function (from: number, to: number): void {\n\t\t\tconst fragment = nodeValue.substring(from, to);\n\t\t\texpressions.push(fragment);\n\t\t};\n\t\t*/\n\t\twhile ((matches = regex.exec(nodeValue)) !== null) {\n\t\t\tconst index: number = regex.lastIndex - matches[0].length;\n\t\t\tif (index > lastIndex) {\n\t\t\t\tthis.pushFragment(nodeValue, index, lastIndex, expressions);\n\t\t\t}\n\t\t\tlastIndex = regex.lastIndex;\n\t\t\tconst expression: ExpressionFunction = this.makeFunction(matches[1]);\n\t\t\texpressions.push(expression);\n\t\t}\n\t\tconst length: number = nodeValue.length;\n\t\tif (length > lastIndex) {\n\t\t\tthis.pushFragment(nodeValue, lastIndex, length, expressions);\n\t\t}\n\t\treturn expressions;\n\t}\n\n\tprotected makeHosts(meta: IFactoryMeta, instance: Factory, node: IElement): void {\n\t\tif (meta.hosts) {\n\t\t\tObject.keys(meta.hosts).forEach((key: string) => {\n\t\t\t\tconst factory: typeof Factory = meta.hosts![key];\n\t\t\t\tinstance[key] = getHost(instance, factory, node);\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected makeInput(instance: Factory, key: string): ExpressionFunction | null {\n\t\tconst { node } = getContext(instance);\n\t\tlet input: ExpressionFunction | null = null,\n\t\t\texpression: string | null = null;\n\t\tif (node.hasAttribute(`[${key}]`)) {\n\t\t\texpression = node.getAttribute(`[${key}]`)!;\n\t\t} else if (node.hasAttribute(key)) {\n\t\t\t// const attribute = node.getAttribute(key).replace(/{{/g, '\"+').replace(/}}/g, '+\"');\n\t\t\tconst attribute: string = node.getAttribute(key)!.replace(/({{)|(}})|(\")/g, function (substring: string, a, b, c) {\n\t\t\t\tif (a) {\n\t\t\t\t\treturn '\"+';\n\t\t\t\t}\n\t\t\t\tif (b) {\n\t\t\t\t\treturn '+\"';\n\t\t\t\t}\n\t\t\t\tif (c) {\n\t\t\t\t\treturn '\\\"';\n\t\t\t\t}\n\t\t\t\treturn '';\n\t\t\t});\n\t\t\texpression = `\"${attribute}\"`;\n\t\t}\n\t\tif (expression) {\n\t\t\tinput = this.makeFunction(expression);\n\t\t}\n\t\treturn input;\n\t}\n\n\tprotected makeInputs(meta: IFactoryMeta, instance: Factory): { [key: string]: ExpressionFunction } {\n\t\tconst inputs: { [key: string]: ExpressionFunction } = {};\n\t\tif (meta.inputs) {\n\t\t\tmeta.inputs.forEach((key: string, i: number) => {\n\t\t\t\tconst input = this.makeInput(instance, key);\n\t\t\t\tif (input) {\n\t\t\t\t\tinputs[key] = input;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn inputs;\n\t}\n\n\tprotected makeOutput(instance: Factory, key: string): ExpressionFunction | null {\n\t\tconst context: IContext = getContext(instance);\n\t\tconst node: IElement = context.node;\n\t\tconst parentInstance: Factory | Window = context.parentInstance;\n\t\tconst expression: string | null = node.getAttribute(`(${key})`);\n\t\tconst outputFunction: ExpressionFunction | null = expression ? this.makeFunction(expression, ['$event']) : null;\n\t\tif (outputFunction) {\n\t\t\tconst output$: Observable<any> = new Subject<any>().pipe(\n\t\t\t\ttap((event) => {\n\t\t\t\t\tthis.resolve(outputFunction, parentInstance, event);\n\t\t\t\t})\n\t\t\t);\n\t\t\toutput$.pipe(\n\t\t\t\ttakeUntil(instance.unsubscribe$!)\n\t\t\t).subscribe();\n\t\t\tinstance[key] = output$;\n\t\t}\n\t\treturn outputFunction;\n\t}\n\n\tprotected makeOutputs(meta: IFactoryMeta, instance: Factory): { [key: string]: ExpressionFunction } {\n\t\tconst outputs: { [key: string]: ExpressionFunction } = {};\n\t\tif (meta.outputs) {\n\t\t\tmeta.outputs.forEach((key: string, i: number) => {\n\t\t\t\tconst output = this.makeOutput(instance, key);\n\t\t\t\tif (output) {\n\t\t\t\t\toutputs[key] = output;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn outputs;\n\t}\n\n\tprotected resolveInputsOutputs(instance: Factory, changes: Factory | Window): void {\n\t\tconst context: IContext = getContext(instance);\n\t\tconst parentInstance: Factory | Window = context.parentInstance;\n\t\tconst inputs: { [key: string]: ExpressionFunction } = context.inputs!;\n\t\tfor (let key in inputs) {\n\t\t\tconst inputFunction: ExpressionFunction = inputs[key];\n\t\t\tconst value: any = this.resolve(inputFunction, parentInstance, instance);\n\t\t\tinstance[key] = value;\n\t\t}\n\t\t/*\n\t\tconst outputs = context.outputs;\n\t\tfor (let key in outputs) {\n\t\t\tconst inpuoutputFunctiontFunction = outputs[key];\n\t\t\tconst value = this.resolve(outputFunction, parentInstance, null);\n\t\t\t// console.log(`setted -> ${key}`, value);\n\t\t}\n\t\t*/\n\t}\n\n\tprotected static parseExpression(expression: string): string {\n\t\tconst l: string = '┌';\n\t\tconst r: string = '┘';\n\t\tconst rx1: RegExp = /(\\()([^\\(\\)]*)(\\))/;\n\t\twhile (expression.match(rx1)) {\n\t\t\texpression = expression.replace(rx1, function (substring: string, ...args: any[]) {\n\t\t\t\treturn `${l}${Module.parsePipes(args[1])}${r}`;\n\t\t\t});\n\t\t}\n\t\texpression = Module.parsePipes(expression);\n\t\texpression = expression.replace(/(┌)|(┘)/g, function (substring: string, ...args) {\n\t\t\treturn args[0] ? '(' : ')';\n\t\t});\n\t\treturn Module.parseOptionalChaining(expression);\n\t}\n\n\tprotected static parsePipes(expression: string): string {\n\t\tconst l: string = '┌';\n\t\tconst r: string = '┘';\n\t\tconst rx1: RegExp = /(.*?[^\\|])\\|([^\\|]+)/;\n\t\twhile (expression.match(rx1)) {\n\t\t\texpression = expression.replace(rx1, function (substring: string, ...args: any[]) {\n\t\t\t\tconst value: string = args[0].trim();\n\t\t\t\tconst params: string[] = Module.parsePipeParams(args[1]);\n\t\t\t\tconst func: string = params.shift()!.trim();\n\t\t\t\treturn `$$pipes.${func}.transform${l}${[value, ...params]}${r}`;\n\t\t\t});\n\t\t}\n\t\treturn expression;\n\t}\n\n\tprotected static parsePipeParams(expression: string): string[] {\n\t\tconst segments: string[] = [];\n\t\tlet i: number = 0,\n\t\t\tword: string = '',\n\t\t\tblock: number = 0;\n\t\tconst t: number = expression.length;\n\t\twhile (i < t) {\n\t\t\tconst c: string = expression.substr(i, 1);\n\t\t\tif (c === '{' || c === '(' || c === '[') {\n\t\t\t\tblock++;\n\t\t\t}\n\t\t\tif (c === '}' || c === ')' || c === ']') {\n\t\t\t\tblock--;\n\t\t\t}\n\t\t\tif (c === ':' && block === 0) {\n\t\t\t\tif (word.length) {\n\t\t\t\t\tsegments.push(word.trim());\n\t\t\t\t}\n\t\t\t\tword = '';\n\t\t\t} else {\n\t\t\t\tword += c;\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\t\tif (word.length) {\n\t\t\tsegments.push(word.trim());\n\t\t}\n\t\treturn segments;\n\t}\n\n\tprotected static parseOptionalChaining(expression: string): string {\n\t\tconst regex: RegExp = /(\\w+(\\?\\.))+([\\.|\\w]+)/g;\n\t\tlet previous: string;\n\t\texpression = expression.replace(regex, function (substring: string, ...args: any[]) {\n\t\t\tconst tokens: string[] = substring.split('?.');\n\t\t\tfor (let i: number = 0; i < tokens.length - 1; i++) {\n\t\t\t\tconst a: string = i > 0 ? `(${tokens[i]} = ${previous})` : tokens[i];\n\t\t\t\tconst b: string = tokens[i + 1];\n\t\t\t\tprevious = i > 0 ? `${a}.${b}` : `(${a} ? ${a}.${b} : void 0)`;\n\t\t\t}\n\t\t\treturn previous || '';\n\t\t});\n\t\treturn expression;\n\t}\n\n\tprotected static makeContext(module: Module, instance: Factory, parentInstance: Factory | Window, node: IElement, factory: typeof Factory, selector: string): IContext {\n\t\tinstance.rxcompId = ++ID;\n\t\tconst context: IContext = { module, instance, parentInstance, node, factory, selector };\n\t\tconst rxcompNodeId = node.rxcompId = (node.rxcompId || instance.rxcompId);\n\t\tconst nodeContexts = NODES[rxcompNodeId] || (NODES[rxcompNodeId] = []);\n\t\tnodeContexts.push(context);\n\t\tCONTEXTS[instance.rxcompId] = context;\n\t\treturn context;\n\t}\n\n\tprotected static deleteContext(id: number, keepContext: IContext | undefined): IContext[] {\n\t\tconst keepContexts: IContext[] = [];\n\t\tconst nodeContexts: IContext[] = NODES[id];\n\t\tif (nodeContexts) {\n\t\t\tnodeContexts.forEach((context: IContext) => {\n\t\t\t\tif (context === keepContext) {\n\t\t\t\t\tkeepContexts.push(keepContext);\n\t\t\t\t} else {\n\t\t\t\t\tconst instance: Factory = context.instance;\n\t\t\t\t\tinstance.unsubscribe$!.next();\n\t\t\t\t\tinstance.unsubscribe$!.complete();\n\t\t\t\t\tif (typeof instance.onDestroy === 'function') {\n\t\t\t\t\t\tinstance.onDestroy();\n\t\t\t\t\t\tdelete CONTEXTS[instance.rxcompId!];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (keepContexts.length) {\n\t\t\t\tNODES[id] = keepContexts;\n\t\t\t} else {\n\t\t\t\tdelete NODES[id];\n\t\t\t}\n\t\t}\n\t\treturn keepContexts;\n\t}\n\n\tprotected static matchSelectors(node: HTMLElement, selectors: SelectorFunction[], results: ISelectorResult[]): ISelectorResult[] {\n\t\tfor (let i: number = 0; i < selectors.length; i++) {\n\t\t\tconst selectorResult: ISelectorResult | false = selectors[i](node);\n\t\t\tif (selectorResult) {\n\t\t\t\tconst factory: typeof Factory = selectorResult.factory;\n\t\t\t\tif (factory.prototype instanceof Component && factory.meta.template) {\n\t\t\t\t\tnode.innerHTML = factory.meta.template;\n\t\t\t\t}\n\t\t\t\tresults.push(selectorResult);\n\t\t\t\tif (factory.prototype instanceof Structure) {\n\t\t\t\t\t// console.log('Structure', node);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn results;\n\t}\n\n\tprotected static querySelectorsAll(node: Node, selectors: SelectorFunction[], results: ISelectorResult[]): ISelectorResult[] {\n\t\tif (node.nodeType === 1) {\n\t\t\tconst selectorResults: ISelectorResult[] = this.matchSelectors(node as HTMLElement, selectors, []);\n\t\t\tresults = results.concat(selectorResults);\n\t\t\tconst structure: ISelectorResult | undefined = selectorResults.find(x => x.factory.prototype instanceof Structure);\n\t\t\tif (structure) {\n\t\t\t\treturn results;\n\t\t\t}\n\t\t\tconst childNodes: NodeListOf<ChildNode> = node.childNodes;\n\t\t\tfor (let i: number = 0; i < childNodes.length; i++) {\n\t\t\t\tresults = this.querySelectorsAll(childNodes[i], selectors, results);\n\t\t\t}\n\t\t}\n\t\treturn results;\n\t}\n\n\tprotected static traverseUp(node: Node | null, callback: (node: Node, i: number) => any, i: number = 0): any {\n\t\tif (!node) {\n\t\t\treturn;\n\t\t}\n\t\tconst result = callback(node, i);\n\t\tif (result) {\n\t\t\treturn result;\n\t\t}\n\t\treturn this.traverseUp(node.parentNode, callback, i + 1);\n\t}\n\n\tprotected static traverseDown(node: Node | null, callback: (node: Node, i: number) => any, i: number = 0): any {\n\t\tif (!node) {\n\t\t\treturn;\n\t\t}\n\t\tlet result = callback(node, i);\n\t\tif (result) {\n\t\t\treturn result;\n\t\t}\n\t\tif (node.nodeType === 1) {\n\t\t\tlet j = 0,\n\t\t\t\tt = node.childNodes.length;\n\t\t\twhile (j < t && !result) {\n\t\t\t\tresult = this.traverseDown(node.childNodes[j], callback, i + 1);\n\t\t\t\tj++;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tprotected static traversePrevious(node: Node | null, callback: (node: Node, i: number) => any, i: number = 0): any {\n\t\tif (!node) {\n\t\t\treturn;\n\t\t}\n\t\tconst result = callback(node, i);\n\t\tif (result) {\n\t\t\treturn result;\n\t\t}\n\t\treturn this.traversePrevious(node.previousSibling, callback, i + 1);\n\t}\n\n\tprotected static traverseNext(node: Node | null, callback: (node: Node, i: number) => any, i: number = 0): any {\n\t\tif (!node) {\n\t\t\treturn;\n\t\t}\n\t\tconst result = callback(node, i);\n\t\tif (result) {\n\t\t\treturn result;\n\t\t}\n\t\treturn this.traverseNext(node.nextSibling, callback, i + 1);\n\t}\n\n\tstatic meta: IModuleMeta;\n\n}\n\nexport function getContext(instance: Factory): IContext {\n\treturn CONTEXTS[instance.rxcompId!];\n}\n\nexport function getContextByNode(node: Node): IContext | undefined {\n\tlet context: IContext | undefined;\n\tconst rxcompId: number | undefined = (node as IElement).rxcompId;\n\tif (rxcompId) {\n\t\tconst nodeContexts: IContext[] = NODES[rxcompId];\n\t\tif (nodeContexts) {\n\t\t\tcontext = nodeContexts.reduce((previous: IContext | undefined, current: IContext) => {\n\t\t\t\tif (current.factory.prototype instanceof Component) {\n\t\t\t\t\treturn current;\n\t\t\t\t} else if (current.factory.prototype instanceof Context) {\n\t\t\t\t\treturn previous ? previous : current;\n\t\t\t\t} else {\n\t\t\t\t\treturn previous;\n\t\t\t\t}\n\t\t\t}, undefined);\n\t\t\t// console.log(node.rxcompId, context);\n\t\t}\n\t}\n\treturn context;\n}\n\nexport function getHost(instance: Factory, factory: typeof Factory, node: IElement): Factory | undefined {\n\tif (!node) {\n\t\tnode = getContext(instance).node;\n\t}\n\tif (node.rxcompId) {\n\t\tconst nodeContexts: IContext[] = NODES[node.rxcompId];\n\t\tif (nodeContexts) {\n\t\t\t// console.log(nodeContexts);\n\t\t\tfor (let i: number = 0; i < nodeContexts.length; i++) {\n\t\t\t\tconst context: IContext = nodeContexts[i];\n\t\t\t\tif (context.instance !== instance) {\n\t\t\t\t\t// console.log(context.instance, instance);\n\t\t\t\t\tif (context.instance instanceof factory) {\n\t\t\t\t\t\treturn context.instance;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif (node.parentNode) {\n\t\treturn getHost(instance, factory, node.parentNode as IElement);\n\t} else {\n\t\treturn undefined;\n\t}\n}\n","// import Factory, { ExpressionFunction } from '../core/factory';\nimport Directive from '../core/directive';\nimport { getContext } from '../module/module';\n\nexport default class ClassDirective extends Directive {\n\n\tclass: { [key: string]: string } | string | null = '';\n\tkeys: string[] = [];\n\n\tonInit() {\n\t\tconst { node } = getContext(this);\n\t\tnode.classList.forEach(x => this.keys.push(x));\n\t}\n\n\tonChanges() {\n\t\tconst { node } = getContext(this);\n\t\tlet keys: string[] = [];\n\t\tconst object = this.class;\n\t\tif (typeof object === 'object') {\n\t\t\tfor (let key in object) {\n\t\t\t\tif (object[key]) {\n\t\t\t\t\tkeys.push(key);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (typeof object === 'string') {\n\t\t\tkeys = object.split(/\\s+/);\n\t\t}\n\t\tkeys = keys.concat(this.keys);\n\t\t// console.log(keys);\n\t\tnode.setAttribute('class', keys.join(' '));\n\t\t// console.log('ClassDirective.onChanges', keys);\n\t}\n\n}\n\nClassDirective.meta = {\n\tselector: `[[class]]`,\n\tinputs: ['class']\n};\n","import { fromEvent, Observable } from 'rxjs';\nimport { shareReplay, takeUntil } from 'rxjs/operators';\nimport Directive from '../core/directive';\nimport { getContext } from '../module/module';\n\nconst EVENTS = ['mousedown', 'mouseup', 'mousemove', 'click', 'dblclick', 'mouseover', 'mouseout', 'mouseenter', 'mouseleave', 'contextmenu', 'touchstart', 'touchmove', 'touchend', 'keydown', 'keyup', 'input', 'change', 'loaded'];\n\nexport default class EventDirective extends Directive {\n\n\tevent: string = '';\n\n\tonInit() {\n\t\tconst { module, node, parentInstance, selector } = getContext(this);\n\t\t// console.log('parentInstance', parentInstance);\n\t\tconst event = this.event = selector.replace(/\\[|\\]|\\(|\\)/g, '');\n\t\tconst event$: Observable<Event> = fromEvent<Event>(node, event).pipe(shareReplay(1));\n\t\tconst expression = node.getAttribute(`(${event})`);\n\t\tif (expression) {\n\t\t\tconst outputFunction = module.makeFunction(expression, ['$event']);\n\t\t\tevent$.pipe(\n\t\t\t\ttakeUntil(this.unsubscribe$!)\n\t\t\t).subscribe(event => {\n\t\t\t\tmodule.resolve(outputFunction, parentInstance, event);\n\t\t\t});\n\t\t} else {\n\t\t\t(parentInstance as any)[`${event}$`] = event$; // !!! any\n\t\t}\n\t\t// console.log('EventDirective.onInit', 'selector', selector, 'event', event);\n\t}\n\n}\n\nEventDirective.meta = {\n\tselector: `[(${EVENTS.join(')],[(')})]`,\n};\n","import Context from '../core/context';\nimport Factory from '../core/factory';\n\nexport default class ForItem extends Context {\n\n\tindex: number;\n\tcount: number;\n\t[key: string]: any;\n\n\t// !!! try with payload options { key, $key, value, $value, index, count } or use onInit()\n\n\tconstructor(key: string, $key: number | string, value: string, $value: any, index: number, count: number, parentInstance: Factory) {\n\t\t// console.log('ForItem', arguments);\n\t\tsuper(parentInstance);\n\t\t/*\n\t\tsuper(parentInstance, {\n\t\t\t[key]: {\n\t\t\t\tget: function() {\n\t\t\t\t\treturn this.$key;\n\t\t\t\t},\n\t\t\t\tset: function(key) {\n\t\t\t\t\tthis.$key = key;\n\t\t\t\t}\n\t\t\t},\n\t\t\t[value]: {\n\t\t\t\tget: function() {\n\t\t\t\t\treturn this.$value;\n\t\t\t\t},\n\t\t\t\tset: function(value) {\n\t\t\t\t\tthis.$value = value;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\t*/\n\t\tthis[key] = $key;\n\t\tthis[value] = $value;\n\t\tthis.index = index;\n\t\tthis.count = count;\n\t}\n\n\tget first(): boolean { return this.index === 0; }\n\n\tget last(): boolean { return this.index === this.count - 1; }\n\n\tget even(): boolean { return this.index % 2 === 0; }\n\n\tget odd(): boolean { return !this.even; }\n\n}\n","import Factory from '../core/factory';\nimport Structure from '../core/structure';\nimport { ExpressionFunction, IComment, IContext, IElement, IExpressionToken } from '../core/types';\nimport Module, { getContext } from '../module/module';\nimport ForItem from './for.item';\n\nexport default class ForStructure extends Structure {\n\n\tinstances: Factory[] = [];\n\tforend?: IComment;\n\ttoken?: IExpressionToken;\n\tforFunction?: ExpressionFunction;\n\n\tonInit() {\n\t\tconst { module, node } = getContext(this);\n\t\tconst forbegin: IComment = document.createComment(`*for begin`);\n\t\tforbegin['rxcompId'] = node.rxcompId;\n\t\tnode.parentNode!.replaceChild(forbegin, node);\n\t\tconst forend: IComment = this.forend = document.createComment(`*for end`);\n\t\tforbegin.parentNode!.insertBefore(forend, forbegin.nextSibling);\n\t\tconst expression: string = node.getAttribute('*for')!;\n\t\tnode.removeAttribute('*for');\n\t\tconst token = this.token = this.getExpressionToken(expression);\n\t\tthis.forFunction = module.makeFunction(token.iterable);\n\t}\n\n\tonChanges(changes: Factory | Window) {\n\t\tconst context: IContext = getContext(this);\n\t\tconst module: Module = context.module;\n\t\tconst node: IElement = context.node;\n\t\t// resolve\n\t\tconst token: IExpressionToken = this.token!;\n\t\tlet result = module.resolve(this.forFunction!, changes, this) || [];\n\t\tconst isArray = Array.isArray(result);\n\t\tconst array: any[] = isArray ? result : Object.keys(result);\n\t\tconst total: number = array.length;\n\t\tconst previous: number = this.instances.length;\n\t\tfor (let i: number = 0; i < Math.max(previous, total); i++) {\n\t\t\tif (i < total) {\n\t\t\t\tconst key: number | string = isArray ? i : array[i];\n\t\t\t\tconst value: any = isArray ? array[key as number] : result[key];\n\t\t\t\tif (i < previous) {\n\t\t\t\t\t// update\n\t\t\t\t\tconst instance: Factory = this.instances[i];\n\t\t\t\t\tinstance[token.key] = key;\n\t\t\t\t\tinstance[token.value] = value;\n\t\t\t\t\t/*\n\t\t\t\t\tif (!nextSibling) {\n\t\t\t\t\t\tconst context = getContext(instance);\n\t\t\t\t\t\tconst node = context.node;\n\t\t\t\t\t\tthis.forend.parentNode.insertBefore(node, this.forend);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnextSibling = nextSibling.nextSibling;\n\t\t\t\t\t}\n\t\t\t\t\t*/\n\t\t\t\t} else {\n\t\t\t\t\t// create\n\t\t\t\t\tconst clonedNode: IElement = node.cloneNode(true) as IElement;\n\t\t\t\t\tdelete clonedNode['rxcompId'];\n\t\t\t\t\tthis.forend!.parentNode!.insertBefore(clonedNode, this.forend!);\n\t\t\t\t\tconst args = [token.key, key, token.value, value, i, total, context.parentInstance]; // !!! context.parentInstance unused?\n\t\t\t\t\tconst instance = module.makeInstance(clonedNode, ForItem, context.selector, context.parentInstance, args);\n\t\t\t\t\tif (instance) {\n\t\t\t\t\t\tconst forItemContext = getContext(instance);\n\t\t\t\t\t\t// console.log('ForStructure', clonedNode, forItemContext.instance.constructor.name);\n\t\t\t\t\t\tmodule.compile(clonedNode, forItemContext.instance);\n\t\t\t\t\t\t// nextSibling = clonedNode.nextSibling;\n\t\t\t\t\t\tthis.instances.push(instance);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// remove\n\t\t\t\tconst instance: Factory = this.instances[i];\n\t\t\t\tconst { node } = getContext(instance);\n\t\t\t\tnode.parentNode!.removeChild(node);\n\t\t\t\tmodule.remove(node);\n\t\t\t}\n\t\t}\n\t\tthis.instances.length = array.length;\n\t\t// console.log('ForStructure', this.instances, token);\n\t}\n\n\tgetExpressionToken(expression: string): IExpressionToken {\n\t\tif (expression === null) {\n\t\t\tthrow ('invalid for');\n\t\t}\n\t\tif (expression.trim().indexOf('let ') === -1 || expression.trim().indexOf(' of ') === -1) {\n\t\t\tthrow ('invalid for');\n\t\t}\n\t\tconst expressions: string[] = expression.split(';').map(x => x.trim()).filter(x => x !== '');\n\t\tconst forExpressions: string[] = expressions[0].split(' of ').map(x => x.trim());\n\t\tlet value: string = forExpressions[0].replace(/\\s*let\\s*/, '');\n\t\tconst iterable: string = forExpressions[1];\n\t\tlet key: string = 'index';\n\t\tconst keyValueMatches: RegExpMatchArray | null = value.match(/\\[(.+)\\s*,\\s*(.+)\\]/);\n\t\tif (keyValueMatches) {\n\t\t\tkey = keyValueMatches[1];\n\t\t\tvalue = keyValueMatches[2];\n\t\t}\n\t\tif (expressions.length > 1) {\n\t\t\tconst indexExpressions: string[] = expressions[1].split(/\\s*let\\s*|\\s*=\\s*index/).map(x => x.trim());\n\t\t\tif (indexExpressions.length === 3) {\n\t\t\t\tkey = indexExpressions[1];\n\t\t\t}\n\t\t}\n\t\treturn { key, value, iterable };\n\t}\n\n}\n\nForStructure.meta = {\n\tselector: '[*for]',\n};\n","import Directive from '../core/directive';\nimport { getContext } from '../module/module';\n\nexport default class HrefDirective extends Directive {\n\n\thref?: string;\n\n\tonChanges() {\n\t\tconst { node } = getContext(this);\n\t\tnode.setAttribute('href', this.href || '');\n\t}\n\n}\n\nHrefDirective.meta = {\n\tselector: '[[href]]',\n\tinputs: ['href'],\n};\n","import Factory from '../core/factory';\nimport Structure from '../core/structure';\nimport { ExpressionFunction, IComment, IElement } from '../core/types';\nimport { getContext } from '../module/module';\n\nexport default class IfStructure extends Structure {\n\n\tifend?: IComment;\n\tifFunction?: ExpressionFunction;\n\tclonedNode?: IElement;\n\telement?: IElement;\n\n\tonInit() {\n\t\tconst { module, node } = getContext(this);\n\t\tconst ifbegin: IComment = this.ifbegin = document.createComment(`*if begin`);\n\t\tifbegin['rxcompId'] = node.rxcompId;\n\t\tnode.parentNode!.replaceChild(ifbegin, node);\n\t\tconst ifend = this.ifend = document.createComment(`*if end`);\n\t\tifbegin.parentNode!.insertBefore(ifend, ifbegin.nextSibling);\n\t\tconst expression = node.getAttribute('*if');\n\t\tthis.ifFunction = module.makeFunction(expression!);\n\t\tconst clonedNode = node.cloneNode(true) as IElement;\n\t\tclonedNode.removeAttribute('*if');\n\t\tthis.clonedNode = clonedNode;\n\t\tthis.element = clonedNode.cloneNode(true) as IElement;\n\t\t// console.log('IfStructure.expression', expression);\n\t}\n\n\tonChanges(changes: Factory | Window) {\n\t\tconst { module } = getContext(this);\n\t\t// console.log('IfStructure.onChanges', changes);\n\t\tconst value = module.resolve(this.ifFunction!, changes, this);\n\t\tconst element: IElement = this.element!;\n\t\tif (value) {\n\t\t\tif (!element.parentNode) {\n\t\t\t\tconst ifend = this.ifend!;\n\t\t\t\tifend.parentNode!.insertBefore(element, ifend);\n\t\t\t\tmodule.compile(element);\n\t\t\t}\n\t\t} else {\n\t\t\tif (element.parentNode) {\n\t\t\t\tmodule.remove(element, this);\n\t\t\t\telement.parentNode.removeChild(element);\n\t\t\t\tthis.element = this.clonedNode!.cloneNode(true) as IElement;\n\t\t\t}\n\t\t}\n\t}\n\n\tstatic meta = {\n\t\tselector: '[*if]',\n\t};\n\n}\n","import Directive from '../core/directive';\nimport { getContext } from '../module/module';\n\nexport default class InnerHtmlDirective extends Directive {\n\n\tinnerHTML?: string;\n\n\tonChanges() {\n\t\tconst { node } = getContext(this);\n\t\tnode.innerHTML = this.innerHTML == undefined ? '' : this.innerHTML; // !!! keep == loose equality\n\t}\n\n}\n\nInnerHtmlDirective.meta = {\n\tselector: `[innerHTML]`,\n\tinputs: ['innerHTML'],\n};\n","import { IPipeMeta } from \"./types\";\n\nexport default class Pipe {\n\n\tstatic transform(value: any): any {\n\t\treturn value;\n\t}\n\n\tstatic meta: IPipeMeta;\n}\n","import Pipe from '../core/pipe';\n\nexport default class JsonPipe extends Pipe {\n\n\tstatic transform(value: any): string {\n\t\treturn JSON.stringify(value, null, '\\t');\n\t}\n\n}\n\nJsonPipe.meta = {\n\tname: 'json',\n};\n","import Directive from '../core/directive';\nimport { getContext } from '../module/module';\n\nexport default class SrcDirective extends Directive {\n\n\tsrc?: string;\n\n\tonChanges() {\n\t\tconst { node } = getContext(this);\n\t\tif (this.src) {\n\t\t\tnode.setAttribute('src', this.src);\n\t\t} else {\n\t\t\tnode.removeAttribute('src');\n\t\t}\n\t}\n\n}\n\nSrcDirective.meta = {\n\tselector: '[[src]]',\n\tinputs: ['src'],\n};\n","import Directive from '../core/directive';\nimport { getContext } from '../module/module';\n\nexport default class StyleDirective extends Directive {\n\n\tstyle?: { [key: string]: string } | null;\n\tpreviousStyle?: { [key: string]: string } | null;\n\n\tonChanges() {\n\t\tconst { node } = getContext(this);\n\t\tconst style = this.style;\n\t\tconst previousStyle = this.previousStyle;\n\t\tif (previousStyle) {\n\t\t\tfor (let key in previousStyle) {\n\t\t\t\tif (!style || !style[key]) {\n\t\t\t\t\tconst splitted: string[] = key.split('.');\n\t\t\t\t\tconst propertyName = splitted.shift();\n\t\t\t\t\tnode.style.removeProperty(propertyName!);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (style) {\n\t\t\tfor (let key in style) {\n\t\t\t\tif (!previousStyle || previousStyle[key] !== style[key]) {\n\t\t\t\t\tconst splitted: string[] = key.split('.');\n\t\t\t\t\tconst propertyName = splitted.shift();\n\t\t\t\t\tconst value = style[key] + (splitted.length ? splitted[0] : '');\n\t\t\t\t\t// console.log(propertyName, value, style, key, style[key]);\n\t\t\t\t\tnode.style.setProperty(propertyName!, value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.previousStyle = style;\n\t\t// console.log('StyleDirective.onChanges', style);\n\t}\n\n}\n\nStyleDirective.meta = {\n\tselector: `[[style]]`,\n\tinputs: ['style']\n};\n","\nimport ClassDirective from './class/class.directive';\nimport Factory from './core/factory';\nimport Pipe from './core/pipe';\nimport EventDirective from './event/event.directive';\nimport ForStructure from './for/for.structure';\nimport HrefDirective from './href/href.directive';\nimport IfStructure from './if/if.structure';\nimport InnerHtmlDirective from './inner-html/inner-html.directive';\nimport JsonPipe from './json/json.pipe';\nimport Module from './module/module';\nimport SrcDirective from './src/src.directive';\nimport StyleDirective from './style/style.directive';\n\nconst factories: typeof Factory[] = [\n\tClassDirective,\n\tEventDirective,\n\tForStructure,\n\tHrefDirective,\n\tIfStructure,\n\tInnerHtmlDirective,\n\tSrcDirective,\n\tStyleDirective,\n];\n\nconst pipes: typeof Pipe[] = [\n\tJsonPipe,\n];\n\nexport default class CoreModule extends Module {\n\n\tstatic meta = {\n\t\tdeclarations: [\n\t\t\t...factories,\n\t\t\t...pipes,\n\t\t],\n\t\texports: [\n\t\t\t...factories,\n\t\t\t...pipes,\n\t\t]\n\t};\n\n}\n","import Component from '../core/component';\nimport Directive from '../core/directive';\nimport Factory from '../core/factory';\nimport Pipe from '../core/pipe';\nimport Structure from '../core/structure';\nimport { FactoryList, IElement, IModuleParsedImportedMeta, IModuleParsedMeta, ISelectorResult, MatchFunction, PipeList, PipeMap, SelectorFunction } from '../core/types';\nimport Module from '../module/module';\n\nconst ORDER: FactoryList = [Structure, Component, Directive];\n\nexport default class Platform {\n\n\tstatic bootstrap(moduleFactory?: typeof Module): Module {\n\t\tif (!moduleFactory) {\n\t\t\tthrow ('missing moduleFactory');\n\t\t}\n\t\tif (!moduleFactory.meta) {\n\t\t\tthrow ('missing moduleFactory meta');\n\t\t}\n\t\tif (!moduleFactory.meta.bootstrap) {\n\t\t\tthrow ('missing bootstrap');\n\t\t}\n\t\tif (!moduleFactory.meta.bootstrap.meta) {\n\t\t\tthrow ('missing bootstrap meta');\n\t\t}\n\t\tif (!moduleFactory.meta.bootstrap.meta.selector) {\n\t\t\tthrow ('missing bootstrap meta selector');\n\t\t}\n\t\tconst meta: IModuleParsedMeta = this.resolveMeta(moduleFactory!);\n\t\tconst module = new moduleFactory();\n\t\tmodule.meta = meta;\n\t\tconst instances = module.compile(meta.node, window);\n\t\tconst root = instances[0];\n\t\t// if (root instanceof module.meta.bootstrap) {\n\t\troot.pushChanges!();\n\t\t// }\n\t\treturn module;\n\t}\n\n\tstatic isBrowser(): boolean {\n\t\treturn Boolean(window);\n\t}\n\n\t// static isServer() {}\n\n\tprotected static querySelector(selector: string): IElement | null {\n\t\treturn document.querySelector(selector);\n\t}\n\n\tprotected static resolveMeta(moduleFactory: typeof Module): IModuleParsedMeta {\n\t\tconst meta: IModuleParsedImportedMeta = this.resolveImportedMeta(moduleFactory);\n\t\tconst bootstrap: typeof Factory = moduleFactory.meta.bootstrap!;\n\t\tconst node = this.querySelector(bootstrap.meta.selector!);\n\t\tif (!node) {\n\t\t\tthrow (`missing node ${bootstrap.meta.selector}`);\n\t\t}\n\t\tconst nodeInnerHTML = node.innerHTML;\n\t\tconst pipes = this.resolvePipes(meta);\n\t\tconst factories = this.resolveFactories(meta);\n\t\tthis.sortFactories(factories);\n\t\tfactories.unshift(bootstrap);\n\t\tconst selectors = this.unwrapSelectors(factories);\n\t\treturn { factories, pipes, selectors, bootstrap, node, nodeInnerHTML };\n\t}\n\n\tprotected static resolveImportedMeta(moduleFactory: typeof Module): IModuleParsedImportedMeta {\n\t\tconst meta: IModuleParsedImportedMeta = Object.assign({\n\t\t\timports: [],\n\t\t\tdeclarations: [],\n\t\t\tpipes: [],\n\t\t\texports: []\n\t\t}, moduleFactory.meta);\n\t\tmeta.imports = (moduleFactory.meta.imports || []).map(moduleFactory => this.resolveImportedMeta(moduleFactory));\n\t\treturn meta;\n\t}\n\n\tprotected static resolvePipes(meta: IModuleParsedImportedMeta, exported?: boolean): PipeMap {\n\t\tconst importedPipes: PipeMap[] = meta.imports.map((importMeta: IModuleParsedImportedMeta) => this.resolvePipes(importMeta, true));\n\t\tconst pipes: PipeMap = {};\n\t\tconst pipeList: PipeList = (exported ? meta.exports : meta.declarations).filter((x): x is typeof Pipe => x.prototype instanceof Pipe);\n\t\tpipeList.forEach(pipeFactory => pipes[pipeFactory.meta.name] = pipeFactory);\n\t\treturn Object.assign({}, ...importedPipes, pipes);\n\t}\n\n\tprotected static resolveFactories(meta: IModuleParsedImportedMeta, exported?: boolean): FactoryList {\n\t\tconst importedFactories: FactoryList[] = meta.imports.map((importMeta: any) => this.resolveFactories(importMeta, true));\n\t\tconst factoryList: FactoryList = (exported ? meta.exports : meta.declarations).filter((x): x is typeof Factory => x.prototype instanceof Factory);\n\t\treturn Array.prototype.concat.call(factoryList, ...importedFactories);\n\t}\n\n\tprotected static sortFactories(factories: FactoryList): void {\n\t\tfactories.sort((a, b) => {\n\t\t\tconst ai = ORDER.reduce((p, c, i) => a.prototype instanceof c ? i : p, -1);\n\t\t\tconst bi = ORDER.reduce((p, c, i) => b.prototype instanceof c ? i : p, -1);\n\t\t\t// return ai - bi;\n\t\t\tconst o = ai - bi;\n\t\t\tif (o === 0) {\n\t\t\t\treturn (a.meta.hosts ? 1 : 0) - (b.meta.hosts ? 1 : 0);\n\t\t\t}\n\t\t\treturn o;\n\t\t});\n\t}\n\n\tprotected static getExpressions(selector: string): MatchFunction[] {\n\t\tlet matchers: ((node: HTMLElement) => boolean)[] = [];\n\t\tselector.replace(/\\.([\\w\\-\\_]+)|\\[(.+?\\]*)(\\=)(.*?)\\]|\\[(.+?\\]*)\\]|([\\w\\-\\_]+)/g, function (value: string, c1, a2, u3, v4, a5, e6) {\n\t\t\tif (c1) {\n\t\t\t\tmatchers.push(function (node) {\n\t\t\t\t\treturn node.classList.contains(c1);\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (a2) {\n\t\t\t\tmatchers.push(function (node) {\n\t\t\t\t\treturn (node.hasAttribute(a2) && node.getAttribute(a2) === v4) ||\n\t\t\t\t\t\t(node.hasAttribute(`[${a2}]`) && node.getAttribute(`[${a2}]`) === v4);\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (a5) {\n\t\t\t\tmatchers.push(function (node) {\n\t\t\t\t\treturn node.hasAttribute(a5) || node.hasAttribute(`[${a5}]`);\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (e6) {\n\t\t\t\tmatchers.push(function (node) {\n\t\t\t\t\treturn node.nodeName.toLowerCase() === e6.toLowerCase();\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn '';\n\t\t});\n\t\treturn matchers;\n\t}\n\n\tprotected static unwrapSelectors(factories: FactoryList): SelectorFunction[] {\n\t\tconst selectors: SelectorFunction[] = [];\n\t\tfactories.forEach((factory: typeof Factory) => {\n\t\t\tif (factory.meta && factory.meta.selector) {\n\t\t\t\tfactory.meta.selector.split(',').forEach((selector: string) => {\n\t\t\t\t\tselector = selector.trim();\n\t\t\t\t\tlet excludes: MatchFunction[] = [];\n\t\t\t\t\tconst matchSelector = selector.replace(/\\:not\\((.+?)\\)/g, (value, unmatchSelector) => {\n\t\t\t\t\t\texcludes = this.getExpressions(unmatchSelector);\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t});\n\t\t\t\t\tconst includes: MatchFunction[] = this.getExpressions(matchSelector);\n\t\t\t\t\tselectors.push((node) => {\n\t\t\t\t\t\tconst included = includes.reduce((p, match) => {\n\t\t\t\t\t\t\treturn p && match(node);\n\t\t\t\t\t\t}, true);\n\t\t\t\t\t\tconst excluded = excludes.reduce((p, match) => {\n\t\t\t\t\t\t\treturn p || match(node);\n\t\t\t\t\t\t}, false);\n\t\t\t\t\t\tif (included && !excluded) {\n\t\t\t\t\t\t\treturn { node, factory, selector } as ISelectorResult;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\treturn selectors;\n\t}\n\n}\n","import Platform from './platform';\n\nexport default class Browser extends Platform { }\n","import { BehaviorSubject } from 'rxjs';\nimport { Browser, Component, CoreModule, Directive, Module, StyleDirective } from '../../src/rxcomp';\n\nclass RootComponent extends Component {\n\tbackground = '#b9dbff';\n\titems = [1, 2, 3];\n\thref = 'https://github.com/actarian/rxcomp';\n\n\tonItem(item: number) {\n\t\tconsole.log('RootComponent.item', item);\n\t}\n}\nRootComponent.meta = {\n\tselector: '[root-component]',\n};\n\nclass SubComponent extends Component {\n\tbackground = '#ffb9b9';\n\ttoggle?: BehaviorSubject<any>;\n\titem?: number;\n\n\tonToggle() {\n\t\t// console.log(this.item);\n\t\tthis.toggle!.next(this.item);\n\t}\n}\nSubComponent.meta = {\n\tselector: '[sub-component]:not(.red)',\n\tinputs: ['item'],\n\toutputs: ['toggle'],\n\ttemplate: `<div [style]=\"{ 'background-color': background }\" (click)=\"onToggle()\" [innerHTML]=\"item\"></div>`\n};\n\nclass HostDirective extends Directive {\n\tstyle: any;\n\n\tonInit() {\n\t\tconsole.log('style', this.style);\n\t}\n}\nHostDirective.meta = {\n\tselector: '[host]',\n\thosts: { style: StyleDirective }\n};\n\nclass HostedDirective extends Directive {\n\thost?: HostDirective;\n\n\tonInit() {\n\t\tconsole.log('host', this.host);\n\t}\n}\nHostedDirective.meta = {\n\tselector: '[hosted]',\n\thosts: { host: HostDirective }\n};\n\nclass AppModule extends Module { }\nAppModule.meta = {\n\timports: [\n\t\tCoreModule\n\t],\n\tdeclarations: [\n\t\tHostedDirective,\n\t\tHostDirective,\n\t\tSubComponent\n\t],\n\tbootstrap: RootComponent,\n};\n\nBrowser.bootstrap(AppModule);\n"]}