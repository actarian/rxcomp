{"version":3,"sources":["web/client/js/test.performance.ts","../../src/core/factory.ts","../../src/core/directive.ts","../../src/class/class.directive.ts","../../src/error/error.ts","../../src/event/event.directive.ts","../../src/core/structure.ts","../../src/core/component.ts","../../src/core/context.ts","../../src/for/for.item.ts","../../src/for/for.structure.ts","../../src/href/href-target.directive.ts","../../src/href/href.directive.ts","../../src/if/if.structure.ts","../../src/inner-html/inner-html.directive.ts","../../src/json/json.component.ts","../../src/core/pipe.ts","../../src/platform/platform.ts","../../src/platform/common/serializer/serializer.ts","../../src/json/json.pipe.ts","../../src/module/module.ts","../../src/src/src.directive.ts","../../src/style/style.directive.ts","../../src/core.module.ts","../../src/platform/common/window/window.ts","../../src/platform/browser.ts","../../web/client/js/test.performance.ts"],"names":["rxjs","operators","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","Constructor","protoProps","staticProps","prototype","_inheritsLoose","subClass","superClass","create","constructor","__proto__","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","_setPrototypeOf","p","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","toString","call","e","_construct","Parent","args","Class","a","push","apply","instance","Function","bind","arguments","_wrapNativeSuper","_cache","Map","undefined","fn","indexOf","TypeError","has","get","set","Wrapper","this","value","CONTEXT_MAP","NODE_MAP","EXPRESSION_MAP","Factory","unsubscribe$","Subject","changes$","_proto","onInit","onChanges","changes","onView","onDestroy","pushChanges","next","onParentDidChange","getContext","module","resolveInputsOutputs","mapExpression","expression","Directive","_Factory","ClassDirective","_this","_Directive","class","keys","_this2","node","Array","slice","classList","forEach","object","split","concat","setAttribute","join","selector","inputs","ModuleError","_Error","Error","ExpressionError","_Error2","error","params","message","name","template","outerHTML","ErrorInterceptorHandler","interceptor","handle","intercept","DefaultErrorHandler","of","ErrorInterceptors","nextError$","ReplaySubject","errors$","pipe","switchMap","reduceRight","tap","console","EventDirective","event","_getContext","parentInstance","replace","event$","fromEvent","shareReplay","getAttribute","outputFunction","makeFunction","takeUntil","subscribe","resolve","Structure","Component","instances","parse","RESERVED_PROPERTIES","Context","descriptors","_Component","mergeDescriptors","defineProperties","self","ReferenceError","_assertThisInitialized","context","len","source","properties","getOwnPropertyNames","_loop","shift","hasOwnProperty","getOwnPropertyDescriptor","_len","ForItem","$key","$value","index","count","_Context","even","ForStructure","_Structure","tokens","getForExpressionTokens","nodeRef","document","createComment","parentNode","replaceChild","removeAttribute","data","for","isArray","items","total","previous","Math","max","clonedNode","cloneNode","insertBefore","makeInstance","compile","removeChild","remove","iterable","trim","expressions","map","x","filter","forExpressions","keyValueMatches","match","indexExpressions","HrefTargetDirective","target_","HrefDirective","href","href_","IfStructure","element","_getContext2","Boolean","if","InnerHtmlDirective","innerHTML","innerHTML_","JsonComponent","active","onToggle","Pipe","transform","ORDER","Platform","bootstrap","moduleFactory","meta","resolveMeta","imports","querySelector","resolveImportedMeta","nodeInnerHTML","pipes","resolvePipes","factories","resolveFactories","sortFactories","unshift","selectors","unwrapSelectors","assign","declarations","exports","exported","importedPipes","importMeta","pipeFactory","_Array$prototype$conc","_this3","importedFactories","factoryList","sort","b","reduce","c","hosts","getExpressions","matchers","c1","a2","u3","v4","a5","e6","contains","hasAttribute","nodeName","toLowerCase","_this4","factory","excludes","matchSelector","unmatchSelector","includes","PLATFORM_BROWSER","window","isPlatformBrowser","navigator","userAgent","process","versions","Serializer","encode","encoders","encodeJson","decode","decoders","decodeJson","encodeBase64","decodeBase64","circularRef","space","decoded","pool","JSON","stringify","encoded","btoa","Buffer","from","atob","JsonPipe","_Pipe","Module","nodeType","matches","childNodes","foundStructure","selectorResult","nextParentInstance","inject","makeContext","makeHosts","makeInputs","outputs","makeOutputs","startWith","cachedExpressionFunction","parseExpression","text","expressionFunction","getInputAttributeExpression","attribute","substring","payload","child","getParsableContextByElement","parseTextNode","keepInstance","keepContext","traverseDown","deleteContext","destroy","complete","nextError","expressionError","getHost","makeOutput","outputExpression","output$","output","_this5","nodeExpressions","parseTextNodeExpression","wholeText","replacedText","nodeValue","textNode","createTextNode","pushFragment","to","fragment","regex","lastIndex","exec","find","nodeContexts","rx1","parsePipes","parseOptionalChaining","_len2","parsePipeParams","func","segments","word","block","t","substr","keepContexts","delete","traverseUp","callback","result","j","traversePrevious","previousSibling","traverseNext","nextSibling","contexts","current","SrcDirective","src","src_","StyleDirective","style","previousStyle","propertyName","removeProperty","splitted","setProperty","CoreModule","_Module","WINDOW","global","Browser","_Platform","rxcomp_hydrate_","_meta$node$parentNode","RootComponent","paramCount","URLSearchParams","location","search","parseInt","setIndex","runTask","setTimeout","floor","random","count_","fill","ItemComponent","_Component2","innerText","item","AppModule"],"mappings":"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","file":"docs\\js\\test.performance.min.js","sourcesContent":[null,"import { Subject } from 'rxjs';\nimport { ExpressionFunction, IContext, IElement, IFactoryMeta } from './types';\n\nexport const CONTEXTS: { [key: number]: IContext } = {};\nexport const NODES: { [key: number]: IContext[] } = {};\n\nexport const CONTEXT_MAP:Map<Factory, IContext> = new Map<Factory, IContext>();\nexport const NODE_MAP:Map<IElement, IContext[]> = new Map<IElement, IContext[]>();\nexport const EXPRESSION_MAP:Map<string, ExpressionFunction> = new Map<string, ExpressionFunction>();\n\n// console.log(CONTEXT_MAP, NODE_MAP, EXPRESSION_MAP);\n\nexport default class Factory {\n\tstatic meta: IFactoryMeta;\n\tunsubscribe$: Subject<void> = new Subject();\n\tchanges$: Subject<Factory> = new Subject();\n\t// changes$: ReplaySubject<Factory> = new ReplaySubject(1);\n\tonInit(): void { }\n\tonChanges(changes: Factory | Window): void { }\n\tonView(): void { }\n\tonDestroy(): void { }\n\tpushChanges(): void {\n\t\t// const { module } = getContext(this);\n\t\t// if (module.instances) {\n\t\t\tthis.changes$.next(this);\n\t\t\tthis.onView();\n\t\t// }\n\t}\n\tonParentDidChange(changes: Factory | Window): void {\n\t\tconst { module } = getContext(this);\n\t\t// console.log('Component.onParentDidChange', changes);\n\t\tmodule.resolveInputsOutputs(this, changes);\n\t\tthis.onChanges(changes);\n\t\tthis.pushChanges();\n\t}\n\t[key: string]: any; // extensible object\n\tconstructor(...args: any[]) {\n\t\t/*\n\t\t// !!! PROXY\n\t\tconst store: { [key: string]: any } = {};\n\t\tconst handler: ProxyHandler<Factory> = {\n\t\t\tget: function (target: Factory, prop: string, receiver: any) {\n\t\t\t\treturn target[prop];\n\t\t\t},\n\t\t\tset: function (target: Factory, prop: string | number | Symbol, value: any, receiver: any) {\n\t\t\t\tstore[prop as string] = value;\n\t\t\t\tconsole.log('Factory updating store', prop, value, store);\n\t\t\t\ttarget[prop as string] = value;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\tconst proxy = new Proxy(this, handler);\n\t\tconsole.log('proxy', proxy);\n\t\t*/\n\t}\n    static mapExpression(key:string, expression:string) {\n        return expression;\n    }\n}\nexport function getContext(instance: Factory): IContext {\n\treturn CONTEXT_MAP.get(instance) as IContext;\n}\n","import Factory from './factory';\n\nexport default class Directive extends Factory { }\n","import Directive from '../core/directive';\nimport { getContext } from '../core/factory';\nimport { IFactoryMeta } from '../core/types';\n\nexport default class ClassDirective extends Directive {\n\tclass: { [key: string]: string } | string | null = '';\n\tkeys: string[] = [];\n\tonInit() {\n\t\tconst { node } = getContext(this);\n\t\tArray.prototype.slice.call(node.classList).forEach((value: string) => {\n\t\t\tthis.keys.push(value);\n\t\t});\n\t\t// console.log('ClassDirective.onInit');\n\t}\n\tonChanges() {\n\t\tconst { node } = getContext(this);\n\t\tlet keys: string[] = [];\n\t\tconst object = this.class;\n\t\tif (typeof object === 'object') {\n\t\t\tfor (let key in object) {\n\t\t\t\tif (object[key]) {\n\t\t\t\t\tkeys.push(key);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (typeof object === 'string') {\n\t\t\tkeys = object.split(/\\s+/);\n\t\t}\n\t\tkeys = keys.concat(this.keys);\n\t\t// console.log(keys);\n\t\tnode.setAttribute('class', keys.join(' '));\n\t\t// console.log('ClassDirective.onChanges', keys);\n\t}\n\tstatic meta: IFactoryMeta = {\n\t\tselector: `[[class]]`,\n\t\tinputs: ['class']\n\t};\n}\n","import { Observable, of, ReplaySubject } from \"rxjs\";\nimport { switchMap, tap } from \"rxjs/operators\";\nimport Factory, { getContext } from \"../core/factory\";\nimport Module from \"../module/module\";\n\nexport class ModuleError extends Error { }\n\nexport class ExpressionError extends Error {\n\tmodule: Module;\n\tinstance: Factory;\n\texpression: string;\n\tparams: any[];\n\ttemplate: string;\n\tconstructor(error: Error, module: Module, instance: Factory, expression: string, params: any[]) {\n\t\tconst message: string = `ExpressionError in ${instance.constructor.name} \"${expression}\"\n\t\t${error.message}`;\n\t\tsuper(message);\n\t\tthis.name = error.name;\n\t\t// this.stack = error.stack;\n\t\tthis.module = module;\n\t\tthis.instance = instance;\n\t\tthis.expression = expression;\n\t\tthis.params = params;\n\t\tconst { node } = getContext(instance);\n\t\tthis.template = node.outerHTML;\n\t}\n}\nexport interface IErrorHandler {\n\thandle(error: Error): Observable<Error | void>\n}\nexport interface IErrorInterceptor {\n\tintercept(error: Error | void, next: IErrorHandler): Observable<Error | void>\n}\nexport class ErrorInterceptorHandler implements IErrorHandler {\n\tconstructor(\n\t\tprivate next: IErrorHandler,\n\t\tprivate interceptor: IErrorInterceptor,\n\t) { }\n\thandle(error: Error | void): Observable<Error | void> {\n\t\treturn this.interceptor.intercept(error, this.next);\n\t}\n}\nexport class DefaultErrorHandler implements IErrorHandler {\n\thandle(error: Error | void): Observable<Error | void> {\n\t\treturn of(error);\n\t}\n}\nexport const ErrorInterceptors: IErrorInterceptor[] = [];\nexport const nextError$: ReplaySubject<Error> = new ReplaySubject<Error>(1);\nexport const errors$: Observable<Error | void> = nextError$.pipe(\n\tswitchMap((error: Error) => {\n\t\tconst chain: IErrorHandler = ErrorInterceptors.reduceRight((next: IErrorHandler, interceptor: IErrorInterceptor) => {\n\t\t\treturn new ErrorInterceptorHandler(next, interceptor);\n\t\t}, new DefaultErrorHandler());\n\t\treturn chain.handle(error);\n\t}),\n\ttap((error: Error | void) => {\n\t\tif (error) {\n\t\t\tconsole.error(error);\n\t\t}\n\t}),\n);\n","import { fromEvent, Observable } from 'rxjs';\nimport { shareReplay, takeUntil } from 'rxjs/operators';\nimport Directive from '../core/directive';\nimport { getContext } from '../core/factory';\nimport { IFactoryMeta } from '../core/types';\n\nconst EVENTS = ['mousedown', 'mouseup', 'mousemove', 'click', 'dblclick', 'mouseover', 'mouseout', 'mouseenter', 'mouseleave', 'contextmenu', 'touchstart', 'touchmove', 'touchend', 'keydown', 'keyup', 'input', 'change', 'loaded'];\n\nexport default class EventDirective extends Directive {\n\tevent: string = '';\n\tonInit() {\n\t\tconst { module, node, parentInstance, selector } = getContext(this);\n\t\tconst event = this.event = selector.replace(/\\[|\\]|\\(|\\)/g, '');\n\t\tconst event$: Observable<Event> = fromEvent<Event>(node, event).pipe(shareReplay(1));\n\t\tconst expression = node.getAttribute(`(${event})`);\n\t\tif (expression) {\n\t\t\tconst outputFunction = module.makeFunction(expression, ['$event']);\n\t\t\tevent$.pipe(\n\t\t\t\ttakeUntil(this.unsubscribe$)\n\t\t\t).subscribe(event => {\n\t\t\t\tmodule.resolve(outputFunction, parentInstance, event);\n\t\t\t});\n\t\t} else {\n\t\t\tparentInstance[`${event}$`] = event$;\n\t\t}\n\t\t// console.log('EventDirective.onInit', 'selector', selector, 'event', event);\n\t}\n\tstatic meta: IFactoryMeta = {\n\t\tselector: `[(${EVENTS.join(')],[(')})]`,\n\t};\n}\n","import Factory from './factory';\n\nexport default class Structure extends Factory { }\n","\r\nimport Factory, { getContext } from './factory';\r\n\r\nexport default class Component extends Factory {\r\n\tpushChanges(): void {\r\n\t\tconst { module, node } = getContext(this);\r\n\t\tif (module.instances) {\r\n\t\t\tthis.changes$.next(this);\r\n\t\t\tmodule.parse(node, this);\r\n\t\t\tthis.onView();\r\n\t\t}\r\n\t}\r\n}\r\n","// import { BehaviorSubject, Subject } from 'rxjs';\nimport Component from './component';\nimport Factory, { getContext } from './factory';\n\nconst RESERVED_PROPERTIES = ['constructor', 'onInit', 'onChanges', 'onDestroy', 'pushChanges', 'changes$', 'unsubscribe$'];\n\nexport default class Context extends Component {\n\tconstructor(parentInstance: Factory, descriptors: { [key: string]: PropertyDescriptor } = {}) {\n\t\tsuper();\n\t\tdescriptors = Context.mergeDescriptors(parentInstance, parentInstance, descriptors);\n\t\tdescriptors = Context.mergeDescriptors(Object.getPrototypeOf(parentInstance), parentInstance, descriptors);\n\t\tObject.defineProperties(this, descriptors);\n\t}\n\tpushChanges(): void {\n\t\tconst context = getContext(this);\n\t\tif (!context.keys) {\n\t\t\tcontext.keys = [];\n\t\t\t// context.keys = Object.keys(context.parentInstance).filter(key => RESERVED_PROPERTIES.indexOf(key) === -1);\n\t\t\tfor (let i:number = 0, keys = Object.keys(context.parentInstance), len = keys.length; i < len; i++) {\n\t\t\t\tconst key = keys[i];\n\t\t\t\tif (RESERVED_PROPERTIES.indexOf(key) === -1) {\n\t\t\t\t\tcontext.keys.push(key);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// console.log(context.keys.join(','));\n\t\t}\n\t\tif (context.module.instances) {\n\t\t\tcontext.keys.forEach(key => {\n\t\t\t\t// console.log('Context', key, context.parentInstance);\n\t\t\t\tthis[key] = context.parentInstance[key];\n\t\t\t});\n\t\t}\n\t\tsuper.pushChanges();\n\t}\n\tonParentDidChange(changes: Factory | Window): void {\n\t\tthis.onChanges(changes);\n\t\tthis.pushChanges();\n\t}\n\tstatic mergeDescriptors(source: Object, instance: Factory, descriptors: { [key: string]: PropertyDescriptor } = {}): { [key: string]: PropertyDescriptor } {\n\t\tconst properties: string[] = Object.getOwnPropertyNames(source);\n\t\twhile (properties.length) {\n\t\t\tconst key: string = properties.shift() as string;\n\t\t\tif (RESERVED_PROPERTIES.indexOf(key) === -1 && !descriptors.hasOwnProperty(key)) {\n\t\t\t\tconst descriptor: PropertyDescriptor = Object.getOwnPropertyDescriptor(source, key) as PropertyDescriptor;\n\t\t\t\tif (typeof descriptor.value == 'function') {\n\t\t\t\t\tdescriptor.value = (...args: any[]) => {\n\t\t\t\t\t\treturn instance[key].apply(instance, args);\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tdescriptors[key] = descriptor;\n\t\t\t}\n\t\t}\n\t\treturn descriptors;\n\t}\n}\n","import Context from '../core/context';\nimport Factory from '../core/factory';\n\nexport default class ForItem extends Context {\n\tindex: number;\n\tcount: number;\n\t[key: string]: any;\n\t// !!! todo: payload options { key, $key, value, $value, index, count }\n\tconstructor(key: string, $key: number | string, value: string, $value: any, index: number, count: number, parentInstance: Factory) {\n\t\tsuper(parentInstance);\n\t\tthis[key] = $key;\n\t\tthis[value] = $value;\n\t\tthis.index = index;\n\t\tthis.count = count;\n\t}\n\tget first(): boolean { return this.index === 0; }\n\tget last(): boolean { return this.index === this.count - 1; }\n\tget even(): boolean { return this.index % 2 === 0; }\n\tget odd(): boolean { return !this.even; }\n}\n","import Factory, { getContext } from '../core/factory';\nimport Structure from '../core/structure';\nimport { IComment, IContext, IElement, IFactoryMeta, IForExpressionTokens } from '../core/types';\nimport Module from '../module/module';\nimport ForItem from './for.item';\n\nexport default class ForStructure extends Structure {\n\tinstances: Factory[] = [];\n\tnodeRef!: IComment;\n\ttokens!: IForExpressionTokens;\n\tonInit() {\n\t\tconst { node } = getContext(this);\n        const expression = node.getAttribute('*for');\n        this.tokens = ForStructure.getForExpressionTokens(expression);\n\t\tconst nodeRef: IComment = this.nodeRef = document.createComment(`*for`);\n\t\tnode.parentNode!.replaceChild(nodeRef, node);\n\t\tnode.removeAttribute('*for');\n\t}\n\tonChanges() {\n\t\tconst context: IContext = getContext(this);\n\t\tconst module: Module = context.module;\n\t\tconst node: IElement = context.node;\n\t\tconst selector: string = context.selector;\n\t\tconst parentInstance: Factory | Window = context.parentInstance;\n\t\tconst nodeRef = this.nodeRef;\n\t\tconst tokens: IForExpressionTokens = this.tokens!;\n\t\tlet data = this.for || [];\n\t\tconst isArray = Array.isArray(data);\n\t\tconst items: any[] = isArray ? data : Object.keys(data);\n\t\tconst total: number = items.length;\n\t\tconst instances = this.instances;\n\t\tconst previous: number = instances.length;\n\t\tfor (let i: number = 0, len:number = Math.max(previous, total); i < len; i++) {\n\t\t\tif (i < total) {\n\t\t\t\tconst key: number | string = isArray ? i : items[i];\n\t\t\t\tconst value: any = isArray ? items[key as number] : data[key];\n\t\t\t\tif (i < previous) {\n\t\t\t\t\t// update\n\t\t\t\t\tconst instance: Factory = instances[i];\n\t\t\t\t\tinstance[tokens.key] = key;\n\t\t\t\t\tinstance[tokens.value] = value;\n\t\t\t\t} else {\n\t\t\t\t\t// create\n\t\t\t\t\tconst clonedNode: IElement = node.cloneNode(true) as IElement;\n\t\t\t\t\tnodeRef.parentNode!.insertBefore(clonedNode, nodeRef);\n\t\t\t\t\tconst args = [tokens.key, key, tokens.value, value, i, total, parentInstance];\n\t\t\t\t\tconst instance = module.makeInstance(clonedNode, ForItem, selector, parentInstance, args);\n\t\t\t\t\tif (instance) {\n\t\t\t\t\t\tmodule.compile(clonedNode, instance);\n\t\t\t\t\t\tinstances.push(instance);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// remove\n\t\t\t\tconst instance: Factory = instances[i];\n\t\t\t\tconst { node } = getContext(instance);\n\t\t\t\tnode.parentNode!.removeChild(node);\n\t\t\t\tmodule.remove(node);\n\t\t\t}\n\t\t}\n\t\tinstances.length = total;\n\t}\n    static mapExpression(key:string, expression:string) {\n        const tokens = this.getForExpressionTokens(expression);\n        return tokens.iterable;\n    }\n\tstatic getForExpressionTokens(expression: string | null = null): IForExpressionTokens {\n\t\tif (expression == null) {\n\t\t\tthrow new Error('invalid for');\n\t\t}\n\t\tif (expression.trim().indexOf('let ') === -1 || expression.trim().indexOf(' of ') === -1) {\n\t\t\tthrow new Error('invalid for');\n\t\t}\n\t\tconst expressions: string[] = expression.split(';').map(x => x.trim()).filter(x => x !== '');\n\t\tconst forExpressions: string[] = expressions[0].split(' of ').map(x => x.trim());\n\t\tlet value: string = forExpressions[0].replace(/\\s*let\\s*/, '');\n\t\tconst iterable: string = forExpressions[1];\n\t\tlet key: string = 'index';\n\t\tconst keyValueMatches: RegExpMatchArray | null = value.match(/\\[(.+)\\s*,\\s*(.+)\\]/);\n\t\tif (keyValueMatches) {\n\t\t\tkey = keyValueMatches[1];\n\t\t\tvalue = keyValueMatches[2];\n\t\t}\n\t\tif (expressions.length > 1) {\n\t\t\tconst indexExpressions: string[] = expressions[1].split(/\\s*let\\s*|\\s*=\\s*index/).map(x => x.trim());\n\t\t\tif (indexExpressions.length === 3) {\n\t\t\t\tkey = indexExpressions[1];\n\t\t\t}\n\t\t}\n\t\treturn { key, value, iterable };\n\t}\n\tstatic meta: IFactoryMeta = {\n\t\tselector: '[*for]',\n\t\tinputs: ['for'],\n\t};\n}\n","import Directive from '../core/directive';\nimport { getContext } from '../core/factory';\nimport { IFactoryMeta } from '../core/types';\n\nexport default class HrefTargetDirective extends Directive {\n\tset target(target: string) {\n\t\tif (this.target_ !== target) {\n\t\t\tthis.target_ = target;\n\t\t\tconst { node } = getContext(this);\n\t\t\ttarget ? node.setAttribute('target', target) : node.removeAttribute('target');\n\t\t}\n\t}\n\tget target(): string {\n\t\treturn this.target_;\n\t}\n\tstatic meta: IFactoryMeta = {\n\t\tselector: '[[target]]',\n\t\tinputs: ['target'],\n\t};\n}\n","import Directive from '../core/directive';\nimport { getContext } from '../core/factory';\nimport { IFactoryMeta } from '../core/types';\n\nexport default class HrefDirective extends Directive {\n\tset href(href: string) {\n\t\tif (this.href_ !== href) {\n\t\t\tthis.href_ = href;\n\t\t\tconst { node } = getContext(this);\n\t\t\thref ? node.setAttribute('href', href) : node.removeAttribute('href');\n\t\t}\n\t}\n\tget href(): string {\n\t\treturn this.href_;\n\t}\n\tstatic meta: IFactoryMeta = {\n\t\tselector: '[[href]]',\n\t\tinputs: ['href'],\n\t};\n}\n\n","import { getContext } from '../core/factory';\nimport Structure from '../core/structure';\nimport { IComment, IElement, IFactoryMeta } from '../core/types';\n\nexport default class IfStructure extends Structure {\n\tnodeRef?: IComment;\n\tclonedNode?: IElement;\n\telement?: IElement;\n\tonInit() {\n\t\tconst { node } = getContext(this);\n\t\tconst nodeRef: IComment = this.nodeRef = document.createComment(`*if`);\n\t\tnode.parentNode!.replaceChild(nodeRef, node);\n\t\tconst clonedNode = node.cloneNode(true) as IElement;\n\t\tclonedNode.removeAttribute('*if');\n\t\tthis.clonedNode = clonedNode;\n\t\tthis.element = clonedNode.cloneNode(true) as IElement;\n\t}\n\tonChanges() {\n\t\tconst { module, parentInstance } = getContext(this);\n\t\tconst element: IElement = this.element!;\n\t\t// console.log('IfStructure.onChanges.if', this.if);\n\t\tif (Boolean(this.if)) { // !!! keep == loose equality\n\t\t\tif (!element.parentNode) {\n\t\t\t\tconst nodeRef = this.nodeRef!;\n\t\t\t\tnodeRef.parentNode!.insertBefore(element, nodeRef);\n\t\t\t\tmodule.compile(element, parentInstance);\n\t\t\t\t// console.log('IfStructure.onChanges.add', element);\n\t\t\t}\n\t\t} else {\n\t\t\tif (element.parentNode) {\n\t\t\t\tmodule.remove(element, this);\n\t\t\t\telement.parentNode.removeChild(element);\n\t\t\t\tthis.element = this.clonedNode!.cloneNode(true) as IElement;\n\t\t\t\t// console.log('IfStructure.onChanges.remove', element);\n\t\t\t}\n\t\t}\n\t}\n\tstatic meta: IFactoryMeta = {\n\t\tselector: '[*if]',\n\t\tinputs: ['if'],\n\t};\n}\n","import Directive from '../core/directive';\nimport { getContext } from '../core/factory';\nimport { IFactoryMeta } from '../core/types';\n\nexport default class InnerHtmlDirective extends Directive {\n\tset innerHTML(innerHTML: string) {\n\t\tif (this.innerHTML_ !== innerHTML) {\n\t\t\tthis.innerHTML_ = innerHTML;\n\t\t\tconst { node } = getContext(this);\n\t\t\tnode.innerHTML = innerHTML == undefined ? '' : innerHTML; // !!! keep == loose equality\n\t\t}\n\t}\n\tget innerHTML(): string {\n\t\treturn this.innerHTML_;\n\t}\n\tstatic meta: IFactoryMeta = {\n\t\tselector: `[innerHTML]`,\n\t\tinputs: ['innerHTML'],\n\t};\n}\n","import Component from '../core/component';\nimport { IFactoryMeta } from '../core/types';\n\nexport default class JsonComponent extends Component {\n\tactive: boolean = false;\n\tonToggle() {\n\t\tthis.active = !this.active;\n\t\tthis.pushChanges();\n\t}\n\tstatic meta: IFactoryMeta = {\n\t\tselector: 'json-component',\n\t\tinputs: ['item'],\n\t\ttemplate: /* html */`\n\t\t<div class=\"rxc-block\">\n\t\t\t<div class=\"rxc-head\">\n\t\t\t\t<span class=\"rxc-head__title\" (click)=\"onToggle()\">\n\t\t\t\t\t<span *if=\"!active\">+ json </span>\n\t\t\t\t\t<span *if=\"active\">- json </span>\n\t\t\t\t\t<span [innerHTML]=\"item\"></span>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t<ul class=\"rxc-list\" *if=\"active\">\n\t\t\t\t<li class=\"rxc-list__item\">\n\t\t\t\t\t<span class=\"rxc-list__value\" [innerHTML]=\"item | json\"></span>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</div>`,\n\t};\n}\n","import { IPipeMeta } from \"./types\";\n\nexport default class Pipe {\n\tstatic transform(value: any): any {\n\t\treturn value;\n\t}\n\tstatic meta: IPipeMeta;\n}\n","import Component from '../core/component';\nimport Directive from '../core/directive';\nimport Factory from '../core/factory';\nimport Pipe from '../core/pipe';\nimport Structure from '../core/structure';\nimport { FactoryList, IElement, IModuleParsedImportedMeta, IModuleParsedMeta, ISelectorResult, MatchFunction, PipeList, PipeMap, SelectorFunction } from '../core/types';\nimport { ModuleError } from '../error/error';\nimport Module from '../module/module';\n\nconst ORDER: FactoryList = [Structure, Component, Directive];\n\nexport default class Platform {\n\t/**\n\t * @param moduleFactory\n\t * @description This method returns an uncompiled module\n\t */\n\tstatic bootstrap(moduleFactory?: typeof Module): Module {\n\t\tif (!moduleFactory) {\n\t\t\tthrow new ModuleError('missing moduleFactory');\n\t\t}\n\t\tif (!moduleFactory.meta) {\n\t\t\tthrow new ModuleError('missing moduleFactory meta');\n\t\t}\n\t\tif (!moduleFactory.meta.bootstrap) {\n\t\t\tthrow new ModuleError('missing bootstrap');\n\t\t}\n\t\tif (!moduleFactory.meta.bootstrap.meta) {\n\t\t\tthrow new ModuleError('missing bootstrap meta');\n\t\t}\n\t\tif (!moduleFactory.meta.bootstrap.meta.selector) {\n\t\t\tthrow new ModuleError('missing bootstrap meta selector');\n\t\t}\n\t\tconst meta: IModuleParsedMeta = this.resolveMeta(moduleFactory!);\n\t\tconst module: Module = new moduleFactory();\n\t\tmodule.meta = meta;\n\t\tmeta.imports.forEach((moduleFactory: typeof Module) => {\n\t\t\tmoduleFactory.prototype.constructor.call(module);\n\t\t});\n\t\treturn module;\n\t}\n\tprotected static querySelector(selector: string): IElement | null {\n\t\treturn document.querySelector(selector);\n\t}\n\tprotected static resolveMeta(moduleFactory: typeof Module): IModuleParsedMeta {\n\t\tconst meta: IModuleParsedImportedMeta = this.resolveImportedMeta(moduleFactory);\n\t\tconst bootstrap: typeof Factory = moduleFactory.meta.bootstrap!;\n\t\tconst node = this.querySelector(bootstrap.meta.selector!);\n\t\tif (!node) {\n\t\t\tthrow new ModuleError(`missing node ${bootstrap.meta.selector}`);\n\t\t}\n\t\tconst nodeInnerHTML = node.innerHTML;\n\t\tconst pipes = this.resolvePipes(meta);\n\t\tconst factories = this.resolveFactories(meta);\n\t\tthis.sortFactories(factories);\n\t\tfactories.unshift(bootstrap);\n\t\tconst selectors = this.unwrapSelectors(factories);\n\t\treturn { factories, pipes, selectors, bootstrap, node, nodeInnerHTML, imports: moduleFactory.meta.imports || [] };\n\t}\n\tprotected static resolveImportedMeta(moduleFactory: typeof Module): IModuleParsedImportedMeta {\n\t\tconst meta: IModuleParsedImportedMeta = Object.assign({\n\t\t\timports: [],\n\t\t\tdeclarations: [],\n\t\t\tpipes: [],\n\t\t\texports: []\n\t\t}, moduleFactory.meta);\n\t\tmeta.imports = (moduleFactory.meta.imports || []).map(moduleFactory => this.resolveImportedMeta(moduleFactory));\n\t\treturn meta;\n\t}\n\tprotected static resolvePipes(meta: IModuleParsedImportedMeta, exported?: boolean): PipeMap {\n\t\tconst importedPipes: PipeMap[] = meta.imports.map((importMeta: IModuleParsedImportedMeta) => this.resolvePipes(importMeta, true));\n\t\tconst pipes: PipeMap = {};\n\t\tconst pipeList: PipeList = (exported ? meta.exports : meta.declarations).filter((x): x is typeof Pipe => x.prototype instanceof Pipe);\n\t\tpipeList.forEach(pipeFactory => pipes[pipeFactory.meta.name] = pipeFactory);\n\t\treturn Object.assign({}, ...importedPipes, pipes);\n\t}\n\tprotected static resolveFactories(meta: IModuleParsedImportedMeta, exported?: boolean): FactoryList {\n\t\tconst importedFactories: FactoryList[] = meta.imports.map((importMeta: any) => this.resolveFactories(importMeta, true));\n\t\tconst factoryList: FactoryList = (exported ? meta.exports : meta.declarations).filter((x): x is typeof Factory => x.prototype instanceof Factory);\n\t\treturn Array.prototype.concat.call(factoryList, ...importedFactories);\n\t}\n\tprotected static sortFactories(factories: FactoryList): void {\n\t\tfactories.sort((a, b) => {\n\t\t\tconst ai = ORDER.reduce((p, c, i) => a.prototype instanceof c ? i : p, -1);\n\t\t\tconst bi = ORDER.reduce((p, c, i) => b.prototype instanceof c ? i : p, -1);\n\t\t\t// return ai - bi;\n\t\t\tconst o = ai - bi;\n\t\t\tif (o === 0) {\n\t\t\t\treturn (a.meta.hosts ? 1 : 0) - (b.meta.hosts ? 1 : 0);\n\t\t\t}\n\t\t\treturn o;\n\t\t});\n\t}\n\tprotected static getExpressions(selector: string): MatchFunction[] {\n\t\tlet matchers: ((node: HTMLElement) => boolean)[] = [];\n\t\tselector.replace(/\\.([\\w\\-\\_]+)|\\[(.+?\\]*)(\\=)(.*?)\\]|\\[(.+?\\]*)\\]|([\\w\\-\\_]+)/g, function (value: string, c1, a2, u3, v4, a5, e6) {\n\t\t\tif (c1) {\n\t\t\t\t// className\n\t\t\t\tmatchers.push(function (node) {\n\t\t\t\t\treturn node.classList.contains(c1);\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (a2) {\n\t\t\t\tmatchers.push(function (node) {\n\t\t\t\t\treturn (node.hasAttribute(a2) && node.getAttribute(a2) === v4) ||\n\t\t\t\t\t\t(node.hasAttribute(`[${a2}]`) && node.getAttribute(`[${a2}]`) === v4);\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (a5) {\n\t\t\t\t// attribute\n\t\t\t\tmatchers.push(function (node) {\n\t\t\t\t\treturn node.hasAttribute(a5) || node.hasAttribute(`[${a5}]`);\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (e6) {\n\t\t\t\t// nodeName\n\t\t\t\tmatchers.push(function (node) {\n\t\t\t\t\treturn node.nodeName.toLowerCase() === e6.toLowerCase();\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn '';\n\t\t});\n\t\treturn matchers;\n\n\t}\n\tprotected static unwrapSelectors(factories: FactoryList): SelectorFunction[] {\n\t\tconst selectors: SelectorFunction[] = [];\n\t\tfactories.forEach((factory: typeof Factory) => {\n\t\t\tif (factory.meta && factory.meta.selector) {\n\t\t\t\tfactory.meta.selector.split(',').forEach((selector: string) => {\n\t\t\t\t\tselector = selector.trim();\n\t\t\t\t\tlet excludes: MatchFunction[] = [];\n\t\t\t\t\tconst matchSelector = selector.replace(/\\:not\\((.+?)\\)/g, (value, unmatchSelector) => {\n\t\t\t\t\t\texcludes = this.getExpressions(unmatchSelector);\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t});\n\t\t\t\t\tconst includes: MatchFunction[] = this.getExpressions(matchSelector);\n\t\t\t\t\tselectors.push(function(node) {\n\t\t\t\t\t\tconst included = includes.reduce(function(p, match) {\n\t\t\t\t\t\t\treturn p && match(node);\n\t\t\t\t\t\t}, true);\n\t\t\t\t\t\tif (included) {\n\t\t\t\t\t\t\tconst excluded = excludes.length && excludes.reduce(function(p, match) {\n\t\t\t\t\t\t\t\treturn p || match(node);\n\t\t\t\t\t\t\t}, false);\n\t\t\t\t\t\t\tif (!excluded) {\n\t\t\t\t\t\t\t\treturn { node, factory, selector } as ISelectorResult;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\treturn selectors;\n\t}\n}\n/* global window self */\nexport const PLATFORM_BROWSER = typeof window !== 'undefined' && typeof window.document !== 'undefined';\n/* eslint-disable no-undef */\nexport const PLATFORM_JS_DOM = (typeof window !== 'undefined' && window.name === 'nodejs') || (typeof navigator !== 'undefined' && navigator.userAgent.indexOf('Node.js') !== -1) || (typeof navigator !== 'undefined' && navigator.userAgent.indexOf('jsdom') !== -1);\n/* eslint-enable no-undef */\nexport const PLATFORM_NODE = typeof process !== 'undefined' && process.versions != null && process.versions.node != null;\n/* eslint-disable no-restricted-globals */\nexport const PLATFORM_WEB_WORKER = typeof self === 'object' && self.constructor && self.constructor.name === 'DedicatedWorkerGlobalScope';\nexport const isPlatformServer = PLATFORM_NODE;\nexport const isPlatformBrowser = !PLATFORM_NODE && PLATFORM_BROWSER;\nexport const isPlatformWorker = PLATFORM_WEB_WORKER;\n","import { isPlatformBrowser } from \"../../platform\";\n\n/**\n * @example Serializer.encode(value, [encodeJson, encodeUriComponent, encodeBase64]);\n * @example Serializer.decode(value, [decodeBase64, decodeUriComponent, decodeJson]);\n */\nexport default class Serializer {\n\tstatic encode<T>(value: any, encoders: ((from: any) => any)[]): T;\n\tstatic encode(value: any, encoders: ((from: any) => any)[] = [encodeJson]): any {\n\t\treturn encoders.reduce((p, c) => c(p), value);\n\t}\n\n\tstatic decode<T>(value: any, decoders: ((from: any) => any)[]): T;\n\tstatic decode(value: any, decoders: ((from: any) => any)[] = [decodeJson]): any {\n\t\treturn decoders.reduce((p, c) => c(p), value);\n\t}\n\n\tstatic encodeJson<T>(value: any): T;\n\tstatic encodeJson(value: any): any {\n\t\treturn this.encode(value, [encodeJson]);\n\t}\n\n\tstatic decodeJson<T>(value: any): T;\n\tstatic decodeJson(value: any): any {\n\t\treturn this.decode(value, [decodeJson]);\n\t}\n\n\tstatic encodeBase64<T>(value: any): T;\n\tstatic encodeBase64(value: any): any {\n\t\treturn this.encode(value, [encodeJson, encodeBase64]);\n\t}\n\n\tstatic decodeBase64<T>(value: any): T;\n\tstatic decodeBase64(value: any): any {\n\t\treturn this.decode(value, [decodeBase64, decodeJson]);\n\t}\n}\nexport function encodeJson(value: any, circularRef?: any, space?: string | number): string {\n\tlet decoded: any;\n\ttry {\n\t\t// const pool: Map<any, boolean> = new Map();\n\t\tconst pool: any[] = [];\n\t\tconst json: string = JSON.stringify(value, function (key, value) {\n\t\t\tif (typeof value === 'object' && value != null) {\n\t\t\t\t// if (pool.has(value)) {\n\t\t\t\tif (pool.indexOf(value) !== -1) {\n\t\t\t\t\t// console.warn(`Serializer.encodeJson.error`, `circular reference found, discard key \"${key}\"`);\n\t\t\t\t\treturn circularRef;\n\t\t\t\t}\n\t\t\t\tpool.push(value);\n\t\t\t\t// pool.set(value, true);\n\t\t\t}\n\t\t\treturn value;\n\t\t}, space);\n\t\tdecoded = json;\n\t} catch (error) {\n\t\t// console.warn(`Serializer.encodeJson.error`, value, error);\n\t}\n\treturn decoded;\n}\nexport function encodeJsonWithOptions(circularRef?: any, space?: string | number): (value: any) => string {\n\treturn (value: any) => encodeJson(value, circularRef, space);\n}\nexport function decodeJson(value: string): any {\n\tlet decoded: any;\n\tif (value) {\n\t\ttry {\n\t\t\tdecoded = JSON.parse(value);\n\t\t} catch (error) {\n\t\t\t// console.warn(`Serializer.decodeJson.error`, value, error);\n\t\t}\n\t}\n\treturn decoded;\n}\nexport function encodeBase64(value: string): string {\n\tlet encoded: string;\n\ttry {\n\t\tencoded = isPlatformBrowser ? btoa(value) : Buffer.from(value).toString('base64');\n\t} catch (error) {\n\t\tencoded = value;\n\t}\n\treturn encoded;\n}\nexport function decodeBase64(value: string): string {\n\tlet decoded: string;\n\ttry {\n\t\tdecoded = isPlatformBrowser ? atob(value) : Buffer.from(value, 'base64').toString();\n\t} catch (error) {\n\t\tdecoded = value;\n\t}\n\treturn decoded;\n}\n","import Pipe from '../core/pipe';\nimport { IPipeMeta } from '../core/types';\nimport Serializer, { encodeJsonWithOptions } from '../platform/common/serializer/serializer';\n\nexport default class JsonPipe extends Pipe {\n\tstatic transform(value: any): string | undefined {\n\t\treturn Serializer.encode(value, [encodeJsonWithOptions('#ref', 2)]);\n\t}\n\tstatic meta: IPipeMeta = {\n\t\tname: 'json',\n\t};\n}\n","import { Observable, Subject } from 'rxjs';\nimport { startWith, takeUntil, tap } from 'rxjs/operators';\nimport Component from '../core/component';\nimport Context from '../core/context';\nimport Factory, { CONTEXT_MAP, EXPRESSION_MAP, getContext, NODE_MAP } from '../core/factory';\nimport Structure from '../core/structure';\nimport { ExpressionFunction, IContext, IElement, IFactoryMeta, IModuleMeta, IModuleParsedMeta, ISelectorResult, IText } from '../core/types';\nimport { ExpressionError, nextError$ } from '../error/error';\n\nexport default class Module {\n\tmeta!: IModuleParsedMeta; // !!!\n\tinstances?: Factory[];\n\tunsubscribe$: Subject<void> = new Subject();\n\tstatic forRoot?: (...args: any[]) => typeof Module;\n\tpublic compile(node: IElement, parentInstance: Factory | Window, instances: Factory[] = []): Factory[] {\n\t\tif (node.nodeType === 1) {\n\t\t\tconst selectors = this.meta.selectors;\n\t\t\tconst matches: ISelectorResult[] = [];\n\t\t\t// const childNodes: NodeListOf<ChildNode> = node.childNodes;\n\t\t\t// copying array to avoid multiple compilation\n\t\t\tconst childNodes: Array<ChildNode> = Array.prototype.slice.call(node.childNodes);\n\t\t\t// const foundStructure : boolean = Module.matchSelectors(node as HTMLElement, selectors, matches);\n\t\t\tlet foundStructure = false;\n\t\t\tfor (let i: number = 0, len: number = selectors.length; i < len; i++) {\n\t\t\t\tconst selectorResult: ISelectorResult | false = selectors[i](node);\n\t\t\t\tif (selectorResult) { // !== false\n\t\t\t\t\t// match found\n\t\t\t\t\tmatches.push(selectorResult as ISelectorResult);\n\t\t\t\t\tconst factory: typeof Factory = selectorResult.factory;\n\t\t\t\t\t// structure found\n\t\t\t\t\tif (factory.prototype instanceof Structure) {\n\t\t\t\t\t\tfoundStructure = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t// injecting template\n\t\t\t\t\tif (factory.prototype instanceof Component && factory.meta.template) {\n\t\t\t\t\t\tnode.innerHTML = factory.meta.template;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet nextParentInstance = parentInstance;\n\t\t\tmatches.forEach((match: ISelectorResult) => {\n\t\t\t\t// console.log('makeInstance', parentInstance.constructor.name, match.factory.name);\n\t\t\t\t// make instance\n\t\t\t\tconst instance: Factory | undefined = this.makeInstance(match.node, match.factory, match.selector, parentInstance);\n\t\t\t\tif (instance) {\n\t\t\t\t\tinstances.push(instance);\n\t\t\t\t\t// updating parentInstance\n\t\t\t\t\tif (match.factory.prototype instanceof Component) {\n\t\t\t\t\t\tnextParentInstance = instance;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (!foundStructure) {\n\t\t\t\t// compiling childNodes\n\t\t\t\tfor (let i: number = 0, len: number = childNodes.length; i < len; i++) {\n\t\t\t\t\tthis.compile(childNodes[i] as IElement, nextParentInstance, instances);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn instances;\n\t}\n\tpublic makeInstance(node: IElement, factory: typeof Factory, selector: string, parentInstance: Factory | Window, args?: any[], inject?: { [key: string]: any }): Factory {\n\t\tconst meta: IFactoryMeta = factory.meta;\n\t\t// creating factory instance\n\t\tconst instance = new factory(...(args || []));\n\t\t// console.log(instance.constructor.name, parentInstance.constructor.name);\n\t\t// injecting custom properties\n\t\tif (inject != null) {\n\t\t\tfor (let i:number = 0, keys = Object.keys(inject), len = keys.length; i < len; i++) {\n\t\t\t\tconst key = keys[i];\n\t\t\t\tObject.defineProperty(instance, key, {\n\t\t\t\t\tvalue: inject[key],\n\t\t\t\t\tconfigurable: false,\n\t\t\t\t\tenumerable: false,\n\t\t\t\t\twritable: true,\n\t\t\t\t});\n\t\t\t}\n\t\t\t/*\n\t\t\tObject.keys(inject).forEach((key: string) => {\n\t\t\t\t// console.log('Module.makeInstance', key, inject[key]);\n\t\t\t\tObject.defineProperty(instance, key, {\n\t\t\t\t\tvalue: inject[key],\n\t\t\t\t\tconfigurable: false,\n\t\t\t\t\tenumerable: false,\n\t\t\t\t\twritable: true,\n\t\t\t\t});\n\t\t\t});\n\t\t\t*/\n\t\t}\n\t\t// creating instance context\n\t\tconst context = Module.makeContext(this, instance, parentInstance, node, factory, selector);\n\t\t// creating component input and outputs\n\t\tif (instance instanceof Context) {\n\t\t\t// skipping hosts, inputs & outputs\n\t\t} else {\n\t\t\tthis.makeHosts(meta, instance, node);\n\t\t\tcontext.inputs = this.makeInputs(meta, node, factory);\n\t\t\tcontext.outputs = this.makeOutputs(meta, instance);\n\t\t\t// if (parentInstance instanceof Factory) {\n\t\t\tthis.resolveInputsOutputs(instance, parentInstance);\n\t\t\t// }\n\t\t}\n\t\t// calling onInit event\n\t\tinstance.onInit();\n\t\t// subscribe to parent changes\n\t\tif (parentInstance instanceof Factory) {\n\t\t\tparentInstance.changes$.pipe(\n\t\t\t\t// distinctUntilChanged(deepEqual),\n\t\t\t\tstartWith(parentInstance),\n\t\t\t\ttakeUntil(instance.unsubscribe$)\n\t\t\t).subscribe(function (changes: Factory | Window) {\n\t\t\t\tinstance.onParentDidChange(changes);\n\t\t\t});\n\t\t}\n\t\treturn instance;\n\t}\n\tpublic makeFunction(expression: string, params: string[] = ['$instance']): ExpressionFunction {\n\t\tconst name = expression + '_' + params.join(',');\n\t\tconst cachedExpressionFunction = EXPRESSION_MAP.get(name);\n\t\tif (cachedExpressionFunction) {\n\t\t\treturn cachedExpressionFunction;\n\t\t} else {\n\t\t\texpression = Module.parseExpression(expression);\n\t\t\tconst text: string = `\n\t\t\treturn (function (${params.join(',')}, $$module) {\n\t\t\t\ttry {\n\t\t\t\t\twith(this) {\n\t\t\t\t\t\tconst $$pipes = $$module.meta.pipes;\n\t\t\t\t\t\treturn ${expression};\n\t\t\t\t\t}\n\t\t\t\t} catch(error) {\n\t\t\t\t\t$$module.nextError(error, this, ${JSON.stringify(expression)}, arguments);\n\t\t\t\t}\n\t\t\t}.bind(this)).apply(this, arguments);`;\n\t\t\tconst expressionFunction = new Function(text) as ExpressionFunction;\n\t\t\t(expressionFunction as any).expression = expression;\n\t\t\tEXPRESSION_MAP.set(name, expressionFunction);\n\t\t\treturn expressionFunction;\n\t\t}\n\t}\n\tpublic resolveInputsOutputs(instance: Factory, changes: Factory | Window): void {\n\t\tconst context: IContext = getContext(instance);\n\t\tconst parentInstance: Factory | Window = context.parentInstance;\n\t\tconst inputs: { [key: string]: ExpressionFunction } = context.inputs!;\n\t\tfor (let i:number = 0, keys = Object.keys(inputs), len = keys.length; i < len; i++) {\n\t\t\tconst key = keys[i];\n\t\t\tconst expression: ExpressionFunction = inputs[key];\n\t\t\tconst value: any = this.resolve(expression, parentInstance, instance);\n\t\t\tinstance[key] = value;\n\t\t}\n\t\t/*\n\t\tObject.keys(inputs).forEach(key => {\n\t\t\tconst expression: ExpressionFunction = inputs[key];\n\t\t\tconst value: any = this.resolve(expression, parentInstance, instance);\n\t\t\tinstance[key] = value;\n\t\t});\n\t\t*/\n\t}\n\tpublic getInputAttributeExpression(key: string, node: IElement): string | null {\n\t\tlet expression: string | null = null;\n\t\tif (node.hasAttribute(`[${key}]`)) {\n\t\t\texpression = node.getAttribute(`[${key}]`);\n\t\t\t// console.log('Module.getInputAttributeExpression.expression.1', expression);\n\t\t} else if (node.hasAttribute(`*${key}`)) {\n\t\t\texpression = node.getAttribute(`*${key}`);\n\t\t\t// console.log('Module.getInputAttributeExpression.expression.2', expression);\n\t\t} else if (node.hasAttribute(key)) {\n\t\t\texpression = node.getAttribute(key);\n\t\t\tif (expression) {\n\t\t\t\tconst attribute: string = expression.replace(/({{)|(}})|(\")/g, function (substring: string, a, b, c) {\n\t\t\t\t\tif (a) {\n\t\t\t\t\t\treturn '\"+';\n\t\t\t\t\t}\n\t\t\t\t\tif (b) {\n\t\t\t\t\t\treturn '+\"';\n\t\t\t\t\t}\n\t\t\t\t\tif (c) {\n\t\t\t\t\t\treturn '\\\"';\n\t\t\t\t\t}\n\t\t\t\t\treturn '';\n\t\t\t\t});\n\t\t\t\texpression = `\"${attribute}\"`;\n\t\t\t\t// console.log('Module.getInputAttributeExpression.expression.3', expression);\n\t\t\t}\n\t\t}\n\t\t// console.log('Module.getInputAttributeExpression.expression', expression);\n\t\treturn expression;\n\t}\n\tpublic resolve(expression: ExpressionFunction, parentInstance: Factory | Window, payload: any): any {\n\t\t// console.log('Module.resolve', expression, parentInstance, payload, getContext);\n\t\treturn expression.apply(parentInstance, [payload, this]);\n\t}\n\tpublic parse(node: HTMLElement, instance: Factory): void {\n\t\tfor (let i: number = 0, len: number = node.childNodes.length; i < len; i++) {\n\t\t\tconst child: ChildNode = node.childNodes[i];\n\t\t\tif (child.nodeType === 1) {\n\t\t\t\tconst element: HTMLElement = child as HTMLElement;\n\t\t\t\tconst context: IContext | undefined = getParsableContextByElement(element);\n\t\t\t\tif (!context) {\n\t\t\t\t\tthis.parse(element, instance);\n\t\t\t\t}\n\t\t\t} else if (child.nodeType === 3) {\n\t\t\t\tconst text: IText = child as IText;\n\t\t\t\tthis.parseTextNode(text, instance);\n\t\t\t}\n\t\t}\n\t}\n\tpublic remove(node: Node, keepInstance?: Factory): Node {\n\t\tconst keepContext: IContext | undefined = keepInstance ? getContext(keepInstance) : undefined;\n\t\tModule.traverseDown(node, (node: Node) => {\n\t\t\tModule.deleteContext(node as IElement, keepContext);\n\t\t});\n\t\treturn node;\n\t}\n\tpublic destroy(): void {\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t\tthis.remove(this.meta.node);\n\t\tthis.meta.node.innerHTML = this.meta.nodeInnerHTML;\n\t}\n\tpublic nextError(error: Error, instance: Factory, expression: string, params: any[]): void {\n\t\tconst expressionError: ExpressionError = new ExpressionError(error, this, instance, expression, params);\n\t\tnextError$.next(expressionError);\n\t}\n\tprotected makeContext(instance: Factory, parentInstance: Factory | Window, node: IElement, selector: string): IContext {\n\t\tconst context: IContext = Module.makeContext(this, instance, parentInstance, node, instance.constructor as typeof Factory, selector);\n\t\t// console.log('Module.makeContext', context, context.instance, context.node);\n\t\treturn context;\n\t}\n\tprotected makeHosts(meta: IFactoryMeta, instance: Factory, node: IElement): void {\n\t\tif (meta.hosts) {\n\t\t\tfor (let i:number = 0, keys = Object.keys(meta.hosts), len = keys.length; i < len; i++) {\n\t\t\t\tconst key = keys[i];\n\t\t\t\tconst factory: typeof Factory = meta.hosts![key];\n\t\t\t\tinstance[key] = getHost(instance, factory, node);\n\t\t\t}\n\t\t\t/*\n\t\t\tObject.keys(meta.hosts).forEach((key: string) => {\n\t\t\t\tconst factory: typeof Factory = meta.hosts![key];\n\t\t\t\tinstance[key] = getHost(instance, factory, node);\n\t\t\t});\n\t\t\t*/\n\t\t}\n\t}\n\tprotected makeInputs(meta: IFactoryMeta, node: IElement, factory: typeof Factory): { [key: string]: ExpressionFunction } {\n\t\tconst inputs: { [key: string]: ExpressionFunction } = {};\n\t\tif (meta.inputs) {\n\t\t\tmeta.inputs.forEach(key => {\n\t\t\t\tlet expression: string | null = this.getInputAttributeExpression(key, node);\n\t\t\t\tif (expression) {\n\t\t\t\t\texpression = factory.mapExpression(key, expression);\n\t\t\t\t\tinputs[key] = this.makeFunction(expression);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn inputs;\n\t}\n\tprotected makeOutput(instance: Factory, key: string): Observable<any> {\n\t\tconst context: IContext = getContext(instance);\n\t\tconst node: IElement = context.node;\n\t\tconst parentInstance: Factory | Window = context.parentInstance;\n\t\tconst expression: string | null = node.getAttribute(`(${key})`);\n\t\tconst outputExpression: ExpressionFunction | null = expression ? this.makeFunction(expression, ['$event']) : null;\n\t\tconst output$: Observable<any> = new Subject<any>().pipe(\n\t\t\ttap((event) => {\n\t\t\t\tif (outputExpression) {\n\t\t\t\t\t// console.log(expression, parentInstance);\n\t\t\t\t\tthis.resolve(outputExpression, parentInstance, event);\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t\toutput$.pipe(\n\t\t\ttakeUntil(instance.unsubscribe$)\n\t\t).subscribe();\n\t\tinstance[key] = output$;\n\t\treturn output$;\n\t}\n\tprotected makeOutputs(meta: IFactoryMeta, instance: Factory): { [key: string]: Observable<any> } {\n\t\tconst outputs: { [key: string]: Observable<any> } = {};\n\t\tif (meta.outputs) {\n\t\t\tmeta.outputs.forEach((key: string) => {\n\t\t\t\tconst output = this.makeOutput(instance, key);\n\t\t\t\tif (output) {\n\t\t\t\t\toutputs[key] = output;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn outputs;\n\t}\n\tprotected parseTextNode(node: IText, instance: Factory): void {\n\t\tlet expressions: (ExpressionFunction | string)[] | undefined = node.nodeExpressions;\n\t\tif (!expressions) {\n\t\t\texpressions = this.parseTextNodeExpression(node.wholeText);\n\t\t}\n\t\tif (expressions.length) {\n\t\t\tconst replacedText: string = expressions.reduce((p: string, c: ExpressionFunction | string) => {\n\t\t\t\tlet text: string;\n\t\t\t\tif (typeof c === 'function') { // instanceOf ExpressionFunction ?;\n\t\t\t\t\t// console.log('Module.parseTextNode', c, instance);\n\t\t\t\t\ttext = this.resolve(c as ExpressionFunction, instance, instance);\n\t\t\t\t\tif (text == undefined) { // !!! keep == loose equality\n\t\t\t\t\t\ttext = '';\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\ttext = c;\n\t\t\t\t}\n\t\t\t\treturn p + text;\n\t\t\t}, '');\n\t\t\tif (node.nodeValue !== replacedText) {\n\t\t\t\tconst textNode: IText = document.createTextNode(replacedText) as IText;\n\t\t\t\ttextNode.nodeExpressions = expressions;\n\t\t\t\tnode.parentNode!.replaceChild(textNode, node);\n\t\t\t}\n\t\t} else {\n\t\t\tnode.nodeExpressions = expressions;\n\t\t}\n\t}\n\tprotected pushFragment(nodeValue: string, from: number, to: number, expressions: (ExpressionFunction | string)[]): void {\n\t\tconst fragment: string = nodeValue.substring(from, to);\n\t\texpressions.push(fragment);\n\t}\n\tprotected parseTextNodeExpression(nodeValue: string): (ExpressionFunction | string)[] {\n\t\tconst expressions: (ExpressionFunction | string)[] = [];\n\t\tconst regex: RegExp = /\\{{2}((([^{}])|(\\{([^{}]|(\\{.*?\\}))+?\\}))*?)\\}{2}/g;\n\t\tlet lastIndex: number = 0,\n\t\t\tmatches: RegExpExecArray | null;\n\t\twhile ((matches = regex.exec(nodeValue)) !== null) {\n\t\t\tconst index: number = regex.lastIndex - matches[0].length;\n\t\t\tif (index > lastIndex) {\n\t\t\t\tthis.pushFragment(nodeValue, index, lastIndex, expressions);\n\t\t\t}\n\t\t\tlastIndex = regex.lastIndex;\n\t\t\tif (matches[1]) {\n\t\t\t\tconst expression: ExpressionFunction = this.makeFunction(matches[1]);\n\t\t\t\texpressions.push(expression);\n\t\t\t}\n\t\t}\n\t\t// console.log('Module.parseTextNodeExpression', regex.source, expressions, nodeValue);\n\t\tconst length: number = nodeValue.length;\n\t\tif (length > lastIndex) {\n\t\t\tthis.pushFragment(nodeValue, lastIndex, length, expressions);\n\t\t}\n\t\tif (expressions.find(x => typeof x === 'function')) {\n\t\t\treturn expressions;\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\tprotected static makeContext(module: Module, instance: Factory, parentInstance: Factory | Window, node: IElement, factory: typeof Factory, selector: string): IContext {\n\t\tconst context: IContext = { module, instance, parentInstance, node, factory, selector };\n\t\tlet nodeContexts = NODE_MAP.get(node);\n\t\tif (!nodeContexts) {\n\t\t\tnodeContexts = [];\n\t\t\tNODE_MAP.set(node, nodeContexts);\n\t\t}\n\t\tnodeContexts.push(context);\n\t\tCONTEXT_MAP.set(instance, context);\n\t\treturn context;\n\t}\n\tprotected static parseExpression(expression: string): string {\n\t\tconst l: string = '┌';\n\t\tconst r: string = '┘';\n\t\tconst rx1: RegExp = /(\\()([^\\(\\)]*)(\\))/;\n\t\twhile (expression.match(rx1)) {\n\t\t\texpression = expression.replace(rx1, function (substring: string, ...args: any[]) {\n\t\t\t\treturn `${l}${Module.parsePipes(args[1])}${r}`;\n\t\t\t});\n\t\t}\n\t\texpression = Module.parsePipes(expression);\n\t\texpression = expression.replace(/(┌)|(┘)/g, function (substring: string, ...args) {\n\t\t\treturn args[0] ? '(' : ')';\n\t\t});\n\t\treturn Module.parseOptionalChaining(expression);\n\t}\n\tprotected static parsePipes(expression: string): string {\n\t\tconst l: string = '┌';\n\t\tconst r: string = '┘';\n\t\tconst rx1: RegExp = /(.*?[^\\|])\\|([^\\|]+)/;\n\t\twhile (expression.match(rx1)) {\n\t\t\texpression = expression.replace(rx1, function (substring: string, ...args: any[]) {\n\t\t\t\tconst value: string = args[0].trim();\n\t\t\t\tconst params: string[] = Module.parsePipeParams(args[1]);\n\t\t\t\tconst func: string = params.shift()!.trim();\n\t\t\t\treturn `$$pipes.${func}.transform${l}${[value, ...params]}${r}`;\n\t\t\t});\n\t\t}\n\t\treturn expression;\n\t}\n\tprotected static parsePipeParams(expression: string): string[] {\n\t\tconst segments: string[] = [];\n\t\tlet i: number = 0,\n\t\t\tword: string = '',\n\t\t\tblock: number = 0;\n\t\tconst t: number = expression.length;\n\t\twhile (i < t) {\n\t\t\tconst c: string = expression.substr(i, 1);\n\t\t\tif (c === '{' || c === '(' || c === '[') {\n\t\t\t\tblock++;\n\t\t\t}\n\t\t\tif (c === '}' || c === ')' || c === ']') {\n\t\t\t\tblock--;\n\t\t\t}\n\t\t\tif (c === ':' && block === 0) {\n\t\t\t\tif (word.length) {\n\t\t\t\t\tsegments.push(word.trim());\n\t\t\t\t}\n\t\t\t\tword = '';\n\t\t\t} else {\n\t\t\t\tword += c;\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\t\tif (word.length) {\n\t\t\tsegments.push(word.trim());\n\t\t}\n\t\treturn segments;\n\t}\n\tprotected static parseOptionalChaining(expression: string): string {\n\t\tconst regex: RegExp = /(\\w+(\\?\\.))+([\\.|\\w]+)/g;\n\t\tlet previous: string;\n\t\texpression = expression.replace(regex, function (substring: string, ...args: any[]) {\n\t\t\tconst tokens: string[] = substring.split('?.');\n\t\t\tfor (let i: number = 0, len: number = tokens.length - 1; i < len; i++) {\n\t\t\t\tconst a: string = i > 0 ? `(${tokens[i]} = ${previous})` : tokens[i];\n\t\t\t\tconst b: string = tokens[i + 1];\n\t\t\t\tprevious = i > 0 ? `${a}.${b}` : `(${a} ? ${a}.${b} : void 0)`;\n\t\t\t}\n\t\t\treturn previous || '';\n\t\t});\n\t\treturn expression;\n\t}\n\tprotected static deleteContext(node: IElement, keepContext: IContext | undefined): IContext[] {\n\t\tconst keepContexts: IContext[] = [];\n\t\tconst nodeContexts: IContext[] | undefined = NODE_MAP.get(node);\n\t\tif (nodeContexts) {\n\t\t\tnodeContexts.forEach((context: IContext) => {\n\t\t\t\tif (context === keepContext) {\n\t\t\t\t\tkeepContexts.push(keepContext);\n\t\t\t\t} else {\n\t\t\t\t\tconst instance: Factory = context.instance;\n\t\t\t\t\tinstance.unsubscribe$.next();\n\t\t\t\t\tinstance.unsubscribe$.complete();\n\t\t\t\t\tinstance.onDestroy();\n\t\t\t\t\tCONTEXT_MAP.delete(instance);\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (keepContexts.length) {\n\t\t\t\tNODE_MAP.set(node, keepContexts);\n\t\t\t} else {\n\t\t\t\tNODE_MAP.delete(node);\n\t\t\t}\n\t\t}\n\t\treturn keepContexts;\n\t}\n\tprotected static traverseUp(node: Node | null, callback: (node: Node, i: number) => any, i: number = 0): any {\n\t\tif (!node) {\n\t\t\treturn;\n\t\t}\n\t\tconst result = callback(node, i);\n\t\tif (result) {\n\t\t\treturn result;\n\t\t}\n\t\treturn this.traverseUp(node.parentNode, callback, i + 1);\n\t}\n\tprotected static traverseDown(node: Node | null, callback: (node: Node, i: number) => any, i: number = 0): any {\n\t\tif (!node) {\n\t\t\treturn;\n\t\t}\n\t\tlet result = callback(node, i);\n\t\tif (result) {\n\t\t\treturn result;\n\t\t}\n\t\tif (node.nodeType === 1) {\n\t\t\tlet j = 0,\n\t\t\t\tt = node.childNodes.length;\n\t\t\twhile (j < t && !result) {\n\t\t\t\tresult = this.traverseDown(node.childNodes[j], callback, i + 1);\n\t\t\t\tj++;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\tprotected static traversePrevious(node: Node | null, callback: (node: Node, i: number) => any, i: number = 0): any {\n\t\tif (!node) {\n\t\t\treturn;\n\t\t}\n\t\tconst result = callback(node, i);\n\t\tif (result) {\n\t\t\treturn result;\n\t\t}\n\t\treturn this.traversePrevious(node.previousSibling, callback, i + 1);\n\t}\n\tprotected static traverseNext(node: Node | null, callback: (node: Node, i: number) => any, i: number = 0): any {\n\t\tif (!node) {\n\t\t\treturn;\n\t\t}\n\t\tconst result = callback(node, i);\n\t\tif (result) {\n\t\t\treturn result;\n\t\t}\n\t\treturn this.traverseNext(node.nextSibling, callback, i + 1);\n\t}\n\t/*\n\tprotected static matchSelectors(node: HTMLElement, selectors: SelectorFunction[], results: ISelectorResult[]): boolean {\n\t\tlet foundStructure = false;\n\t\tfor (let i: number = 0, len:number = selectors.length; i < len; i++) {\n\t\t\tconst selectorResult: ISelectorResult | false = selectors[i](node);\n\t\t\tif (selectorResult) { // !== false\n\t\t\t\tresults.push(selectorResult as ISelectorResult);\n\t\t\t\tconst factory: typeof Factory = selectorResult.factory;\n\t\t\t\tif (factory.prototype instanceof Structure) {\n\t\t\t\t\tfoundStructure = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (factory.prototype instanceof Component && factory.meta.template) {\n\t\t\t\t\tnode.innerHTML = factory.meta.template;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn foundStructure;\n\t}\n\t*/\n\tstatic meta: IModuleMeta;\n}\nexport function getParsableContextByElement(element: HTMLElement): IContext | undefined {\n\tlet context: IContext | undefined;\n\tconst contexts: IContext[] | undefined = NODE_MAP.get(element);\n\tif (contexts) {\n\t\tcontext = contexts.reduce((previous: IContext | undefined, current: IContext) => {\n\t\t\tif (current.instance instanceof Context) {\n\t\t\t\treturn previous ? previous : current;\n\t\t\t} else if (current.instance instanceof Component) {\n\t\t\t\treturn current;\n\t\t\t} else {\n\t\t\t\treturn previous;\n\t\t\t}\n\t\t}, undefined);\n\t}\n\t// context = contexts ? contexts.find(x => x.instance instanceof Component) : undefined;\n\treturn context;\n}\nexport function getContextByNode(element: HTMLElement): IContext | undefined {\n\tlet context: IContext | undefined = getParsableContextByElement(element);\n\tif (context && context.factory.prototype instanceof Structure) {\n\t\treturn undefined;\n\t}\n\treturn context;\n}\nexport function getHost(instance: Factory, factory: typeof Factory, node: IElement): Factory | undefined {\n\tif (!node) {\n\t\tnode = getContext(instance).node;\n\t}\n\tconst nodeContexts: IContext[] | undefined = NODE_MAP.get(node);\n\tif (nodeContexts) {\n\t\t// console.log(nodeContexts);\n\t\tfor (let i: number = 0, len: number = nodeContexts.length; i < len; i++) {\n\t\t\tconst context: IContext = nodeContexts[i];\n\t\t\tif (context.instance !== instance) {\n\t\t\t\t// console.log(context.instance, instance);\n\t\t\t\tif (context.instance instanceof factory) {\n\t\t\t\t\treturn context.instance;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif (node.parentNode) {\n\t\treturn getHost(instance, factory, node.parentNode as IElement);\n\t} else {\n\t\treturn undefined;\n\t}\n}\n/*\nexport function deepEqual(prev: any, curr: any, pool: any[] = []): boolean {\n\tlet equal: boolean = typeof prev === typeof curr;\n\tif (prev && pool.indexOf(prev) === -1 && pool.indexOf(curr) === -1) {\n\t\tpool.push(prev, curr);\n\t\tconst type = Array.isArray(curr) ? 'array' : typeof curr;\n\t\tswitch (type) {\n\t\t\tcase 'array':\n\t\t\t\tequal = prev.length === curr.length;\n\t\t\t\tequal = equal && prev.reduce((p: boolean, a: any[], i: number) => p && deepEqual(a, curr[i], pool), true);\n\t\t\t\tbreak;\n\t\t\tcase 'object':\n\t\t\t\tif ('Symbol' in WINDOW && Symbol.iterator in prev) {\n\t\t\t\t\t// || prev instanceof Map\n\t\t\t\t\tequal = prev.size === curr.size;\n\t\t\t\t\tconst ea = prev.entries();\n\t\t\t\t\tconst eb = curr.entries();\n\t\t\t\t\tfor (let item = ea.next(); item.done !== true; item = ea.next()) {\n\t\t\t\t\t\tconst ia = item.value;\n\t\t\t\t\t\tconst ib = eb.next().value;\n\t\t\t\t\t\tequal = equal && deepEqual(ia, ib, pool);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst prevKeys = Object.keys(prev);\n\t\t\t\t\tconst currKeys = Object.keys(curr);\n\t\t\t\t\tequal = prevKeys.length === currKeys.length;\n\t\t\t\t\tequal = equal && prevKeys.reduce((p: boolean, k: string) => p && deepEqual(prev[k], curr[k], pool), true);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tequal = prev === curr;\n\t\t}\n\t}\n\t// console.log(equal, prev, curr);\n\treturn equal;\n}\n*/\n","import Directive from '../core/directive';\nimport { getContext } from '../core/factory';\nimport { IFactoryMeta } from '../core/types';\n\nexport default class SrcDirective extends Directive {\n\tset src(src: string) {\n\t\tif (this.src_ !== src) {\n\t\t\tthis.src_ = src;\n\t\t\tconst { node } = getContext(this);\n\t\t\tsrc ? node.setAttribute('src', src) : node.removeAttribute('src');\n\t\t}\n\t}\n\tget src(): string {\n\t\treturn this.src_;\n\t}\n\tstatic meta: IFactoryMeta = {\n\t\tselector: '[[src]]',\n\t\tinputs: ['src'],\n\t};\n}\n","import Directive from '../core/directive';\nimport { getContext } from '../core/factory';\nimport { IFactoryMeta } from '../core/types';\n\nexport default class StyleDirective extends Directive {\n\tstyle?: { [key: string]: string } | null;\n\tpreviousStyle?: { [key: string]: string } | null;\n\tonChanges() {\n\t\tconst { node } = getContext(this);\n\t\tconst style = this.style;\n\t\tconst previousStyle = this.previousStyle;\n\t\tif (previousStyle) {\n\t\t\tfor (let key in previousStyle) {\n\t\t\t\tif (!style || !style[key]) {\n\t\t\t\t\tconst splitted: string[] = key.split('.');\n\t\t\t\t\tconst propertyName = splitted.shift();\n\t\t\t\t\tnode.style.removeProperty(propertyName!);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (style) {\n\t\t\tfor (let key in style) {\n\t\t\t\tif (!previousStyle || previousStyle[key] !== style[key]) {\n\t\t\t\t\tconst splitted: string[] = key.split('.');\n\t\t\t\t\tconst propertyName = splitted.shift();\n\t\t\t\t\tconst value = style[key] + (splitted.length ? splitted[0] : '');\n\t\t\t\t\t// console.log(propertyName, value, style, key, style[key]);\n\t\t\t\t\tnode.style.setProperty(propertyName!, value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.previousStyle = style;\n\t\t// console.log('StyleDirective.onChanges', style);\n\t}\n\tstatic meta: IFactoryMeta = {\n\t\tselector: `[[style]]`,\n\t\tinputs: ['style']\n\t};\n}\n","\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport ClassDirective from './class/class.directive';\r\nimport Factory from './core/factory';\r\nimport Pipe from './core/pipe';\r\nimport { errors$ } from './error/error';\r\nimport EventDirective from './event/event.directive';\r\nimport ForStructure from './for/for.structure';\r\nimport HrefTargetDirective from './href/href-target.directive';\r\nimport HrefDirective from './href/href.directive';\r\nimport IfStructure from './if/if.structure';\r\nimport InnerHtmlDirective from './inner-html/inner-html.directive';\r\nimport JsonComponent from './json/json.component';\r\nimport JsonPipe from './json/json.pipe';\r\nimport Module from './module/module';\r\nimport SrcDirective from './src/src.directive';\r\nimport StyleDirective from './style/style.directive';\r\n\r\nconst factories: typeof Factory[] = [\r\n\tClassDirective,\r\n\tEventDirective,\r\n\tForStructure,\r\n\tHrefDirective,\r\n\tHrefTargetDirective,\r\n\tIfStructure,\r\n\tInnerHtmlDirective,\r\n\tJsonComponent,\r\n\tSrcDirective,\r\n\tStyleDirective,\r\n];\r\nconst pipes: typeof Pipe[] = [\r\n\tJsonPipe,\r\n];\r\nexport default class CoreModule extends Module {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\t// console.log('CoreModule');\r\n\t\terrors$.pipe(\r\n\t\t\ttakeUntil(this.unsubscribe$),\r\n\t\t).subscribe();\r\n\t}\r\n\tstatic meta = {\r\n\t\tdeclarations: [\r\n\t\t\t...factories,\r\n\t\t\t...pipes,\r\n\t\t],\r\n\t\texports: [\r\n\t\t\t...factories,\r\n\t\t\t...pipes,\r\n\t\t]\r\n\t};\r\n}\r\n","export const WINDOW: Window = ((typeof self === 'object' && self.self === self && self) || (typeof global === 'object' && global.global === global && global) || this) as unknown as Window;\n","import { IElement, IModuleParsedMeta } from '../core/types';\nimport { ModuleError } from '../error/error';\nimport Module from '../module/module';\nimport { WINDOW } from './common/window/window';\nimport Platform, { isPlatformBrowser } from './platform';\n\nexport default class Browser extends Platform {\n\t/**\n\t * @param moduleFactory\n\t * @description This method returns a Browser compiled module\n\t */\n\tstatic bootstrap(moduleFactory?: typeof Module): Module {\n\t\tif (!isPlatformBrowser) {\n\t\t\tthrow new ModuleError('missing platform browser, Window not found');\n\t\t}\n\t\tif (!moduleFactory) {\n\t\t\tthrow new ModuleError('missing moduleFactory');\n\t\t}\n\t\tif (!moduleFactory.meta) {\n\t\t\tthrow new ModuleError('missing moduleFactory meta');\n\t\t}\n\t\tif (!moduleFactory.meta.bootstrap) {\n\t\t\tthrow new ModuleError('missing bootstrap');\n\t\t}\n\t\tif (!moduleFactory.meta.bootstrap.meta) {\n\t\t\tthrow new ModuleError('missing bootstrap meta');\n\t\t}\n\t\tif (!moduleFactory.meta.bootstrap.meta.selector) {\n\t\t\tthrow new ModuleError('missing bootstrap meta selector');\n\t\t}\n\t\tconst meta: IModuleParsedMeta = this.resolveMeta(moduleFactory!);\n\t\tconst module: Module = new moduleFactory();\n\t\tmodule.meta = meta;\n\t\tmeta.imports.forEach((moduleFactory: typeof Module) => {\n\t\t\tmoduleFactory.prototype.constructor.call(module);\n\t\t});\n\t\tif (WINDOW.rxcomp_hydrate_) {\n\t\t\tconst clonedNode = meta.node.cloneNode() as IElement;\n\t\t\tclonedNode.innerHTML = meta.nodeInnerHTML = WINDOW.rxcomp_hydrate_.innerHTML;\n\t\t\tconst instances = module.compile(clonedNode, WINDOW);\n\t\t\tmodule.instances = instances;\n\t\t\t/*\n\t\t\tconst root = instances[0];\n\t\t\troot.pushChanges();\n\t\t\t*/\n\t\t\tmeta.node.parentNode?.replaceChild(clonedNode, meta.node);\n\t\t} else {\n\t\t\tconst instances = module.compile(meta.node, WINDOW);\n\t\t\tmodule.instances = instances;\n\t\t\t/*\n\t\t\tconst root = instances[0];\n\t\t\troot.pushChanges();\n\t\t\t*/\n\t\t}\n\t\treturn module;\n\t}\n}\n","import { Browser, Component, CoreModule, getContext, Module } from '../../../src/rxcomp';\n\nclass RootComponent extends Component {\n\tget count() {\n\t\treturn this.count_;\n\t}\n\tset count(count:number) {\n\t\tthis.count_ = count;\n\t\tthis.items = new Array(count).fill(0).map((x, i) => i + 1);\n\t}\n\tonInit() {\n\t\tthis.index = -1;\n\t\tlet params = new URLSearchParams(document.location.search.substring(1));\n\t\tlet paramCount = params.get('count');\n\t\tthis.count = (paramCount ? parseInt(paramCount) : 10);\n\t\t// this.runTask();\n\t}\n\tsetIndex(index:number) {\n\t\tthis.index = index;\n\t\tthis.pushChanges();\n\t}\n\trunTask() {\n\t\tsetTimeout(() => {\n\t\t\tthis.count = Math.floor(1 + Math.random() * 1000);\n\t\t\tthis.pushChanges();\n\t\t\tthis.runTask();\n\t\t}, 2000);\n\t}\n}\nRootComponent.meta = {\n\tselector: '[root-component]',\n};\n\nclass ItemComponent extends Component {\n\tonInit() {\n\t\tconst { node } = getContext(this);\n\t\tnode.innerText = this.item;\n\t}\n\t/*\n\tonInit() {\n\t\tconsole.log('ItemComponent.onInit', this.item);\n\t}\n\t*/\n}\nItemComponent.meta = {\n\tselector: '[item-component]',\n\tinputs: ['item'],\n\t// template: `<span [innerHTML]=\"item\"></span>`,\n};\n\nclass AppModule extends Module { }\nAppModule.meta = {\n\timports: [\n\t\tCoreModule\n\t],\n\tdeclarations: [\n\t\tItemComponent,\n\t],\n\tbootstrap: RootComponent,\n};\n\nBrowser.bootstrap(AppModule);\n"]}