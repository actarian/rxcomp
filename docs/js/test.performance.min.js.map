{"version":3,"sources":["web/client/js/test.performance.ts","../../src/core/factory.ts","../../src/core/directive.ts","../../src/class/class.directive.ts","../../src/error/error.ts","../../src/event/event.directive.ts","../../src/core/structure.ts","../../src/core/component.ts","../../src/core/context.ts","../../src/for/for.item.ts","../../src/for/for.structure.ts","../../src/href/href-target.directive.ts","../../src/href/href.directive.ts","../../src/if/if.structure.ts","../../src/inner-html/inner-html.directive.ts","../../src/json/json.component.ts","../../src/core/pipe.ts","../../src/platform/platform.ts","../../src/platform/common/serializer/serializer.ts","../../src/json/json.pipe.ts","../../src/module/module.ts","../../src/src/src.directive.ts","../../src/style/style.directive.ts","../../src/core.module.ts","../../src/platform/common/window/window.ts","../../src/platform/browser.ts","../../web/client/js/test.performance.ts"],"names":["rxjs","operators","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","Constructor","protoProps","staticProps","prototype","_inheritsLoose","subClass","superClass","create","constructor","__proto__","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","_setPrototypeOf","p","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","toString","call","e","_construct","Parent","args","Class","a","push","apply","instance","Function","bind","arguments","_wrapNativeSuper","_cache","Map","undefined","fn","indexOf","TypeError","has","get","set","Wrapper","this","value","CONTEXT_MAP","NODE_MAP","EXPRESSION_MAP","Factory","_proto","onInit","onChanges","changes","onView","onDestroy","pushChanges","childInstances","getContext","len","onParentDidChange","module","resolveInputsOutputs","mapExpression","expression","unsubscribe$_","Subject","Directive","_Factory","ClassDirective","_this","_Directive","class","keys","_this2","node","Array","slice","classList","forEach","object","split","concat","setAttribute","join","selector","inputs","ModuleError","_Error","Error","ExpressionError","_Error2","error","params","message","name","template","outerHTML","ErrorInterceptorHandler","next","interceptor","handle","intercept","DefaultErrorHandler","of","ErrorInterceptors","nextError$","ReplaySubject","errors$","pipe","switchMap","reduceRight","tap","console","EventDirective","event","_getContext","parentInstance","replace","event$","fromEvent","shareReplay","getAttribute","outputFunction","makeFunction","takeUntil","unsubscribe$","subscribe","resolve","Structure","Component","instances","parse","Context","_Component","ForItem","$key","$value","index","count","_Context","even","ForStructure","_Structure","tokens","getForExpressionTokens","nodeRef","document","createComment","parentNode","replaceChild","removeAttribute","context","data","for","isArray","items","total","previous","Math","max","clonedNode","cloneNode","insertBefore","makeInstance","compile","removeChild","remove","iterable","trim","expressions","map","x","filter","forExpressions","keyValueMatches","match","indexExpressions","HrefTargetDirective","target_","HrefDirective","href","href_","IfStructure","element","_getContext2","Boolean","if","InnerHtmlDirective","innerHTML","innerHTML_","JsonComponent","active","onToggle","Pipe","transform","ORDER","Platform","bootstrap","moduleFactory","meta","resolveMeta","imports","querySelector","resolveImportedMeta","nodeInnerHTML","pipes","resolvePipes","factories","resolveFactories","sortFactories","unshift","selectors","unwrapSelectors","assign","declarations","exports","exported","importedPipes","importMeta","pipeFactory","_Array$prototype$conc","_this3","importedFactories","factoryList","sort","b","reduce","c","hosts","getExpressions","matchers","c1","a2","u3","v4","a5","e6","contains","hasAttribute","nodeName","toLowerCase","_this4","factory","excludes","matchSelector","unmatchSelector","includes","PLATFORM_BROWSER","window","isPlatformBrowser","navigator","userAgent","process","versions","Serializer","encode","encoders","encodeJson","decode","decoders","decodeJson","encodeBase64","decodeBase64","circularRef","space","decoded","pool","JSON","stringify","encoded","btoa","Buffer","from","atob","JsonPipe","_Pipe","Module","nodeType","matches","childNodes","foundStructure","selectorResult","nextParentInstance","inject","makeContext","makeHosts","makeInputs","outputs","makeOutputs","cachedExpressionFunction","parseExpression","text","expressionFunction","getInputAttributeExpression","attribute","substring","payload","child","getParsableContextByElement","parseTextNode","keepInstance","keepContext","traverseDown","deleteContext","destroy","complete","nextError","expressionError","getHost","makeOutput","outputExpression","output$","output","nodeExpressions","parseTextNodeExpression","wholeText","replacedText","nodeValue","textNode","createTextNode","pushFragment","to","fragment","regex","lastIndex","exec","find","nodeContexts","parseGroup","parseOptionalChaining","rx1","test","m","parsePipes","rx","parsePipeParams","parseThis","g1","g2","g3","g4","keepContexts","parentContext","splice","delete","traverseUp","callback","result","j","t","traversePrevious","previousSibling","traverseNext","nextSibling","contexts","current","SrcDirective","src","src_","StyleDirective","style","previousStyle","propertyName","shift","removeProperty","splitted","setProperty","CoreModule","_Module","WINDOW","self","global","Browser","_Platform","rxcomp_hydrate_","_meta$node$parentNode","RootComponent","paramCount","URLSearchParams","location","search","parseInt","setIndex","runTask","setTimeout","floor","random","count_","fill","ItemComponent","_Component2","innerText","item","AppModule"],"mappings":"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","file":"docs\\js\\test.performance.min.js","sourcesContent":[null,"import { Subject } from 'rxjs';\nimport { ExpressionFunction, IContext, IElement, IFactoryMeta } from './types';\n\nexport const CONTEXTS: { [key: number]: IContext } = {};\nexport const NODES: { [key: number]: IContext[] } = {};\n\nexport const CONTEXT_MAP:Map<Factory, IContext> = new Map<Factory, IContext>();\nexport const NODE_MAP:Map<IElement, IContext[]> = new Map<IElement, IContext[]>();\nexport const EXPRESSION_MAP:Map<string, ExpressionFunction> = new Map<string, ExpressionFunction>();\n\n// console.log(CONTEXT_MAP, NODE_MAP, EXPRESSION_MAP);\n\nexport default class Factory {\n\tstatic meta: IFactoryMeta;\n\tunsubscribe$_: Subject<void> | undefined;\n\tget unsubscribe$(): Subject<void> {\n\t\tif (!this.unsubscribe$_) {\n\t\t\tthis.unsubscribe$_ = new Subject();\n\t\t}\n\t\treturn this.unsubscribe$_;\n\t}\n\t// unsubscribe$: Subject<void> = new Subject();\n\t// changes$: Subject<Factory> = new Subject();\n\t// changes$: ReplaySubject<Factory> = new ReplaySubject(1);\n\tonInit(): void { }\n\tonChanges(changes: Factory | Window): void { }\n\tonView(): void { }\n\tonDestroy(): void { }\n\tpushChanges(): void {\n\t\t// const { module } = getContext(this);\n\t\t// if (module.instances) {\n\t\tconst  { childInstances } = getContext(this);\n\t\tfor (let i:number = 0, len:number = childInstances.length; i < len; i++) {\n\t\t\tchildInstances[i].onParentDidChange(this);\n\t\t}\n\t\t// \tthis.changes$.next(this);\n\t\t\tthis.onView();\n\t\t// }\n\t}\n\tonParentDidChange(changes: Factory | Window): void {\n\t\tconst { module } = getContext(this);\n\t\t// console.log('Component.onParentDidChange', changes);\n\t\tmodule.resolveInputsOutputs(this, changes);\n\t\tthis.onChanges(changes);\n\t\tthis.pushChanges();\n\t}\n\t[key: string]: any; // extensible object\n\tconstructor(...args: any[]) {\n\t\t/*\n\t\t// !!! PROXY\n\t\tconst store: { [key: string]: any } = {};\n\t\tconst handler: ProxyHandler<Factory> = {\n\t\t\tget: function (target: Factory, prop: string, receiver: any) {\n\t\t\t\treturn target[prop];\n\t\t\t},\n\t\t\tset: function (target: Factory, prop: string | number | Symbol, value: any, receiver: any) {\n\t\t\t\tstore[prop as string] = value;\n\t\t\t\tconsole.log('Factory updating store', prop, value, store);\n\t\t\t\ttarget[prop as string] = value;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\tconst proxy = new Proxy(this, handler);\n\t\tconsole.log('proxy', proxy);\n\t\t*/\n\t}\n    static mapExpression(key:string, expression:string) {\n        return expression;\n    }\n}\nexport function getContext(instance: Factory): IContext {\n\treturn CONTEXT_MAP.get(instance) as IContext;\n}\n","import Factory from './factory';\n\nexport default class Directive extends Factory { }\n","import Directive from '../core/directive';\nimport { getContext } from '../core/factory';\nimport { IFactoryMeta } from '../core/types';\n\nexport default class ClassDirective extends Directive {\n\tclass: { [key: string]: string } | string | null = '';\n\tkeys: string[] = [];\n\tonInit() {\n\t\tconst { node } = getContext(this);\n\t\tArray.prototype.slice.call(node.classList).forEach((value: string) => {\n\t\t\tthis.keys.push(value);\n\t\t});\n\t\t// console.log('ClassDirective.onInit');\n\t}\n\tonChanges() {\n\t\tconst { node } = getContext(this);\n\t\tlet keys: string[] = [];\n\t\tconst object = this.class;\n\t\tif (typeof object === 'object') {\n\t\t\tfor (let key in object) {\n\t\t\t\tif (object[key]) {\n\t\t\t\t\tkeys.push(key);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (typeof object === 'string') {\n\t\t\tkeys = object.split(/\\s+/);\n\t\t}\n\t\tkeys = keys.concat(this.keys);\n\t\t// console.log(keys);\n\t\tnode.setAttribute('class', keys.join(' '));\n\t\t// console.log('ClassDirective.onChanges', keys);\n\t}\n\tstatic meta: IFactoryMeta = {\n\t\tselector: `[[class]]`,\n\t\tinputs: ['class']\n\t};\n}\n","import { Observable, of, ReplaySubject } from \"rxjs\";\nimport { switchMap, tap } from \"rxjs/operators\";\nimport Factory, { getContext } from \"../core/factory\";\nimport Module from \"../module/module\";\n\nexport class ModuleError extends Error { }\n\nexport class ExpressionError extends Error {\n\tmodule: Module;\n\tinstance: Factory;\n\texpression: string;\n\tparams: any[];\n\ttemplate: string;\n\tconstructor(error: Error, module: Module, instance: Factory, expression: string, params: any[]) {\n\t\tconst message: string = `ExpressionError in ${instance.constructor.name} \"${expression}\"\n\t\t${error.message}`;\n\t\tsuper(message);\n\t\tthis.name = error.name;\n\t\t// this.stack = error.stack;\n\t\tthis.module = module;\n\t\tthis.instance = instance;\n\t\tthis.expression = expression;\n\t\tthis.params = params;\n\t\tconst { node } = getContext(instance);\n\t\tthis.template = node.outerHTML;\n\t}\n}\nexport interface IErrorHandler {\n\thandle(error: Error): Observable<Error | void>\n}\nexport interface IErrorInterceptor {\n\tintercept(error: Error | void, next: IErrorHandler): Observable<Error | void>\n}\nexport class ErrorInterceptorHandler implements IErrorHandler {\n\tconstructor(\n\t\tprivate next: IErrorHandler,\n\t\tprivate interceptor: IErrorInterceptor,\n\t) { }\n\thandle(error: Error | void): Observable<Error | void> {\n\t\treturn this.interceptor.intercept(error, this.next);\n\t}\n}\nexport class DefaultErrorHandler implements IErrorHandler {\n\thandle(error: Error | void): Observable<Error | void> {\n\t\treturn of(error);\n\t}\n}\nexport const ErrorInterceptors: IErrorInterceptor[] = [];\nexport const nextError$: ReplaySubject<Error> = new ReplaySubject<Error>(1);\nexport const errors$: Observable<Error | void> = nextError$.pipe(\n\tswitchMap((error: Error) => {\n\t\tconst chain: IErrorHandler = ErrorInterceptors.reduceRight((next: IErrorHandler, interceptor: IErrorInterceptor) => {\n\t\t\treturn new ErrorInterceptorHandler(next, interceptor);\n\t\t}, new DefaultErrorHandler());\n\t\treturn chain.handle(error);\n\t}),\n\ttap((error: Error | void) => {\n\t\tif (error) {\n\t\t\tconsole.error(error);\n\t\t}\n\t}),\n);\n","import { fromEvent, Observable } from 'rxjs';\nimport { shareReplay, takeUntil } from 'rxjs/operators';\nimport Directive from '../core/directive';\nimport { getContext } from '../core/factory';\nimport { IFactoryMeta } from '../core/types';\n\nconst EVENTS = ['mousedown', 'mouseup', 'mousemove', 'click', 'dblclick', 'mouseover', 'mouseout', 'mouseenter', 'mouseleave', 'contextmenu', 'touchstart', 'touchmove', 'touchend', 'keydown', 'keyup', 'input', 'change', 'loaded'];\n\nexport default class EventDirective extends Directive {\n\tevent: string = '';\n\tonInit() {\n\t\tconst { module, node, parentInstance, selector } = getContext(this);\n\t\tconst event = this.event = selector.replace(/\\[|\\]|\\(|\\)/g, '');\n\t\tconst event$: Observable<Event> = fromEvent<Event>(node, event).pipe(shareReplay(1));\n\t\tconst expression = node.getAttribute(`(${event})`);\n\t\tif (expression) {\n\t\t\tconst outputFunction = module.makeFunction(expression, ['$event']);\n\t\t\tevent$.pipe(\n\t\t\t\ttakeUntil(this.unsubscribe$)\n\t\t\t).subscribe(event => {\n\t\t\t\tmodule.resolve(outputFunction, parentInstance, event);\n\t\t\t});\n\t\t} else {\n\t\t\tparentInstance[`${event}$`] = event$;\n\t\t}\n\t\t// console.log('EventDirective.onInit', 'selector', selector, 'event', event);\n\t}\n\tstatic meta: IFactoryMeta = {\n\t\tselector: `[(${EVENTS.join(')],[(')})]`,\n\t};\n}\n","import Factory from './factory';\n\nexport default class Structure extends Factory { }\n","\nimport Factory, { getContext } from './factory';\n\nexport default class Component extends Factory {\n\tpushChanges(): void {\n\t\tconst { module, node, childInstances } = getContext(this);\n\t\tif (module.instances) {\n\t\t\tfor (let i:number = 0, len:number = childInstances.length; i < len; i++) {\n\t\t\t\tchildInstances[i].onParentDidChange(this);\n\t\t\t}\n\t\t\t// this.changes$.next(this);\n\t\t\tmodule.parse(node, this);\n\t\t\tthis.onView();\n\t\t}\n\t}\n}\n","// import { BehaviorSubject, Subject } from 'rxjs';\nimport Component from './component';\nimport Factory from './factory';\n\n// const RESERVED_PROPERTIES = ['constructor', 'onInit', 'onChanges', 'onDestroy', 'pushChanges', 'changes$', 'unsubscribe$'];\n\nexport default class Context extends Component {\n\tparentInstance: Factory;\n\t// constructor(parentInstance: Factory, descriptors: { [key: string]: PropertyDescriptor } = {}) {\n\tconstructor(parentInstance: Factory) {\n\t\tsuper();\n\t\tthis.parentInstance = parentInstance;\n\t\t/*\n\t\tdescriptors = Context.mergeDescriptors(parentInstance, parentInstance, descriptors);\n\t\tdescriptors = Context.mergeDescriptors(Object.getPrototypeOf(parentInstance), parentInstance, descriptors);\n\t\tObject.defineProperties(this, descriptors);\n\t\t*/\n\t}\n\t/*\n\tpushChanges(): void {\n\t\tconst context = getContext(this);\n\t\tif (!context.keys) {\n\t\t\tcontext.keys = [];\n\t\t\t// context.keys = Object.keys(context.parentInstance).filter(key => RESERVED_PROPERTIES.indexOf(key) === -1);\n\t\t\tfor (let i:number = 0, keys = Object.keys(context.parentInstance), len = keys.length; i < len; i++) {\n\t\t\t\tconst key = keys[i];\n\t\t\t\tif (RESERVED_PROPERTIES.indexOf(key) === -1) {\n\t\t\t\t\tcontext.keys.push(key);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// console.log(context.keys.join(','));\n\t\t}\n\t\tif (context.module.instances) {\n\t\t\tcontext.keys.forEach(key => {\n\t\t\t\t// console.log('Context', key, context.parentInstance);\n\t\t\t\tthis[key] = context.parentInstance[key];\n\t\t\t});\n\t\t}\n\t\tsuper.pushChanges();\n\t}\n\t*/\n\tonParentDidChange(changes: Factory | Window): void {\n\t\tthis.onChanges(changes);\n\t\tthis.pushChanges();\n\t}\n\t/*\n\tstatic mergeDescriptors(source: Object, instance: Factory, descriptors: { [key: string]: PropertyDescriptor } = {}): { [key: string]: PropertyDescriptor } {\n\t\tconst properties: string[] = Object.getOwnPropertyNames(source);\n\t\twhile (properties.length) {\n\t\t\tconst key: string = properties.shift() as string;\n\t\t\tif (RESERVED_PROPERTIES.indexOf(key) === -1 && !descriptors.hasOwnProperty(key)) {\n\t\t\t\tconst descriptor: PropertyDescriptor = Object.getOwnPropertyDescriptor(source, key) as PropertyDescriptor;\n\t\t\t\tif (typeof descriptor.value == 'function') {\n\t\t\t\t\tdescriptor.value = (...args: any[]) => {\n\t\t\t\t\t\treturn instance[key].apply(instance, args);\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tdescriptors[key] = descriptor;\n\t\t\t}\n\t\t}\n\t\treturn descriptors;\n\t}\n\t*/\n}\n","import Context from '../core/context';\nimport Factory from '../core/factory';\n\nexport default class ForItem extends Context {\n\tindex: number;\n\tcount: number;\n\t[key: string]: any;\n\t// !!! todo: payload options { key, $key, value, $value, index, count }\n\tconstructor(key: string, $key: number | string, value: string, $value: any, index: number, count: number, parentInstance: Factory) {\n\t\tsuper(parentInstance);\n\t\tthis[key] = $key;\n\t\tthis[value] = $value;\n\t\tthis.index = index;\n\t\tthis.count = count;\n\t}\n\tget first(): boolean { return this.index === 0; }\n\tget last(): boolean { return this.index === this.count - 1; }\n\tget even(): boolean { return this.index % 2 === 0; }\n\tget odd(): boolean { return !this.even; }\n}\n","import Factory, { getContext } from '../core/factory';\nimport Structure from '../core/structure';\nimport { IComment, IContext, IElement, IFactoryMeta, IForExpressionTokens } from '../core/types';\nimport Module from '../module/module';\nimport ForItem from './for.item';\n\nexport default class ForStructure extends Structure {\n\tinstances: Factory[] = [];\n\tnodeRef!: IComment;\n\ttokens!: IForExpressionTokens;\n\tonInit() {\n\t\tconst { node } = getContext(this);\n        const expression = node.getAttribute('*for');\n        this.tokens = ForStructure.getForExpressionTokens(expression);\n\t\tconst nodeRef: IComment = this.nodeRef = document.createComment(`*for`);\n\t\tnode.parentNode!.replaceChild(nodeRef, node);\n\t\tnode.removeAttribute('*for');\n\t}\n\tonChanges() {\n\t\tconst context: IContext = getContext(this);\n\t\tconst module: Module = context.module;\n\t\tconst node: IElement = context.node;\n\t\tconst selector: string = context.selector;\n\t\tconst parentInstance: Factory | Window = context.parentInstance;\n\t\tconst nodeRef = this.nodeRef;\n\t\tconst tokens: IForExpressionTokens = this.tokens!;\n\t\tlet data = this.for || [];\n\t\tconst isArray = Array.isArray(data);\n\t\tconst items: any[] = isArray ? data : Object.keys(data);\n\t\tconst total: number = items.length;\n\t\tconst instances = this.instances;\n\t\tconst previous: number = instances.length;\n\t\tfor (let i: number = 0, len:number = Math.max(previous, total); i < len; i++) {\n\t\t\tif (i < total) {\n\t\t\t\tconst key: number | string = isArray ? i : items[i];\n\t\t\t\tconst value: any = isArray ? items[key as number] : data[key];\n\t\t\t\tif (i < previous) {\n\t\t\t\t\t// update\n\t\t\t\t\tconst instance: Factory = instances[i];\n\t\t\t\t\tinstance[tokens.key] = key;\n\t\t\t\t\tinstance[tokens.value] = value;\n\t\t\t\t} else {\n\t\t\t\t\t// create\n\t\t\t\t\tconst clonedNode: IElement = node.cloneNode(true) as IElement;\n\t\t\t\t\tnodeRef.parentNode!.insertBefore(clonedNode, nodeRef);\n\t\t\t\t\tconst args = [tokens.key, key, tokens.value, value, i, total, parentInstance];\n\t\t\t\t\tconst instance = module.makeInstance(clonedNode, ForItem, selector, parentInstance, args);\n\t\t\t\t\tif (instance) {\n\t\t\t\t\t\tmodule.compile(clonedNode, instance);\n\t\t\t\t\t\tinstances.push(instance);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// remove\n\t\t\t\tconst instance: Factory = instances[i];\n\t\t\t\tconst { node } = getContext(instance);\n\t\t\t\tnode.parentNode!.removeChild(node);\n\t\t\t\tmodule.remove(node);\n\t\t\t}\n\t\t}\n\t\tinstances.length = total;\n\t}\n    static mapExpression(key:string, expression:string) {\n        const tokens = this.getForExpressionTokens(expression);\n        return tokens.iterable;\n    }\n\tstatic getForExpressionTokens(expression: string | null = null): IForExpressionTokens {\n\t\tif (expression == null) {\n\t\t\tthrow new Error('invalid for');\n\t\t}\n\t\tif (expression.trim().indexOf('let ') === -1 || expression.trim().indexOf(' of ') === -1) {\n\t\t\tthrow new Error('invalid for');\n\t\t}\n\t\tconst expressions: string[] = expression.split(';').map(x => x.trim()).filter(x => x !== '');\n\t\tconst forExpressions: string[] = expressions[0].split(' of ').map(x => x.trim());\n\t\tlet value: string = forExpressions[0].replace(/\\s*let\\s*/, '');\n\t\tconst iterable: string = forExpressions[1];\n\t\tlet key: string = 'index';\n\t\tconst keyValueMatches: RegExpMatchArray | null = value.match(/\\[(.+)\\s*,\\s*(.+)\\]/);\n\t\tif (keyValueMatches) {\n\t\t\tkey = keyValueMatches[1];\n\t\t\tvalue = keyValueMatches[2];\n\t\t}\n\t\tif (expressions.length > 1) {\n\t\t\tconst indexExpressions: string[] = expressions[1].split(/\\s*let\\s*|\\s*=\\s*index/).map(x => x.trim());\n\t\t\tif (indexExpressions.length === 3) {\n\t\t\t\tkey = indexExpressions[1];\n\t\t\t}\n\t\t}\n\t\treturn { key, value, iterable };\n\t}\n\tstatic meta: IFactoryMeta = {\n\t\tselector: '[*for]',\n\t\tinputs: ['for'],\n\t};\n}\n","import Directive from '../core/directive';\nimport { getContext } from '../core/factory';\nimport { IFactoryMeta } from '../core/types';\n\nexport default class HrefTargetDirective extends Directive {\n\tset target(target: string) {\n\t\tif (this.target_ !== target) {\n\t\t\tthis.target_ = target;\n\t\t\tconst { node } = getContext(this);\n\t\t\ttarget ? node.setAttribute('target', target) : node.removeAttribute('target');\n\t\t}\n\t}\n\tget target(): string {\n\t\treturn this.target_;\n\t}\n\tstatic meta: IFactoryMeta = {\n\t\tselector: '[[target]]',\n\t\tinputs: ['target'],\n\t};\n}\n","import Directive from '../core/directive';\nimport { getContext } from '../core/factory';\nimport { IFactoryMeta } from '../core/types';\n\nexport default class HrefDirective extends Directive {\n\tset href(href: string) {\n\t\tif (this.href_ !== href) {\n\t\t\tthis.href_ = href;\n\t\t\tconst { node } = getContext(this);\n\t\t\thref ? node.setAttribute('href', href) : node.removeAttribute('href');\n\t\t}\n\t}\n\tget href(): string {\n\t\treturn this.href_;\n\t}\n\tstatic meta: IFactoryMeta = {\n\t\tselector: '[[href]]',\n\t\tinputs: ['href'],\n\t};\n}\n\n","import { getContext } from '../core/factory';\nimport Structure from '../core/structure';\nimport { IComment, IElement, IFactoryMeta } from '../core/types';\n\nexport default class IfStructure extends Structure {\n\tnodeRef?: IComment;\n\tclonedNode?: IElement;\n\telement?: IElement;\n\tonInit() {\n\t\tconst { node } = getContext(this);\n\t\tconst nodeRef: IComment = this.nodeRef = document.createComment(`*if`);\n\t\tnode.parentNode!.replaceChild(nodeRef, node);\n\t\tconst clonedNode = node.cloneNode(true) as IElement;\n\t\tclonedNode.removeAttribute('*if');\n\t\tthis.clonedNode = clonedNode;\n\t\tthis.element = clonedNode.cloneNode(true) as IElement;\n\t}\n\tonChanges() {\n\t\tconst { module, parentInstance } = getContext(this);\n\t\tconst element: IElement = this.element!;\n\t\t// console.log('IfStructure.onChanges.if', this.if);\n\t\tif (Boolean(this.if)) { // !!! keep == loose equality\n\t\t\tif (!element.parentNode) {\n\t\t\t\tconst nodeRef = this.nodeRef!;\n\t\t\t\tnodeRef.parentNode!.insertBefore(element, nodeRef);\n\t\t\t\tmodule.compile(element, parentInstance);\n\t\t\t\t// console.log('IfStructure.onChanges.add', element);\n\t\t\t}\n\t\t} else {\n\t\t\tif (element.parentNode) {\n\t\t\t\tmodule.remove(element, this);\n\t\t\t\telement.parentNode.removeChild(element);\n\t\t\t\tthis.element = this.clonedNode!.cloneNode(true) as IElement;\n\t\t\t\t// console.log('IfStructure.onChanges.remove', element);\n\t\t\t}\n\t\t}\n\t}\n\tstatic meta: IFactoryMeta = {\n\t\tselector: '[*if]',\n\t\tinputs: ['if'],\n\t};\n}\n","import Directive from '../core/directive';\nimport { getContext } from '../core/factory';\nimport { IFactoryMeta } from '../core/types';\n\nexport default class InnerHtmlDirective extends Directive {\n\tset innerHTML(innerHTML: string) {\n\t\tif (this.innerHTML_ !== innerHTML) {\n\t\t\tthis.innerHTML_ = innerHTML;\n\t\t\tconst { node } = getContext(this);\n\t\t\tnode.innerHTML = innerHTML == undefined ? '' : innerHTML; // !!! keep == loose equality\n\t\t}\n\t}\n\tget innerHTML(): string {\n\t\treturn this.innerHTML_;\n\t}\n\tstatic meta: IFactoryMeta = {\n\t\tselector: `[innerHTML]`,\n\t\tinputs: ['innerHTML'],\n\t};\n}\n","import Component from '../core/component';\nimport { IFactoryMeta } from '../core/types';\n\nexport default class JsonComponent extends Component {\n\tactive: boolean = false;\n\tonToggle() {\n\t\tthis.active = !this.active;\n\t\tthis.pushChanges();\n\t}\n\tstatic meta: IFactoryMeta = {\n\t\tselector: 'json-component',\n\t\tinputs: ['item'],\n\t\ttemplate: /* html */`\n\t\t<div class=\"rxc-block\">\n\t\t\t<div class=\"rxc-head\">\n\t\t\t\t<span class=\"rxc-head__title\" (click)=\"onToggle()\">\n\t\t\t\t\t<span *if=\"!active\">+ json </span>\n\t\t\t\t\t<span *if=\"active\">- json </span>\n\t\t\t\t\t<span [innerHTML]=\"item\"></span>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t<ul class=\"rxc-list\" *if=\"active\">\n\t\t\t\t<li class=\"rxc-list__item\">\n\t\t\t\t\t<span class=\"rxc-list__value\" [innerHTML]=\"item | json\"></span>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</div>`,\n\t};\n}\n","import { IPipeMeta } from \"./types\";\n\nexport default class Pipe {\n\tstatic transform(value: any): any {\n\t\treturn value;\n\t}\n\tstatic meta: IPipeMeta;\n}\n","import Component from '../core/component';\nimport Directive from '../core/directive';\nimport Factory from '../core/factory';\nimport Pipe from '../core/pipe';\nimport Structure from '../core/structure';\nimport { FactoryList, IElement, IModuleParsedImportedMeta, IModuleParsedMeta, ISelectorResult, MatchFunction, PipeList, PipeMap, SelectorFunction } from '../core/types';\nimport { ModuleError } from '../error/error';\nimport Module from '../module/module';\n\nconst ORDER: FactoryList = [Structure, Component, Directive];\n\nexport default class Platform {\n\t/**\n\t * @param moduleFactory\n\t * @description This method returns an uncompiled module\n\t */\n\tstatic bootstrap(moduleFactory?: typeof Module): Module {\n\t\tif (!moduleFactory) {\n\t\t\tthrow new ModuleError('missing moduleFactory');\n\t\t}\n\t\tif (!moduleFactory.meta) {\n\t\t\tthrow new ModuleError('missing moduleFactory meta');\n\t\t}\n\t\tif (!moduleFactory.meta.bootstrap) {\n\t\t\tthrow new ModuleError('missing bootstrap');\n\t\t}\n\t\tif (!moduleFactory.meta.bootstrap.meta) {\n\t\t\tthrow new ModuleError('missing bootstrap meta');\n\t\t}\n\t\tif (!moduleFactory.meta.bootstrap.meta.selector) {\n\t\t\tthrow new ModuleError('missing bootstrap meta selector');\n\t\t}\n\t\tconst meta: IModuleParsedMeta = this.resolveMeta(moduleFactory!);\n\t\tconst module: Module = new moduleFactory();\n\t\tmodule.meta = meta;\n\t\tmeta.imports.forEach((moduleFactory: typeof Module) => {\n\t\t\tmoduleFactory.prototype.constructor.call(module);\n\t\t});\n\t\treturn module;\n\t}\n\tprotected static querySelector(selector: string): IElement | null {\n\t\treturn document.querySelector(selector);\n\t}\n\tprotected static resolveMeta(moduleFactory: typeof Module): IModuleParsedMeta {\n\t\tconst meta: IModuleParsedImportedMeta = this.resolveImportedMeta(moduleFactory);\n\t\tconst bootstrap: typeof Factory = moduleFactory.meta.bootstrap!;\n\t\tconst node = this.querySelector(bootstrap.meta.selector!);\n\t\tif (!node) {\n\t\t\tthrow new ModuleError(`missing node ${bootstrap.meta.selector}`);\n\t\t}\n\t\tconst nodeInnerHTML = node.innerHTML;\n\t\tconst pipes = this.resolvePipes(meta);\n\t\tconst factories = this.resolveFactories(meta);\n\t\tthis.sortFactories(factories);\n\t\tfactories.unshift(bootstrap);\n\t\tconst selectors = this.unwrapSelectors(factories);\n\t\treturn { factories, pipes, selectors, bootstrap, node, nodeInnerHTML, imports: moduleFactory.meta.imports || [] };\n\t}\n\tprotected static resolveImportedMeta(moduleFactory: typeof Module): IModuleParsedImportedMeta {\n\t\tconst meta: IModuleParsedImportedMeta = Object.assign({\n\t\t\timports: [],\n\t\t\tdeclarations: [],\n\t\t\tpipes: [],\n\t\t\texports: []\n\t\t}, moduleFactory.meta);\n\t\tmeta.imports = (moduleFactory.meta.imports || []).map(moduleFactory => this.resolveImportedMeta(moduleFactory));\n\t\treturn meta;\n\t}\n\tprotected static resolvePipes(meta: IModuleParsedImportedMeta, exported?: boolean): PipeMap {\n\t\tconst importedPipes: PipeMap[] = meta.imports.map((importMeta: IModuleParsedImportedMeta) => this.resolvePipes(importMeta, true));\n\t\tconst pipes: PipeMap = {};\n\t\tconst pipeList: PipeList = (exported ? meta.exports : meta.declarations).filter((x): x is typeof Pipe => x.prototype instanceof Pipe);\n\t\tpipeList.forEach(pipeFactory => pipes[pipeFactory.meta.name] = pipeFactory);\n\t\treturn Object.assign({}, ...importedPipes, pipes);\n\t}\n\tprotected static resolveFactories(meta: IModuleParsedImportedMeta, exported?: boolean): FactoryList {\n\t\tconst importedFactories: FactoryList[] = meta.imports.map((importMeta: any) => this.resolveFactories(importMeta, true));\n\t\tconst factoryList: FactoryList = (exported ? meta.exports : meta.declarations).filter((x): x is typeof Factory => x.prototype instanceof Factory);\n\t\treturn Array.prototype.concat.call(factoryList, ...importedFactories);\n\t}\n\tprotected static sortFactories(factories: FactoryList): void {\n\t\tfactories.sort((a, b) => {\n\t\t\tconst ai = ORDER.reduce((p, c, i) => a.prototype instanceof c ? i : p, -1);\n\t\t\tconst bi = ORDER.reduce((p, c, i) => b.prototype instanceof c ? i : p, -1);\n\t\t\t// return ai - bi;\n\t\t\tconst o = ai - bi;\n\t\t\tif (o === 0) {\n\t\t\t\treturn (a.meta.hosts ? 1 : 0) - (b.meta.hosts ? 1 : 0);\n\t\t\t}\n\t\t\treturn o;\n\t\t});\n\t}\n\tprotected static getExpressions(selector: string): MatchFunction[] {\n\t\tlet matchers: ((node: HTMLElement) => boolean)[] = [];\n\t\tselector.replace(/\\.([\\w\\-\\_]+)|\\[(.+?\\]*)(\\=)(.*?)\\]|\\[(.+?\\]*)\\]|([\\w\\-\\_]+)/g, function (value: string, c1, a2, u3, v4, a5, e6) {\n\t\t\tif (c1) {\n\t\t\t\t// className\n\t\t\t\tmatchers.push(function (node) {\n\t\t\t\t\treturn node.classList.contains(c1);\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (a2) {\n\t\t\t\tmatchers.push(function (node) {\n\t\t\t\t\treturn (node.hasAttribute(a2) && node.getAttribute(a2) === v4) ||\n\t\t\t\t\t\t(node.hasAttribute(`[${a2}]`) && node.getAttribute(`[${a2}]`) === v4);\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (a5) {\n\t\t\t\t// attribute\n\t\t\t\tmatchers.push(function (node) {\n\t\t\t\t\treturn node.hasAttribute(a5) || node.hasAttribute(`[${a5}]`);\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (e6) {\n\t\t\t\t// nodeName\n\t\t\t\tmatchers.push(function (node) {\n\t\t\t\t\treturn node.nodeName.toLowerCase() === e6.toLowerCase();\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn '';\n\t\t});\n\t\treturn matchers;\n\n\t}\n\tprotected static unwrapSelectors(factories: FactoryList): SelectorFunction[] {\n\t\tconst selectors: SelectorFunction[] = [];\n\t\tfactories.forEach((factory: typeof Factory) => {\n\t\t\tif (factory.meta && factory.meta.selector) {\n\t\t\t\tfactory.meta.selector.split(',').forEach((selector: string) => {\n\t\t\t\t\tselector = selector.trim();\n\t\t\t\t\tlet excludes: MatchFunction[] = [];\n\t\t\t\t\tconst matchSelector = selector.replace(/\\:not\\((.+?)\\)/g, (value, unmatchSelector) => {\n\t\t\t\t\t\texcludes = this.getExpressions(unmatchSelector);\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t});\n\t\t\t\t\tconst includes: MatchFunction[] = this.getExpressions(matchSelector);\n\t\t\t\t\tselectors.push(function(node) {\n\t\t\t\t\t\tconst included = includes.reduce(function(p, match) {\n\t\t\t\t\t\t\treturn p && match(node);\n\t\t\t\t\t\t}, true);\n\t\t\t\t\t\tif (included) {\n\t\t\t\t\t\t\tconst excluded = excludes.length && excludes.reduce(function(p, match) {\n\t\t\t\t\t\t\t\treturn p || match(node);\n\t\t\t\t\t\t\t}, false);\n\t\t\t\t\t\t\tif (!excluded) {\n\t\t\t\t\t\t\t\treturn { node, factory, selector } as ISelectorResult;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\treturn selectors;\n\t}\n}\n/* global window self */\nexport const PLATFORM_BROWSER = typeof window !== 'undefined' && typeof window.document !== 'undefined';\n/* eslint-disable no-undef */\nexport const PLATFORM_JS_DOM = (typeof window !== 'undefined' && window.name === 'nodejs') || (typeof navigator !== 'undefined' && navigator.userAgent.indexOf('Node.js') !== -1) || (typeof navigator !== 'undefined' && navigator.userAgent.indexOf('jsdom') !== -1);\n/* eslint-enable no-undef */\nexport const PLATFORM_NODE = typeof process !== 'undefined' && process.versions != null && process.versions.node != null;\n/* eslint-disable no-restricted-globals */\nexport const PLATFORM_WEB_WORKER = typeof self === 'object' && self.constructor && self.constructor.name === 'DedicatedWorkerGlobalScope';\nexport const isPlatformServer = PLATFORM_NODE;\nexport const isPlatformBrowser = !PLATFORM_NODE && PLATFORM_BROWSER;\nexport const isPlatformWorker = PLATFORM_WEB_WORKER;\n","import { isPlatformBrowser } from \"../../platform\";\n\n/**\n * @example Serializer.encode(value, [encodeJson, encodeUriComponent, encodeBase64]);\n * @example Serializer.decode(value, [decodeBase64, decodeUriComponent, decodeJson]);\n */\nexport default class Serializer {\n\tstatic encode<T>(value: any, encoders: ((from: any) => any)[]): T;\n\tstatic encode(value: any, encoders: ((from: any) => any)[] = [encodeJson]): any {\n\t\treturn encoders.reduce((p, c) => c(p), value);\n\t}\n\n\tstatic decode<T>(value: any, decoders: ((from: any) => any)[]): T;\n\tstatic decode(value: any, decoders: ((from: any) => any)[] = [decodeJson]): any {\n\t\treturn decoders.reduce((p, c) => c(p), value);\n\t}\n\n\tstatic encodeJson<T>(value: any): T;\n\tstatic encodeJson(value: any): any {\n\t\treturn this.encode(value, [encodeJson]);\n\t}\n\n\tstatic decodeJson<T>(value: any): T;\n\tstatic decodeJson(value: any): any {\n\t\treturn this.decode(value, [decodeJson]);\n\t}\n\n\tstatic encodeBase64<T>(value: any): T;\n\tstatic encodeBase64(value: any): any {\n\t\treturn this.encode(value, [encodeJson, encodeBase64]);\n\t}\n\n\tstatic decodeBase64<T>(value: any): T;\n\tstatic decodeBase64(value: any): any {\n\t\treturn this.decode(value, [decodeBase64, decodeJson]);\n\t}\n}\nexport function encodeJson(value: any, circularRef?: any, space?: string | number): string {\n\tlet decoded: any;\n\ttry {\n\t\t// const pool: Map<any, boolean> = new Map();\n\t\tconst pool: any[] = [];\n\t\tconst json: string = JSON.stringify(value, function (key, value) {\n\t\t\tif (typeof value === 'object' && value != null) {\n\t\t\t\t// if (pool.has(value)) {\n\t\t\t\tif (pool.indexOf(value) !== -1) {\n\t\t\t\t\t// console.warn(`Serializer.encodeJson.error`, `circular reference found, discard key \"${key}\"`);\n\t\t\t\t\treturn circularRef;\n\t\t\t\t}\n\t\t\t\tpool.push(value);\n\t\t\t\t// pool.set(value, true);\n\t\t\t}\n\t\t\treturn value;\n\t\t}, space);\n\t\tdecoded = json;\n\t} catch (error) {\n\t\t// console.warn(`Serializer.encodeJson.error`, value, error);\n\t}\n\treturn decoded;\n}\nexport function encodeJsonWithOptions(circularRef?: any, space?: string | number): (value: any) => string {\n\treturn (value: any) => encodeJson(value, circularRef, space);\n}\nexport function decodeJson(value: string): any {\n\tlet decoded: any;\n\tif (value) {\n\t\ttry {\n\t\t\tdecoded = JSON.parse(value);\n\t\t} catch (error) {\n\t\t\t// console.warn(`Serializer.decodeJson.error`, value, error);\n\t\t}\n\t}\n\treturn decoded;\n}\nexport function encodeBase64(value: string): string {\n\tlet encoded: string;\n\ttry {\n\t\tencoded = isPlatformBrowser ? btoa(value) : Buffer.from(value).toString('base64');\n\t} catch (error) {\n\t\tencoded = value;\n\t}\n\treturn encoded;\n}\nexport function decodeBase64(value: string): string {\n\tlet decoded: string;\n\ttry {\n\t\tdecoded = isPlatformBrowser ? atob(value) : Buffer.from(value, 'base64').toString();\n\t} catch (error) {\n\t\tdecoded = value;\n\t}\n\treturn decoded;\n}\n","import Pipe from '../core/pipe';\nimport { IPipeMeta } from '../core/types';\nimport Serializer, { encodeJsonWithOptions } from '../platform/common/serializer/serializer';\n\nexport default class JsonPipe extends Pipe {\n\tstatic transform(value: any): string | undefined {\n\t\treturn Serializer.encode(value, [encodeJsonWithOptions('#ref', 2)]);\n\t}\n\tstatic meta: IPipeMeta = {\n\t\tname: 'json',\n\t};\n}\n","import { Observable, Subject } from 'rxjs';\nimport { takeUntil, tap } from 'rxjs/operators';\nimport Component from '../core/component';\nimport Context from '../core/context';\nimport Factory, { CONTEXT_MAP, EXPRESSION_MAP, getContext, NODE_MAP } from '../core/factory';\nimport Structure from '../core/structure';\nimport { ExpressionFunction, IContext, IElement, IFactoryMeta, IModuleMeta, IModuleParsedMeta, ISelectorResult, IText } from '../core/types';\nimport { ExpressionError, nextError$ } from '../error/error';\n\nexport default class Module {\n\tmeta!: IModuleParsedMeta; // !!!\n\tinstances?: Factory[];\n\tunsubscribe$: Subject<void> = new Subject();\n\tstatic forRoot?: (...args: any[]) => typeof Module;\n\tpublic compile(node: IElement, parentInstance: Factory | Window, instances: Factory[] = []): Factory[] {\n\t\tif (node.nodeType === 1) {\n\t\t\tconst selectors = this.meta.selectors;\n\t\t\tconst matches: ISelectorResult[] = [];\n\t\t\t// const childNodes: NodeListOf<ChildNode> = node.childNodes;\n\t\t\t// copying array to avoid multiple compilation\n\t\t\tconst childNodes: Array<ChildNode> = Array.prototype.slice.call(node.childNodes);\n\t\t\t// const foundStructure : boolean = Module.matchSelectors(node as HTMLElement, selectors, matches);\n\t\t\tlet foundStructure = false;\n\t\t\tfor (let i: number = 0, len: number = selectors.length; i < len; i++) {\n\t\t\t\tconst selectorResult: ISelectorResult | false = selectors[i](node);\n\t\t\t\tif (selectorResult) { // !== false\n\t\t\t\t\t// match found\n\t\t\t\t\tmatches.push(selectorResult as ISelectorResult);\n\t\t\t\t\tconst factory: typeof Factory = selectorResult.factory;\n\t\t\t\t\t// structure found\n\t\t\t\t\tif (factory.prototype instanceof Structure) {\n\t\t\t\t\t\tfoundStructure = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t// injecting template\n\t\t\t\t\tif (factory.prototype instanceof Component && factory.meta.template) {\n\t\t\t\t\t\tnode.innerHTML = factory.meta.template;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet nextParentInstance = parentInstance;\n\t\t\tfor (let i: number = 0, len: number = matches.length; i < len; i++) {\n\t\t\t\tconst match: ISelectorResult = matches[i];\n\t\t\t\t// console.log('makeInstance', parentInstance.constructor.name, match.factory.name);\n\t\t\t\t// make instance\n\t\t\t\tconst instance: Factory | undefined = this.makeInstance(match.node, match.factory, match.selector, parentInstance);\n\t\t\t\tif (instance) {\n\t\t\t\t\tinstances.push(instance);\n\t\t\t\t\t// updating parentInstance\n\t\t\t\t\tif (match.factory.prototype instanceof Component) {\n\t\t\t\t\t\tnextParentInstance = instance;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t/*\n\t\t\tmatches.forEach((match: ISelectorResult) => {\n\t\t\t\t// console.log('makeInstance', parentInstance.constructor.name, match.factory.name);\n\t\t\t\t// make instance\n\t\t\t\tconst instance: Factory | undefined = this.makeInstance(match.node, match.factory, match.selector, parentInstance);\n\t\t\t\tif (instance) {\n\t\t\t\t\tinstances.push(instance);\n\t\t\t\t\t// updating parentInstance\n\t\t\t\t\tif (match.factory.prototype instanceof Component) {\n\t\t\t\t\t\tnextParentInstance = instance;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\t*/\n\t\t\tif (!foundStructure) {\n\t\t\t\t// compiling childNodes\n\t\t\t\tfor (let i: number = 0, len: number = childNodes.length; i < len; i++) {\n\t\t\t\t\tthis.compile(childNodes[i] as IElement, nextParentInstance, instances);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn instances;\n\t}\n\tpublic makeInstance(node: IElement, factory: typeof Factory, selector: string, parentInstance: Factory | Window, args?: any[], inject?: { [key: string]: any }): Factory {\n\t\tconst meta: IFactoryMeta = factory.meta;\n\t\t// creating factory instance\n\t\tconst instance = new factory(...(args || []));\n\t\t// console.log(instance.constructor.name, parentInstance.constructor.name);\n\t\t// injecting custom properties\n\t\tif (inject != null) {\n\t\t\tfor (let i:number = 0, keys = Object.keys(inject), len = keys.length; i < len; i++) {\n\t\t\t\tconst key = keys[i];\n\t\t\t\tObject.defineProperty(instance, key, {\n\t\t\t\t\tvalue: inject[key],\n\t\t\t\t\tconfigurable: false,\n\t\t\t\t\tenumerable: false,\n\t\t\t\t\twritable: true,\n\t\t\t\t});\n\t\t\t}\n\t\t\t/*\n\t\t\tObject.keys(inject).forEach((key: string) => {\n\t\t\t\t// console.log('Module.makeInstance', key, inject[key]);\n\t\t\t\tObject.defineProperty(instance, key, {\n\t\t\t\t\tvalue: inject[key],\n\t\t\t\t\tconfigurable: false,\n\t\t\t\t\tenumerable: false,\n\t\t\t\t\twritable: true,\n\t\t\t\t});\n\t\t\t});\n\t\t\t*/\n\t\t}\n\t\t// creating instance context\n\t\tconst context = Module.makeContext(this, instance, parentInstance, node, factory, selector);\n\t\t// creating component input and outputs\n\t\tif (instance instanceof Context) {\n\t\t\t// skipping hosts, inputs & outputs\n\t\t} else {\n\t\t\tthis.makeHosts(meta, instance, node);\n\t\t\tcontext.inputs = this.makeInputs(meta, node, factory);\n\t\t\tcontext.outputs = this.makeOutputs(meta, instance);\n\t\t\t// if (parentInstance instanceof Factory) {\n\t\t\tthis.resolveInputsOutputs(instance, parentInstance);\n\t\t\t// }\n\t\t}\n\t\t// calling onInit event\n\t\tinstance.onInit();\n\t\t// subscribe to parent changes\n\t\tif (parentInstance instanceof Factory) {\n\t\t\tconst { childInstances } = getContext(parentInstance);\n\t\t\tchildInstances.push(instance);\n\t\t\tinstance.onParentDidChange(parentInstance);\n\t\t\t/*\n\t\t\tparentInstance.changes$.pipe(\n\t\t\t\t// distinctUntilChanged(deepEqual),\n\t\t\t\tstartWith(parentInstance),\n\t\t\t\ttakeUntil(instance.unsubscribe$)\n\t\t\t).subscribe(function (changes: Factory | Window) {\n\t\t\t\tinstance.onParentDidChange(changes);\n\t\t\t});\n\t\t\t*/\n\t\t}\n\t\treturn instance;\n\t}\n\tpublic makeFunction(expression: string, params: string[] = ['$instance']): ExpressionFunction {\n\t\tconst name = expression + '_' + params.join(',');\n\t\tconst cachedExpressionFunction = EXPRESSION_MAP.get(name);\n\t\tif (cachedExpressionFunction) {\n\t\t\treturn cachedExpressionFunction;\n\t\t} else {\n\t\t\t(this.meta as any).context = Context; // !!!\n\t\t\texpression = Module.parseExpression(expression);\n\t\t\tconst text: string = `\n\t\t\treturn (function (${params.join(',')}, $$module) {\n\t\t\t\tvar $$pipes = $$module.meta.pipes;\n\t\t\t\ttry {\n\t\t\t\t\tif (this.parentInstance) {\n\t\t\t\t\t\twith(this.parentInstance) {\n\t\t\t\t\t\t\twith(this) {\n\t\t\t\t\t\t\t\treturn ${expression};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\twith(this) {\n\t\t\t\t\t\t\treturn ${expression};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} catch(error) {\n\t\t\t\t\t$$module.nextError(error, this, ${JSON.stringify(expression)}, arguments);\n\t\t\t\t}\n\t\t\t}.bind(this)).apply(this, arguments);`;\n\t\t\t/*\n\t\t\tconst text: string = `\n\t\t\treturn (function (${params.join(',')}, $$module) {\n\t\t\t\tvar $$pipes = $$module.meta.pipes;\n\t\t\t\treturn ${expression};\n\t\t\t}.bind(this)).apply(this, arguments);`;\n\t\t\t*/\n\t\t\t/*\n\t\t\tconst text: string = `\n\t\t\treturn (function (${params.join(',')}, $$module) {\n\t\t\t\tvar $$pipes = $$module.meta.pipes;\n\t\t\t\ttry {\n\t\t\t\t\twith(this) {\n\t\t\t\t\t\treturn ${expression};\n\t\t\t\t\t}\n\t\t\t\t} catch(error) {\n\t\t\t\t\t$$module.nextError(error, this, ${JSON.stringify(expression)}, arguments);\n\t\t\t\t}\n\t\t\t}.bind(this)).apply(this, arguments);`;\n\t\t\t*/\n\t\t\tconst expressionFunction = new Function(text) as ExpressionFunction;\n\t\t\t(expressionFunction as any).expression = expression;\n\t\t\tEXPRESSION_MAP.set(name, expressionFunction);\n\t\t\treturn expressionFunction;\n\t\t}\n\t}\n\tpublic resolveInputsOutputs(instance: Factory, changes: Factory | Window): void {\n\t\tconst context: IContext = getContext(instance);\n\t\tconst parentInstance: Factory | Window = context.parentInstance;\n\t\tconst inputs: { [key: string]: ExpressionFunction } = context.inputs!;\n\t\tfor (let i:number = 0, keys = Object.keys(inputs), len = keys.length; i < len; i++) {\n\t\t\tconst key = keys[i];\n\t\t\tconst expression: ExpressionFunction = inputs[key];\n\t\t\tconst value: any = this.resolve(expression, parentInstance, instance);\n\t\t\tinstance[key] = value;\n\t\t}\n\t\t/*\n\t\tObject.keys(inputs).forEach(key => {\n\t\t\tconst expression: ExpressionFunction = inputs[key];\n\t\t\tconst value: any = this.resolve(expression, parentInstance, instance);\n\t\t\tinstance[key] = value;\n\t\t});\n\t\t*/\n\t}\n\tpublic getInputAttributeExpression(key: string, node: IElement): string | null {\n\t\tlet expression: string | null = null;\n\t\tif (node.hasAttribute(`[${key}]`)) {\n\t\t\texpression = node.getAttribute(`[${key}]`);\n\t\t\t// console.log('Module.getInputAttributeExpression.expression.1', expression);\n\t\t} else if (node.hasAttribute(`*${key}`)) {\n\t\t\texpression = node.getAttribute(`*${key}`);\n\t\t\t// console.log('Module.getInputAttributeExpression.expression.2', expression);\n\t\t} else if (node.hasAttribute(key)) {\n\t\t\texpression = node.getAttribute(key);\n\t\t\tif (expression) {\n\t\t\t\tconst attribute: string = expression.replace(/({{)|(}})|(\")/g, function (substring: string, a, b, c) {\n\t\t\t\t\tif (a) {\n\t\t\t\t\t\treturn '\"+';\n\t\t\t\t\t}\n\t\t\t\t\tif (b) {\n\t\t\t\t\t\treturn '+\"';\n\t\t\t\t\t}\n\t\t\t\t\tif (c) {\n\t\t\t\t\t\treturn '\\\"';\n\t\t\t\t\t}\n\t\t\t\t\treturn '';\n\t\t\t\t});\n\t\t\t\texpression = `\"${attribute}\"`;\n\t\t\t\t// console.log('Module.getInputAttributeExpression.expression.3', expression);\n\t\t\t}\n\t\t}\n\t\t// console.log('Module.getInputAttributeExpression.expression', expression);\n\t\treturn expression;\n\t}\n\tpublic resolve(expression: ExpressionFunction, parentInstance: Factory | Window, payload: any): any {\n\t\t// console.log('Module.resolve', expression, parentInstance, payload, getContext);\n\t\treturn expression.apply(parentInstance, [payload, this]);\n\t}\n\tpublic parse(node: HTMLElement, instance: Factory): void {\n\t\tfor (let i: number = 0, len: number = node.childNodes.length; i < len; i++) {\n\t\t\tconst child: ChildNode = node.childNodes[i];\n\t\t\tif (child.nodeType === 1) {\n\t\t\t\tconst element: HTMLElement = child as HTMLElement;\n\t\t\t\tconst context: IContext | undefined = getParsableContextByElement(element);\n\t\t\t\tif (!context) {\n\t\t\t\t\tthis.parse(element, instance);\n\t\t\t\t}\n\t\t\t} else if (child.nodeType === 3) {\n\t\t\t\tconst text: IText = child as IText;\n\t\t\t\tthis.parseTextNode(text, instance);\n\t\t\t}\n\t\t}\n\t}\n\tpublic remove(node: Node, keepInstance?: Factory): Node {\n\t\tconst keepContext: IContext | undefined = keepInstance ? getContext(keepInstance) : undefined;\n\t\tModule.traverseDown(node, (node: Node) => {\n\t\t\tModule.deleteContext(node as IElement, keepContext);\n\t\t});\n\t\treturn node;\n\t}\n\tpublic destroy(): void {\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t\tthis.remove(this.meta.node);\n\t\tthis.meta.node.innerHTML = this.meta.nodeInnerHTML;\n\t}\n\tpublic nextError(error: Error, instance: Factory, expression: string, params: any[]): void {\n\t\tconst expressionError: ExpressionError = new ExpressionError(error, this, instance, expression, params);\n\t\tnextError$.next(expressionError);\n\t}\n\tprotected makeContext(instance: Factory, parentInstance: Factory | Window, node: IElement, selector: string): IContext {\n\t\tconst context: IContext = Module.makeContext(this, instance, parentInstance, node, instance.constructor as typeof Factory, selector);\n\t\t// console.log('Module.makeContext', context, context.instance, context.node);\n\t\treturn context;\n\t}\n\tprotected makeHosts(meta: IFactoryMeta, instance: Factory, node: IElement): void {\n\t\tif (meta.hosts) {\n\t\t\tfor (let i:number = 0, keys = Object.keys(meta.hosts), len = keys.length; i < len; i++) {\n\t\t\t\tconst key = keys[i];\n\t\t\t\tconst factory: typeof Factory = meta.hosts![key];\n\t\t\t\tinstance[key] = getHost(instance, factory, node);\n\t\t\t}\n\t\t\t/*\n\t\t\tObject.keys(meta.hosts).forEach((key: string) => {\n\t\t\t\tconst factory: typeof Factory = meta.hosts![key];\n\t\t\t\tinstance[key] = getHost(instance, factory, node);\n\t\t\t});\n\t\t\t*/\n\t\t}\n\t}\n\tprotected makeInputs(meta: IFactoryMeta, node: IElement, factory: typeof Factory): { [key: string]: ExpressionFunction } {\n\t\tconst inputs: { [key: string]: ExpressionFunction } = {};\n\t\tif (meta.inputs) {\n\t\t\tfor (let i: number = 0, len: number = meta.inputs.length; i < len; i++) {\n\t\t\t\tconst key:string = meta.inputs[i];\n\t\t\t\tlet expression: string | null = this.getInputAttributeExpression(key, node);\n\t\t\t\tif (expression) {\n\t\t\t\t\texpression = factory.mapExpression(key, expression);\n\t\t\t\t\tinputs[key] = this.makeFunction(expression);\n\t\t\t\t}\n\t\t\t}\n\t\t\t/*\n\t\t\tmeta.inputs.forEach(key => {\n\t\t\t\tlet expression: string | null = this.getInputAttributeExpression(key, node);\n\t\t\t\tif (expression) {\n\t\t\t\t\texpression = factory.mapExpression(key, expression);\n\t\t\t\t\tinputs[key] = this.makeFunction(expression);\n\t\t\t\t}\n\t\t\t});\n\t\t\t*/\n\t\t}\n\t\treturn inputs;\n\t}\n\tprotected makeOutput(instance: Factory, key: string): Observable<any> {\n\t\tconst context: IContext = getContext(instance);\n\t\tconst node: IElement = context.node;\n\t\tconst parentInstance: Factory | Window = context.parentInstance;\n\t\tconst expression: string | null = node.getAttribute(`(${key})`);\n\t\tconst outputExpression: ExpressionFunction | null = expression ? this.makeFunction(expression, ['$event']) : null;\n\t\tconst output$: Observable<any> = new Subject<any>().pipe(\n\t\t\ttap((event) => {\n\t\t\t\tif (outputExpression) {\n\t\t\t\t\t// console.log(expression, parentInstance);\n\t\t\t\t\tthis.resolve(outputExpression, parentInstance, event);\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t\toutput$.pipe(\n\t\t\ttakeUntil(instance.unsubscribe$)\n\t\t).subscribe();\n\t\tinstance[key] = output$;\n\t\treturn output$;\n\t}\n\tprotected makeOutputs(meta: IFactoryMeta, instance: Factory): { [key: string]: Observable<any> } {\n\t\tconst outputs: { [key: string]: Observable<any> } = {};\n\t\tif (meta.outputs) {\n\t\t\tmeta.outputs.forEach((key: string) => {\n\t\t\t\tconst output = this.makeOutput(instance, key);\n\t\t\t\tif (output) {\n\t\t\t\t\toutputs[key] = output;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn outputs;\n\t}\n\tprotected parseTextNode(node: IText, instance: Factory): void {\n\t\tlet expressions: (ExpressionFunction | string)[] | undefined = node.nodeExpressions;\n\t\tif (!expressions) {\n\t\t\texpressions = this.parseTextNodeExpression(node.wholeText);\n\t\t}\n\t\tif (expressions.length) {\n\t\t\tconst replacedText: string = expressions.reduce((p: string, c: ExpressionFunction | string) => {\n\t\t\t\tlet text: string;\n\t\t\t\tif (typeof c === 'function') { // instanceOf ExpressionFunction ?;\n\t\t\t\t\t// console.log('Module.parseTextNode', c, instance);\n\t\t\t\t\ttext = this.resolve(c as ExpressionFunction, instance, instance);\n\t\t\t\t\tif (text == undefined) { // !!! keep == loose equality\n\t\t\t\t\t\ttext = '';\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\ttext = c;\n\t\t\t\t}\n\t\t\t\treturn p + text;\n\t\t\t}, '');\n\t\t\tif (node.nodeValue !== replacedText) {\n\t\t\t\tconst textNode: IText = document.createTextNode(replacedText) as IText;\n\t\t\t\ttextNode.nodeExpressions = expressions;\n\t\t\t\tnode.parentNode!.replaceChild(textNode, node);\n\t\t\t}\n\t\t} else {\n\t\t\tnode.nodeExpressions = expressions;\n\t\t}\n\t}\n\tprotected pushFragment(nodeValue: string, from: number, to: number, expressions: (ExpressionFunction | string)[]): void {\n\t\tconst fragment: string = nodeValue.substring(from, to);\n\t\texpressions.push(fragment);\n\t}\n\tprotected parseTextNodeExpression(nodeValue: string): (ExpressionFunction | string)[] {\n\t\tconst expressions: (ExpressionFunction | string)[] = [];\n\t\tconst regex: RegExp = /\\{{2}((([^{}])|(\\{([^{}]|(\\{.*?\\}))+?\\}))*?)\\}{2}/g;\n\t\tlet lastIndex: number = 0,\n\t\t\tmatches: RegExpExecArray | null;\n\t\twhile ((matches = regex.exec(nodeValue)) !== null) {\n\t\t\tconst index: number = regex.lastIndex - matches[0].length;\n\t\t\tif (index > lastIndex) {\n\t\t\t\tthis.pushFragment(nodeValue, index, lastIndex, expressions);\n\t\t\t}\n\t\t\tlastIndex = regex.lastIndex;\n\t\t\tif (matches[1]) {\n\t\t\t\tconst expression: ExpressionFunction = this.makeFunction(matches[1]);\n\t\t\t\texpressions.push(expression);\n\t\t\t}\n\t\t}\n\t\t// console.log('Module.parseTextNodeExpression', regex.source, expressions, nodeValue);\n\t\tconst length: number = nodeValue.length;\n\t\tif (length > lastIndex) {\n\t\t\tthis.pushFragment(nodeValue, lastIndex, length, expressions);\n\t\t}\n\t\tif (expressions.find(x => typeof x === 'function')) {\n\t\t\treturn expressions;\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\tprotected static makeContext(module: Module, instance: Factory, parentInstance: Factory | Window, node: IElement, factory: typeof Factory, selector: string): IContext {\n\t\tconst context: IContext = { module, instance, parentInstance, childInstances: [], node, factory, selector };\n\t\tlet nodeContexts = NODE_MAP.get(node);\n\t\tif (!nodeContexts) {\n\t\t\tnodeContexts = [];\n\t\t\tNODE_MAP.set(node, nodeContexts);\n\t\t}\n\t\tnodeContexts.push(context);\n\t\tCONTEXT_MAP.set(instance, context);\n\t\treturn context;\n\t}\n\n\tprotected static parseExpression(expression:string):string {\n\t\texpression = Module.parseGroup(expression);\n\t\texpression = Module.parseOptionalChaining(expression);\n\t\t// expression = Module.parseThis(expression);\n\t\treturn expression;\n\t}\n\tprotected static parseGroup(expression:string):string {\n\t\tconst l = '┌';\n\t\tconst r = '┘';\n\t\tconst rx1 = /(\\()([^\\(\\)]*)(\\))/;\n\t\twhile (rx1.test(expression)) {\n\t\t\texpression = expression.replace(rx1, function (m, ...args) {\n\t\t\t\treturn `${l}${Module.parsePipes(args[1])}${r}`;\n\t\t\t});\n\t\t}\n\t\texpression = Module.parsePipes(expression);\n\t\tconst rx2 = /(┌)|(┘)/g;\n\t\texpression = expression.replace(rx2, function (m, ...args) {\n\t\t\treturn args[0] ? '(' : ')';\n\t\t});\n\t\treturn expression;\n\t}\n\tprotected static parsePipes(expression:string):string {\n\t\tconst rx = /(.*?[^\\|])\\|\\s*(\\w+)\\s*([^\\|]+)/;\n\t\twhile (rx.test(expression)) {\n\t\t\texpression = expression.replace(rx, function(m,value,name,expression) {\n\t\t\t\tconst params = Module.parsePipeParams(expression);\n\t\t\t\treturn `$$pipes.${name}.transform(${[value, ...params]})`;\n\t\t\t});\n\t\t}\n\t\treturn expression;\n\t}\n\tprotected static parsePipeParams(expression:string):string[] {\n\t\tconst params = [];\n\t\t// const rx = /:\\s*(\\[.+\\]|\\{.+\\}|\\(.+\\)|\\'.+\\'|[^:\\s]+)/g;\n\t\tconst rx = /:\\s*(\\{.+\\}|\\(.+\\)|[^:]+)/g;\n\t\tlet match;\n\t\twhile(match = rx.exec(expression)) {\n\t\t\tparams.push(match[1]);\n\t\t}\n\t\treturn params;\n\t}\n\tprotected static parseOptionalChaining(expression:string):string {\n\t\tconst rx = /([\\w|\\.]+)(?:\\?\\.)+([\\.|\\w]+)/;\n\t\twhile (rx.test(expression)) {\n\t\t\texpression = expression.replace(rx, function(m,a,b) {\n\t\t\t\treturn `${a} && ${a}.${b}`;\n\t\t\t});\n\t\t}\n\t\treturn expression;\n\t}\n\tprotected static parseThis(expression:string):string {\n\t\tconst rx = /(\\'.+\\'|\\[.+\\]|\\{.+\\}|\\$\\$pipes)|([^\\w.])([^\\W\\d])|^([^\\W\\d])/g;\n\t\texpression = expression.replace(rx, function(m,g1,g2,g3,g4) {\n\t\t\tif (g4) {\n\t\t\t\treturn `this.${g4}`;\n\t\t\t} else if(g3) {\n\t\t\t\treturn `${g2}this.${g3}`;\n\t\t\t} else {\n\t\t\t\treturn g1;\n\t\t\t}\n\t\t});\n\t\treturn expression;\n\t}\n\n\t/*\n\tprotected static parseExpression__(expression: string): string {\n\t\texpression = Module.parseGroup__(expression);\n\t\treturn Module.parseOptionalChaining__(expression);\n\t}\n\tprotected static parseGroup__(expression: string): string {\n\t\tconst l: string = '┌';\n\t\tconst r: string = '┘';\n\t\tconst rx1: RegExp = /(\\()([^\\(\\)]*)(\\))/;\n\t\twhile (expression.match(rx1)) {\n\t\t\texpression = expression.replace(rx1, function (substring: string, ...args: any[]) {\n\t\t\t\treturn `${l}${Module.parsePipes__(args[1])}${r}`;\n\t\t\t});\n\t\t}\n\t\texpression = Module.parsePipes__(expression);\n\t\texpression = expression.replace(/(┌)|(┘)/g, function (substring: string, ...args) {\n\t\t\treturn args[0] ? '(' : ')';\n\t\t});\n\t\treturn expression;\n\t}\n\tprotected static parsePipes__(expression: string): string {\n\t\tconst l: string = '┌';\n\t\tconst r: string = '┘';\n\t\tconst rx1: RegExp = /(.*?[^\\|])\\|([^\\|]+)/;\n\t\twhile (expression.match(rx1)) {\n\t\t\texpression = expression.replace(rx1, function (substring: string, ...args: any[]) {\n\t\t\t\tconst value: string = args[0].trim();\n\t\t\t\tconst params: string[] = Module.parsePipeParams__(args[1]);\n\t\t\t\tconst func: string = params.shift()!.trim();\n\t\t\t\treturn `$$pipes.${func}.transform${l}${[value, ...params]}${r}`;\n\t\t\t});\n\t\t}\n\t\treturn expression;\n\t}\n\tprotected static parsePipeParams__(expression: string): string[] {\n\t\tconst segments: string[] = [];\n\t\tlet i: number = 0,\n\t\t\tword: string = '',\n\t\t\tblock: number = 0;\n\t\tconst t: number = expression.length;\n\t\twhile (i < t) {\n\t\t\tconst c: string = expression.substr(i, 1);\n\t\t\tif (c === '{' || c === '(' || c === '[') {\n\t\t\t\tblock++;\n\t\t\t}\n\t\t\tif (c === '}' || c === ')' || c === ']') {\n\t\t\t\tblock--;\n\t\t\t}\n\t\t\tif (c === ':' && block === 0) {\n\t\t\t\tif (word.length) {\n\t\t\t\t\tsegments.push(word.trim());\n\t\t\t\t}\n\t\t\t\tword = '';\n\t\t\t} else {\n\t\t\t\tword += c;\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\t\tif (word.length) {\n\t\t\tsegments.push(word.trim());\n\t\t}\n\t\treturn segments;\n\t}\n\tprotected static parseOptionalChaining__(expression: string): string {\n\t\tconst regex: RegExp = /(\\w+(\\?\\.))+([\\.|\\w]+)/g;\n\t\tlet previous: string;\n\t\texpression = expression.replace(regex, function (substring: string, ...args: any[]) {\n\t\t\tconst tokens: string[] = substring.split('?.');\n\t\t\tfor (let i: number = 0, len: number = tokens.length - 1; i < len; i++) {\n\t\t\t\tconst a: string = i > 0 ? `(${tokens[i]} = ${previous})` : tokens[i];\n\t\t\t\tconst b: string = tokens[i + 1];\n\t\t\t\tprevious = i > 0 ? `${a}.${b}` : `(${a} ? ${a}.${b} : void 0)`;\n\t\t\t}\n\t\t\treturn previous || '';\n\t\t});\n\t\treturn expression;\n\t}\n\t*/\n\n\tprotected static deleteContext(node: IElement, keepContext: IContext | undefined): IContext[] {\n\t\tconst keepContexts: IContext[] = [];\n\t\tconst nodeContexts: IContext[] | undefined = NODE_MAP.get(node);\n\t\tif (nodeContexts) {\n\t\t\tnodeContexts.forEach((context: IContext) => {\n\t\t\t\tif (context === keepContext) {\n\t\t\t\t\tkeepContexts.push(keepContext);\n\t\t\t\t} else {\n\t\t\t\t\tconst instance: Factory = context.instance;\n\t\t\t\t\t// !!!\n\t\t\t\t\tconst parentInstance: Factory | Window = context.parentInstance;\n\t\t\t\t\tif (parentInstance instanceof Factory) {\n\t\t\t\t\t\tconst parentContext:IContext = getContext(parentInstance);\n\t\t\t\t\t\tif (parentContext) {\n\t\t\t\t\t\t\tconst i = parentContext.childInstances.indexOf(instance);\n\t\t\t\t\t\t\tif (i !== -1) {\n\t\t\t\t\t\t\t\tparentContext.childInstances.splice(i, 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// !!!\n\t\t\t\t\tinstance.unsubscribe$.next();\n\t\t\t\t\tinstance.unsubscribe$.complete();\n\t\t\t\t\tinstance.onDestroy();\n\t\t\t\t\tCONTEXT_MAP.delete(instance);\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (keepContexts.length) {\n\t\t\t\tNODE_MAP.set(node, keepContexts);\n\t\t\t} else {\n\t\t\t\tNODE_MAP.delete(node);\n\t\t\t}\n\t\t}\n\t\treturn keepContexts;\n\t}\n\tprotected static traverseUp(node: Node | null, callback: (node: Node, i: number) => any, i: number = 0): any {\n\t\tif (!node) {\n\t\t\treturn;\n\t\t}\n\t\tconst result = callback(node, i);\n\t\tif (result) {\n\t\t\treturn result;\n\t\t}\n\t\treturn this.traverseUp(node.parentNode, callback, i + 1);\n\t}\n\tprotected static traverseDown(node: Node | null, callback: (node: Node, i: number) => any, i: number = 0): any {\n\t\tif (!node) {\n\t\t\treturn;\n\t\t}\n\t\tlet result = callback(node, i);\n\t\tif (result) {\n\t\t\treturn result;\n\t\t}\n\t\tif (node.nodeType === 1) {\n\t\t\tlet j = 0,\n\t\t\t\tt = node.childNodes.length;\n\t\t\twhile (j < t && !result) {\n\t\t\t\tresult = this.traverseDown(node.childNodes[j], callback, i + 1);\n\t\t\t\tj++;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\tprotected static traversePrevious(node: Node | null, callback: (node: Node, i: number) => any, i: number = 0): any {\n\t\tif (!node) {\n\t\t\treturn;\n\t\t}\n\t\tconst result = callback(node, i);\n\t\tif (result) {\n\t\t\treturn result;\n\t\t}\n\t\treturn this.traversePrevious(node.previousSibling, callback, i + 1);\n\t}\n\tprotected static traverseNext(node: Node | null, callback: (node: Node, i: number) => any, i: number = 0): any {\n\t\tif (!node) {\n\t\t\treturn;\n\t\t}\n\t\tconst result = callback(node, i);\n\t\tif (result) {\n\t\t\treturn result;\n\t\t}\n\t\treturn this.traverseNext(node.nextSibling, callback, i + 1);\n\t}\n\t/*\n\tprotected static matchSelectors(node: HTMLElement, selectors: SelectorFunction[], results: ISelectorResult[]): boolean {\n\t\tlet foundStructure = false;\n\t\tfor (let i: number = 0, len:number = selectors.length; i < len; i++) {\n\t\t\tconst selectorResult: ISelectorResult | false = selectors[i](node);\n\t\t\tif (selectorResult) { // !== false\n\t\t\t\tresults.push(selectorResult as ISelectorResult);\n\t\t\t\tconst factory: typeof Factory = selectorResult.factory;\n\t\t\t\tif (factory.prototype instanceof Structure) {\n\t\t\t\t\tfoundStructure = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (factory.prototype instanceof Component && factory.meta.template) {\n\t\t\t\t\tnode.innerHTML = factory.meta.template;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn foundStructure;\n\t}\n\t*/\n\tstatic meta: IModuleMeta;\n}\nexport function getParsableContextByElement(element: HTMLElement): IContext | undefined {\n\tlet context: IContext | undefined;\n\tconst contexts: IContext[] | undefined = NODE_MAP.get(element);\n\tif (contexts) {\n\t\tcontext = contexts.reduce((previous: IContext | undefined, current: IContext) => {\n\t\t\tif (current.instance instanceof Context) {\n\t\t\t\treturn previous ? previous : current;\n\t\t\t} else if (current.instance instanceof Component) {\n\t\t\t\treturn current;\n\t\t\t} else {\n\t\t\t\treturn previous;\n\t\t\t}\n\t\t}, undefined);\n\t}\n\t// context = contexts ? contexts.find(x => x.instance instanceof Component) : undefined;\n\treturn context;\n}\nexport function getContextByNode(element: HTMLElement): IContext | undefined {\n\tlet context: IContext | undefined = getParsableContextByElement(element);\n\tif (context && context.factory.prototype instanceof Structure) {\n\t\treturn undefined;\n\t}\n\treturn context;\n}\nexport function getHost(instance: Factory, factory: typeof Factory, node: IElement): Factory | undefined {\n\tif (!node) {\n\t\tnode = getContext(instance).node;\n\t}\n\tconst nodeContexts: IContext[] | undefined = NODE_MAP.get(node);\n\tif (nodeContexts) {\n\t\t// console.log(nodeContexts);\n\t\tfor (let i: number = 0, len: number = nodeContexts.length; i < len; i++) {\n\t\t\tconst context: IContext = nodeContexts[i];\n\t\t\tif (context.instance !== instance) {\n\t\t\t\t// console.log(context.instance, instance);\n\t\t\t\tif (context.instance instanceof factory) {\n\t\t\t\t\treturn context.instance;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif (node.parentNode) {\n\t\treturn getHost(instance, factory, node.parentNode as IElement);\n\t} else {\n\t\treturn undefined;\n\t}\n}\n/*\nexport function deepEqual(prev: any, curr: any, pool: any[] = []): boolean {\n\tlet equal: boolean = typeof prev === typeof curr;\n\tif (prev && pool.indexOf(prev) === -1 && pool.indexOf(curr) === -1) {\n\t\tpool.push(prev, curr);\n\t\tconst type = Array.isArray(curr) ? 'array' : typeof curr;\n\t\tswitch (type) {\n\t\t\tcase 'array':\n\t\t\t\tequal = prev.length === curr.length;\n\t\t\t\tequal = equal && prev.reduce((p: boolean, a: any[], i: number) => p && deepEqual(a, curr[i], pool), true);\n\t\t\t\tbreak;\n\t\t\tcase 'object':\n\t\t\t\tif ('Symbol' in WINDOW && Symbol.iterator in prev) {\n\t\t\t\t\t// || prev instanceof Map\n\t\t\t\t\tequal = prev.size === curr.size;\n\t\t\t\t\tconst ea = prev.entries();\n\t\t\t\t\tconst eb = curr.entries();\n\t\t\t\t\tfor (let item = ea.next(); item.done !== true; item = ea.next()) {\n\t\t\t\t\t\tconst ia = item.value;\n\t\t\t\t\t\tconst ib = eb.next().value;\n\t\t\t\t\t\tequal = equal && deepEqual(ia, ib, pool);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst prevKeys = Object.keys(prev);\n\t\t\t\t\tconst currKeys = Object.keys(curr);\n\t\t\t\t\tequal = prevKeys.length === currKeys.length;\n\t\t\t\t\tequal = equal && prevKeys.reduce((p: boolean, k: string) => p && deepEqual(prev[k], curr[k], pool), true);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tequal = prev === curr;\n\t\t}\n\t}\n\t// console.log(equal, prev, curr);\n\treturn equal;\n}\n*/\n","import Directive from '../core/directive';\nimport { getContext } from '../core/factory';\nimport { IFactoryMeta } from '../core/types';\n\nexport default class SrcDirective extends Directive {\n\tset src(src: string) {\n\t\tif (this.src_ !== src) {\n\t\t\tthis.src_ = src;\n\t\t\tconst { node } = getContext(this);\n\t\t\tsrc ? node.setAttribute('src', src) : node.removeAttribute('src');\n\t\t}\n\t}\n\tget src(): string {\n\t\treturn this.src_;\n\t}\n\tstatic meta: IFactoryMeta = {\n\t\tselector: '[[src]]',\n\t\tinputs: ['src'],\n\t};\n}\n","import Directive from '../core/directive';\nimport { getContext } from '../core/factory';\nimport { IFactoryMeta } from '../core/types';\n\nexport default class StyleDirective extends Directive {\n\tstyle?: { [key: string]: string } | null;\n\tpreviousStyle?: { [key: string]: string } | null;\n\tonChanges() {\n\t\tconst { node } = getContext(this);\n\t\tconst style = this.style;\n\t\tconst previousStyle = this.previousStyle;\n\t\tif (previousStyle) {\n\t\t\tfor (let key in previousStyle) {\n\t\t\t\tif (!style || !style[key]) {\n\t\t\t\t\tconst splitted: string[] = key.split('.');\n\t\t\t\t\tconst propertyName = splitted.shift();\n\t\t\t\t\tnode.style.removeProperty(propertyName!);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (style) {\n\t\t\tfor (let key in style) {\n\t\t\t\tif (!previousStyle || previousStyle[key] !== style[key]) {\n\t\t\t\t\tconst splitted: string[] = key.split('.');\n\t\t\t\t\tconst propertyName = splitted.shift();\n\t\t\t\t\tconst value = style[key] + (splitted.length ? splitted[0] : '');\n\t\t\t\t\t// console.log(propertyName, value, style, key, style[key]);\n\t\t\t\t\tnode.style.setProperty(propertyName!, value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.previousStyle = style;\n\t\t// console.log('StyleDirective.onChanges', style);\n\t}\n\tstatic meta: IFactoryMeta = {\n\t\tselector: `[[style]]`,\n\t\tinputs: ['style']\n\t};\n}\n","\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport ClassDirective from './class/class.directive';\r\nimport Factory from './core/factory';\r\nimport Pipe from './core/pipe';\r\nimport { errors$ } from './error/error';\r\nimport EventDirective from './event/event.directive';\r\nimport ForStructure from './for/for.structure';\r\nimport HrefTargetDirective from './href/href-target.directive';\r\nimport HrefDirective from './href/href.directive';\r\nimport IfStructure from './if/if.structure';\r\nimport InnerHtmlDirective from './inner-html/inner-html.directive';\r\nimport JsonComponent from './json/json.component';\r\nimport JsonPipe from './json/json.pipe';\r\nimport Module from './module/module';\r\nimport SrcDirective from './src/src.directive';\r\nimport StyleDirective from './style/style.directive';\r\n\r\nconst factories: typeof Factory[] = [\r\n\tClassDirective,\r\n\tEventDirective,\r\n\tForStructure,\r\n\tHrefDirective,\r\n\tHrefTargetDirective,\r\n\tIfStructure,\r\n\tInnerHtmlDirective,\r\n\tJsonComponent,\r\n\tSrcDirective,\r\n\tStyleDirective,\r\n];\r\nconst pipes: typeof Pipe[] = [\r\n\tJsonPipe,\r\n];\r\nexport default class CoreModule extends Module {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\t// console.log('CoreModule');\r\n\t\terrors$.pipe(\r\n\t\t\ttakeUntil(this.unsubscribe$),\r\n\t\t).subscribe();\r\n\t}\r\n\tstatic meta = {\r\n\t\tdeclarations: [\r\n\t\t\t...factories,\r\n\t\t\t...pipes,\r\n\t\t],\r\n\t\texports: [\r\n\t\t\t...factories,\r\n\t\t\t...pipes,\r\n\t\t]\r\n\t};\r\n}\r\n","export const WINDOW: Window = ((typeof self === 'object' && self.self === self && self) || (typeof global === 'object' && global.global === global && global) || this) as unknown as Window;\n","import { IElement, IModuleParsedMeta } from '../core/types';\nimport { ModuleError } from '../error/error';\nimport Module from '../module/module';\nimport { WINDOW } from './common/window/window';\nimport Platform, { isPlatformBrowser } from './platform';\n\nexport default class Browser extends Platform {\n\t/**\n\t * @param moduleFactory\n\t * @description This method returns a Browser compiled module\n\t */\n\tstatic bootstrap(moduleFactory?: typeof Module): Module {\n\t\tif (!isPlatformBrowser) {\n\t\t\tthrow new ModuleError('missing platform browser, Window not found');\n\t\t}\n\t\tif (!moduleFactory) {\n\t\t\tthrow new ModuleError('missing moduleFactory');\n\t\t}\n\t\tif (!moduleFactory.meta) {\n\t\t\tthrow new ModuleError('missing moduleFactory meta');\n\t\t}\n\t\tif (!moduleFactory.meta.bootstrap) {\n\t\t\tthrow new ModuleError('missing bootstrap');\n\t\t}\n\t\tif (!moduleFactory.meta.bootstrap.meta) {\n\t\t\tthrow new ModuleError('missing bootstrap meta');\n\t\t}\n\t\tif (!moduleFactory.meta.bootstrap.meta.selector) {\n\t\t\tthrow new ModuleError('missing bootstrap meta selector');\n\t\t}\n\t\tconst meta: IModuleParsedMeta = this.resolveMeta(moduleFactory!);\n\t\tconst module: Module = new moduleFactory();\n\t\tmodule.meta = meta;\n\t\tmeta.imports.forEach((moduleFactory: typeof Module) => {\n\t\t\tmoduleFactory.prototype.constructor.call(module);\n\t\t});\n\t\tif (WINDOW.rxcomp_hydrate_) {\n\t\t\tconst clonedNode = meta.node.cloneNode() as IElement;\n\t\t\tclonedNode.innerHTML = meta.nodeInnerHTML = WINDOW.rxcomp_hydrate_.innerHTML;\n\t\t\tconst instances = module.compile(clonedNode, WINDOW);\n\t\t\tmodule.instances = instances;\n\t\t\t/*\n\t\t\tconst root = instances[0];\n\t\t\troot.pushChanges();\n\t\t\t*/\n\t\t\tmeta.node.parentNode?.replaceChild(clonedNode, meta.node);\n\t\t} else {\n\t\t\tconst instances = module.compile(meta.node, WINDOW);\n\t\t\tmodule.instances = instances;\n\t\t\t/*\n\t\t\tconst root = instances[0];\n\t\t\troot.pushChanges();\n\t\t\t*/\n\t\t}\n\t\treturn module;\n\t}\n}\n","import { Browser, Component, CoreModule, getContext, Module } from '../../../src/rxcomp';\n\nclass RootComponent extends Component {\n\tget count() {\n\t\treturn this.count_;\n\t}\n\tset count(count:number) {\n\t\tthis.count_ = count;\n\t\tthis.items = new Array(count).fill(0).map((x, i) => i + 1);\n\t}\n\tonInit() {\n\t\tthis.index = -1;\n\t\tlet params = new URLSearchParams(document.location.search.substring(1));\n\t\tlet paramCount = params.get('count');\n\t\tthis.count = (paramCount ? parseInt(paramCount) : 10);\n\t\t// this.runTask();\n\t}\n\tsetIndex(index:number) {\n\t\tthis.index = index;\n\t\tthis.pushChanges();\n\t}\n\trunTask() {\n\t\tsetTimeout(() => {\n\t\t\tthis.count = Math.floor(1 + Math.random() * 1000);\n\t\t\tthis.pushChanges();\n\t\t\tthis.runTask();\n\t\t}, 2000);\n\t}\n}\nRootComponent.meta = {\n\tselector: '[root-component]',\n};\n\nclass ItemComponent extends Component {\n\tonInit() {\n\t\tconst { node } = getContext(this);\n\t\tnode.innerText = this.item;\n\t}\n\t/*\n\tonInit() {\n\t\tconsole.log('ItemComponent.onInit', this.item);\n\t}\n\t*/\n}\nItemComponent.meta = {\n\tselector: '[item-component]',\n\tinputs: ['item'],\n\t// template: `<span [innerHTML]=\"item\"></span>`,\n};\n\nclass AppModule extends Module { }\nAppModule.meta = {\n\timports: [\n\t\tCoreModule\n\t],\n\tdeclarations: [\n\t\tItemComponent,\n\t],\n\tbootstrap: RootComponent,\n};\n\nBrowser.bootstrap(AppModule);\n"]}