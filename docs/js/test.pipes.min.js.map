{"version":3,"sources":["web/client/js/test.pipes.ts","../../src/core/factory.ts","../../src/core/directive.ts","../../src/class/class.directive.ts","../../src/error/error.ts","../../src/event/event.directive.ts","../../src/core/structure.ts","../../src/core/component.ts","../../src/core/context.ts","../../src/for/for.item.ts","../../src/for/for.structure.ts","../../src/href/href.directive.ts","../../src/if/if.structure.ts","../../src/inner-html/inner-html.directive.ts","../../src/json/json.component.ts","../../src/core/pipe.ts","../../src/platform/platform.ts","../../src/platform/common/serializer/serializer.ts","../../src/json/json.pipe.ts","../../src/module/module.ts","../../src/src/src.directive.ts","../../src/style/style.directive.ts","../../src/core.module.ts","../../src/platform/browser.ts","../../web/client/js/test.pipes.ts"],"names":["rxjs","operators","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","Constructor","protoProps","staticProps","prototype","_inheritsLoose","subClass","superClass","create","constructor","__proto__","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","_setPrototypeOf","p","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","toString","call","e","_construct","Parent","args","Class","a","push","apply","instance","Function","bind","arguments","_wrapNativeSuper","_cache","Map","undefined","fn","indexOf","TypeError","has","get","set","Wrapper","this","value","CONTEXTS","NODES","Factory","rxcompId","unsubscribe$","Subject","changes$","ReplaySubject","_proto","onInit","onChanges","changes","onView","onDestroy","pushChanges","getContext","module","instances","next","Directive","_Factory","ClassDirective","_this","_Directive","class","keys","_this2","node","classList","forEach","object","split","concat","setAttribute","join","selector","inputs","ModuleError","_Error","Error","ExpressionError","_Error2","error","expression","params","message","name","template","outerHTML","ErrorInterceptorHandler","interceptor","handle","intercept","DefaultErrorHandler","of","ErrorInterceptors","nextError$","errors$","pipe","switchMap","reduceRight","tap","console","EventDirective","event","_getContext","parentInstance","replace","event$","fromEvent","shareReplay","getAttribute","outputFunction","makeFunction","takeUntil","subscribe","resolve","Structure","Component","parse","RESERVED_PROPERTIES","Context","descriptors","_Component","mergeDescriptors","defineProperties","self","ReferenceError","_assertThisInitialized","context","filter","source","properties","getOwnPropertyNames","_loop","shift","hasOwnProperty","getOwnPropertyDescriptor","_len","ForItem","$key","$value","index","count","_Context","even","ForStructure","_Structure","forbegin","document","createComment","parentNode","replaceChild","forend","insertBefore","nextSibling","removeAttribute","token","getExpressionToken","forFunction","iterable","result","isArray","Array","array","total","previous","Math","max","clonedNode","cloneNode","makeInstance","compile","makeInstanceSubscription","removeChild","remove","trim","expressions","map","x","forExpressions","keyValueMatches","match","indexExpressions","HrefDirective","href","href_","IfStructure","ifbegin","ifend","ifFunction","element","InnerHtmlDirective","innerHTML","innerHTML_","JsonComponent","active","onToggle","Pipe","transform","ORDER","Platform","bootstrap","moduleFactory","meta","resolveMeta","imports","querySelector","resolveImportedMeta","nodeInnerHTML","pipes","resolvePipes","factories","resolveFactories","sortFactories","unshift","selectors","unwrapSelectors","assign","declarations","exports","exported","importedPipes","importMeta","pipeFactory","_Array$prototype$conc","_this3","importedFactories","factoryList","sort","b","reduce","c","hosts","getExpressions","matchers","c1","a2","u3","v4","a5","e6","contains","hasAttribute","nodeName","toLowerCase","_this4","factory","excludes","matchSelector","unmatchSelector","includes","included","excluded","PLATFORM_BROWSER","window","isPlatformBrowser","navigator","userAgent","process","versions","Serializer","encode","encoders","encodeJson","decode","decoders","decodeJson","encodeBase64","decodeBase64","circularRef","space","decoded","pool","JSON","stringify","encoded","btoa","Buffer","from","atob","JsonPipe","_Pipe","ID","Module","componentNode","querySelectorsAll","inject","skipSubscription","getParentInstance","makeContext","makeHosts","makeInputs","outputs","makeOutputs","resolveInputsOutputs","parseExpression","expressionFunction","nextError","expressionError","payload","childNodes","child","nodeType","getParsableContextByElement","text","parseTextNode","keepInstance","keepContext","traverseDown","deleteContext","destroy","complete","getInstance","global","getContextByNode","traverseUp","nodeExpressions","parseTextNodeExpression","wholeText","replacedText","nodeValue","textNode","createTextNode","pushFragment","to","fragment","substring","matches","regex","lastIndex","exec","find","getHost","nodeContexts","makeInput","input","_this5","makeOutput","_this6","output$","_this7","output","inputFunction","rx1","parsePipes","parseOptionalChaining","parsePipeParams","func","segments","word","block","t","substr","tokens","rxcompNodeId","id","keepContexts","matchSelectors","results","selectorResult","selectorResults","callback","j","traversePrevious","previousSibling","traverseNext","contexts","current","SrcDirective","src","src_","StyleDirective","style","previousStyle","propertyName","removeProperty","splitted","setProperty","CoreModule","_Module","Browser","_Platform","rxcomp_hydrate_","_meta$node$parentNode","RootComponent","time","TimePipe","options","date","getHours","getMinutes","MultPipe","_Pipe2","mult1","mult2","Number","AppModule"],"mappings":"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","file":"docs/js/test.pipes.min.js","sourcesContent":[null,"import { ReplaySubject, Subject } from 'rxjs';\nimport { IContext, IFactoryMeta } from './types';\n\nexport const CONTEXTS: { [key: number]: IContext } = {};\nexport const NODES: { [key: number]: IContext[] } = {};\n\nexport default class Factory {\n\tstatic meta: IFactoryMeta;\n\trxcompId: number = -1;\n\tunsubscribe$: Subject<void> = new Subject();\n\tchanges$: ReplaySubject<Factory> = new ReplaySubject(1);\n\tonInit(): void { }\n\tonChanges(changes: Factory | Window): void { }\n\tonView(): void { }\n\tonDestroy(): void { }\n\tpushChanges(): void {\n\t\tconst { module } = getContext(this);\n\t\tif (module.instances) {\n\t\t\tthis.changes$.next(this);\n\t\t\tthis.onView();\n\t\t}\n\t}\n\t[key: string]: any; // extensible object\n\tconstructor(...args: any[]) { }\n}\n\nexport function getContext(instance: Factory): IContext {\n\treturn CONTEXTS[instance.rxcompId];\n}\n","import Factory from './factory';\n\nexport default class Directive extends Factory {\n}\n","import Directive from '../core/directive';\nimport { getContext } from '../core/factory';\nimport { IFactoryMeta } from '../core/types';\n\nexport default class ClassDirective extends Directive {\n\tclass: { [key: string]: string } | string | null = '';\n\tkeys: string[] = [];\n\tonInit() {\n\t\tconst { node } = getContext(this);\n\t\tnode.classList.forEach((value: string) => {\n\t\t\tthis.keys.push(value);\n\t\t});\n\t}\n\tonChanges() {\n\t\tconst { node } = getContext(this);\n\t\tlet keys: string[] = [];\n\t\tconst object = this.class;\n\t\tif (typeof object === 'object') {\n\t\t\tfor (let key in object) {\n\t\t\t\tif (object[key]) {\n\t\t\t\t\tkeys.push(key);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (typeof object === 'string') {\n\t\t\tkeys = object.split(/\\s+/);\n\t\t}\n\t\tkeys = keys.concat(this.keys);\n\t\t// console.log(keys);\n\t\tnode.setAttribute('class', keys.join(' '));\n\t\t// console.log('ClassDirective.onChanges', keys);\n\t}\n\tstatic meta: IFactoryMeta = {\n\t\tselector: `[[class]]`,\n\t\tinputs: ['class']\n\t};\n}\n","import { Observable, of, ReplaySubject } from \"rxjs\";\nimport { switchMap, tap } from \"rxjs/operators\";\nimport Factory, { getContext } from \"../core/factory\";\nimport Module from \"../module/module\";\n\nexport class ModuleError extends Error { }\n\nexport class ExpressionError extends Error {\n\tmodule: Module;\n\tinstance: Factory;\n\texpression: string;\n\tparams: any[];\n\ttemplate: string;\n\n\tconstructor(error: Error, module: Module, instance: Factory, expression: string, params: any[]) {\n\t\tconst message: string = `ExpressionError in ${instance.constructor.name} \"${expression}\"\n\t\t${error.message}`;\n\t\tsuper(message);\n\t\tthis.name = error.name;\n\t\t// this.stack = error.stack;\n\t\tthis.module = module;\n\t\tthis.instance = instance;\n\t\tthis.expression = expression;\n\t\tthis.params = params;\n\t\tconst { node } = getContext(instance);\n\t\tthis.template = node.outerHTML;\n\t}\n}\n\nexport interface IErrorHandler {\n\thandle(error: Error): Observable<Error | void>\n}\n\nexport interface IErrorInterceptor {\n\tintercept(error: Error | void, next: IErrorHandler): Observable<Error | void>\n}\n\nexport class ErrorInterceptorHandler implements IErrorHandler {\n\tconstructor(\n\t\tprivate next: IErrorHandler,\n\t\tprivate interceptor: IErrorInterceptor,\n\t) { }\n\thandle(error: Error | void): Observable<Error | void> {\n\t\treturn this.interceptor.intercept(error, this.next);\n\t}\n}\n\nexport class DefaultErrorHandler implements IErrorHandler {\n\thandle(error: Error | void): Observable<Error | void> {\n\t\treturn of(error);\n\t}\n}\n\nexport const ErrorInterceptors: IErrorInterceptor[] = [];\n\nexport const nextError$: ReplaySubject<Error> = new ReplaySubject<Error>(1);\nexport const errors$: Observable<Error | void> = nextError$.pipe(\n\tswitchMap((error: Error) => {\n\t\tconst chain: IErrorHandler = ErrorInterceptors.reduceRight((next: IErrorHandler, interceptor: IErrorInterceptor) => {\n\t\t\treturn new ErrorInterceptorHandler(next, interceptor);\n\t\t}, new DefaultErrorHandler());\n\t\treturn chain.handle(error);\n\t}),\n\ttap((error: Error | void) => {\n\t\tif (error) {\n\t\t\tconsole.error(error);\n\t\t}\n\t}),\n);\n","import { fromEvent, Observable } from 'rxjs';\nimport { shareReplay, takeUntil } from 'rxjs/operators';\nimport Directive from '../core/directive';\nimport { getContext } from '../core/factory';\nimport { IFactoryMeta } from '../core/types';\n\nconst EVENTS = ['mousedown', 'mouseup', 'mousemove', 'click', 'dblclick', 'mouseover', 'mouseout', 'mouseenter', 'mouseleave', 'contextmenu', 'touchstart', 'touchmove', 'touchend', 'keydown', 'keyup', 'input', 'change', 'loaded'];\n\nexport default class EventDirective extends Directive {\n\tevent: string = '';\n\tonInit() {\n\t\tconst { module, node, parentInstance, selector } = getContext(this);\n\t\t// console.log('parentInstance', parentInstance);\n\t\tconst event = this.event = selector.replace(/\\[|\\]|\\(|\\)/g, '');\n\t\tconst event$: Observable<Event> = fromEvent<Event>(node, event).pipe(shareReplay(1));\n\t\tconst expression = node.getAttribute(`(${event})`);\n\t\tif (expression) {\n\t\t\tconst outputFunction = module.makeFunction(expression, ['$event']);\n\t\t\tevent$.pipe(\n\t\t\t\ttakeUntil(this.unsubscribe$)\n\t\t\t).subscribe(event => {\n\t\t\t\tmodule.resolve(outputFunction, parentInstance, event);\n\t\t\t});\n\t\t} else {\n\t\t\tparentInstance[`${event}$`] = event$;\n\t\t}\n\t\t// console.log('EventDirective.onInit', 'selector', selector, 'event', event);\n\t}\n\tstatic meta: IFactoryMeta = {\n\t\tselector: `[(${EVENTS.join(')],[(')})]`,\n\t};\n}\n","import Factory from './factory';\n\nexport default class Structure extends Factory {\n}\n","\nimport Factory, { getContext } from './factory';\n\nexport default class Component extends Factory {\n\n\tpushChanges(): void {\n\t\tconst { module, node } = getContext(this);\n\t\tif (module.instances) {\n\t\t\t// console.log(new Error(`pushChanges ${instance.constructor.name}`).stack);\n\t\t\tthis.changes$.next(this);\n\t\t\t// console.log('Module.parse', instance.constructor.name);\n\t\t\t// parse component text nodes\n\t\t\t/*\n\t\t\tif (this instanceof Context) {\n\t\t\t\tconst instances: Factory[] = module.getChildInstances(node);\n\t\t\t\tconsole.log(node, instances);\n\t\t\t}\n\t\t\t*/\n\t\t\tmodule.parse(node, this);\n\t\t\t// calling onView event\n\t\t\tthis.onView();\n\t\t}\n\t}\n\n}\n","// import { BehaviorSubject, Subject } from 'rxjs';\nimport Component from './component';\nimport Factory, { getContext } from './factory';\n\nconst RESERVED_PROPERTIES = ['constructor', 'rxcompId', 'onInit', 'onChanges', 'onDestroy', 'pushChanges', 'changes$', 'unsubscribe$'];\n\nexport default class Context extends Component {\n\n\tconstructor(parentInstance: Factory, descriptors: { [key: string]: PropertyDescriptor } = {}) {\n\t\tsuper();\n\t\tdescriptors = Context.mergeDescriptors(parentInstance, parentInstance, descriptors);\n\t\tdescriptors = Context.mergeDescriptors(Object.getPrototypeOf(parentInstance), parentInstance, descriptors);\n\t\tObject.defineProperties(this, descriptors);\n\t}\n\n\tpushChanges(): void {\n\t\tconst context = getContext(this);\n\t\tif (!context.keys) {\n\t\t\tcontext.keys = Object.keys(context.parentInstance).filter(key => RESERVED_PROPERTIES.indexOf(key) === -1);\n\t\t\t// console.log(context.keys.join(','));\n\t\t}\n\t\tif (context.module.instances) {\n\t\t\tcontext.keys.forEach(key => {\n\t\t\t\t// console.log('Context', key, context.parentInstance);\n\t\t\t\tthis[key] = context.parentInstance[key];\n\t\t\t});\n\t\t}\n\t\tsuper.pushChanges();\n\t}\n\n\tstatic mergeDescriptors(source: Object, instance: Factory, descriptors: { [key: string]: PropertyDescriptor } = {}): { [key: string]: PropertyDescriptor } {\n\t\tconst properties: string[] = Object.getOwnPropertyNames(source);\n\t\twhile (properties.length) {\n\t\t\tconst key: string = properties.shift() as string;\n\t\t\tif (RESERVED_PROPERTIES.indexOf(key) === -1 && !descriptors.hasOwnProperty(key)) {\n\t\t\t\tconst descriptor: PropertyDescriptor = Object.getOwnPropertyDescriptor(source, key) as PropertyDescriptor;\n\t\t\t\tif (typeof descriptor.value == 'function') {\n\t\t\t\t\tdescriptor.value = (...args: any[]) => {\n\t\t\t\t\t\treturn instance[key].apply(instance, args);\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tdescriptors[key] = descriptor;\n\t\t\t}\n\t\t}\n\t\treturn descriptors;\n\t}\n\n}\n","import Context from '../core/context';\nimport Factory from '../core/factory';\n\nexport default class ForItem extends Context {\n\tindex: number;\n\tcount: number;\n\t[key: string]: any;\n\t// !!! todo: payload options { key, $key, value, $value, index, count }\n\tconstructor(key: string, $key: number | string, value: string, $value: any, index: number, count: number, parentInstance: Factory) {\n\t\t// console.log('ForItem', arguments);\n\t\tsuper(parentInstance);\n\t\t/*\n\t\tsuper(parentInstance, {\n\t\t\t[key]: {\n\t\t\t\tget: function() {\n\t\t\t\t\treturn this.$key;\n\t\t\t\t},\n\t\t\t\tset: function(key) {\n\t\t\t\t\tthis.$key = key;\n\t\t\t\t}\n\t\t\t},\n\t\t\t[value]: {\n\t\t\t\tget: function() {\n\t\t\t\t\treturn this.$value;\n\t\t\t\t},\n\t\t\t\tset: function(value) {\n\t\t\t\t\tthis.$value = value;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\t*/\n\t\tthis[key] = $key;\n\t\tthis[value] = $value;\n\t\tthis.index = index;\n\t\tthis.count = count;\n\t}\n\tget first(): boolean { return this.index === 0; }\n\tget last(): boolean { return this.index === this.count - 1; }\n\tget even(): boolean { return this.index % 2 === 0; }\n\tget odd(): boolean { return !this.even; }\n}\n","import Factory, { getContext } from '../core/factory';\nimport Structure from '../core/structure';\nimport { ExpressionFunction, IComment, IContext, IElement, IExpressionToken, IFactoryMeta } from '../core/types';\nimport Module from '../module/module';\nimport ForItem from './for.item';\n\nexport default class ForStructure extends Structure {\n\tinstances: Factory[] = [];\n\tforend?: IComment;\n\ttoken?: IExpressionToken;\n\tforFunction?: ExpressionFunction;\n\tonInit() {\n\t\tconst { module, node } = getContext(this);\n\t\tconst forbegin: IComment = document.createComment(`*for begin`);\n\t\tforbegin.rxcompId = node.rxcompId;\n\t\tnode.parentNode!.replaceChild(forbegin, node);\n\t\tconst forend: IComment = this.forend = document.createComment(`*for end`);\n\t\tforbegin.parentNode!.insertBefore(forend, forbegin.nextSibling);\n\t\tconst expression: string = node.getAttribute('*for')!;\n\t\tnode.removeAttribute('*for');\n\t\tconst token = this.token = this.getExpressionToken(expression);\n\t\tthis.forFunction = module.makeFunction(token.iterable);\n\t}\n\tonChanges(changes: Factory | Window) {\n\t\tconst context: IContext = getContext(this);\n\t\tconst module: Module = context.module;\n\t\tconst node: IElement = context.node;\n\t\t// resolve\n\t\tconst token: IExpressionToken = this.token!;\n\t\tlet result = module.resolve(this.forFunction!, changes, this) || [];\n\t\tconst isArray = Array.isArray(result);\n\t\tconst array: any[] = isArray ? result : Object.keys(result);\n\t\tconst total: number = array.length;\n\t\tconst previous: number = this.instances.length;\n\t\tfor (let i: number = 0; i < Math.max(previous, total); i++) {\n\t\t\tif (i < total) {\n\t\t\t\tconst key: number | string = isArray ? i : array[i];\n\t\t\t\tconst value: any = isArray ? array[key as number] : result[key];\n\t\t\t\tif (i < previous) {\n\t\t\t\t\t// update\n\t\t\t\t\tconst instance: Factory = this.instances[i];\n\t\t\t\t\tinstance[token.key] = key;\n\t\t\t\t\tinstance[token.value] = value;\n\t\t\t\t\t/*\n\t\t\t\t\tif (!nextSibling) {\n\t\t\t\t\t\tconst context = getContext(instance);\n\t\t\t\t\t\tconst node = context.node;\n\t\t\t\t\t\tthis.forend.parentNode.insertBefore(node, this.forend);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnextSibling = nextSibling.nextSibling;\n\t\t\t\t\t}\n\t\t\t\t\t*/\n\t\t\t\t} else {\n\t\t\t\t\t// create\n\t\t\t\t\tconst clonedNode: IElement = node.cloneNode(true) as IElement;\n\t\t\t\t\tdelete clonedNode.rxcompId;\n\t\t\t\t\tthis.forend!.parentNode!.insertBefore(clonedNode, this.forend!);\n\t\t\t\t\t// !!! todo: check context.parentInstance\n\t\t\t\t\tconst args = [token.key, key, token.value, value, i, total, context.parentInstance];\n\t\t\t\t\t// console.log('ForStructure.makeInstance.ForItem');\n\t\t\t\t\tconst skipSubscription = true;\n\t\t\t\t\tconst instance = module.makeInstance(clonedNode, ForItem, context.selector, context.parentInstance, args, undefined, skipSubscription);\n\t\t\t\t\t// console.log('ForStructure.instance.created', instance);\n\t\t\t\t\tif (instance) {\n\t\t\t\t\t\t// const forItemContext = getContext(instance);\n\t\t\t\t\t\t// console.log('ForStructure', clonedNode, forItemContext.instance.constructor.name);\n\t\t\t\t\t\t// module.compile(clonedNode, forItemContext.instance);\n\t\t\t\t\t\t// const instances: Factory[];\n\t\t\t\t\t\tmodule.compile(clonedNode, instance);\n\t\t\t\t\t\tmodule.makeInstanceSubscription(instance, context.parentInstance);\n\t\t\t\t\t\t// console.log('ForStructure.instance.compiled', instances);\n\t\t\t\t\t\t// nextSibling = clonedNode.nextSibling;\n\t\t\t\t\t\tthis.instances.push(instance);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// remove\n\t\t\t\tconst instance: Factory = this.instances[i];\n\t\t\t\tconst { node } = getContext(instance);\n\t\t\t\tnode.parentNode!.removeChild(node);\n\t\t\t\tmodule.remove(node);\n\t\t\t}\n\t\t}\n\t\tthis.instances.length = array.length;\n\t\t// console.log('ForStructure', this.instances, token);\n\t}\n\tgetExpressionToken(expression: string): IExpressionToken {\n\t\tif (expression === null) {\n\t\t\tthrow new Error('invalid for');\n\t\t}\n\t\tif (expression.trim().indexOf('let ') === -1 || expression.trim().indexOf(' of ') === -1) {\n\t\t\tthrow new Error('invalid for');\n\t\t}\n\t\tconst expressions: string[] = expression.split(';').map(x => x.trim()).filter(x => x !== '');\n\t\tconst forExpressions: string[] = expressions[0].split(' of ').map(x => x.trim());\n\t\tlet value: string = forExpressions[0].replace(/\\s*let\\s*/, '');\n\t\tconst iterable: string = forExpressions[1];\n\t\tlet key: string = 'index';\n\t\tconst keyValueMatches: RegExpMatchArray | null = value.match(/\\[(.+)\\s*,\\s*(.+)\\]/);\n\t\tif (keyValueMatches) {\n\t\t\tkey = keyValueMatches[1];\n\t\t\tvalue = keyValueMatches[2];\n\t\t}\n\t\tif (expressions.length > 1) {\n\t\t\tconst indexExpressions: string[] = expressions[1].split(/\\s*let\\s*|\\s*=\\s*index/).map(x => x.trim());\n\t\t\tif (indexExpressions.length === 3) {\n\t\t\t\tkey = indexExpressions[1];\n\t\t\t}\n\t\t}\n\t\treturn { key, value, iterable };\n\t}\n\tstatic meta: IFactoryMeta = {\n\t\tselector: '[*for]',\n\t};\n}\n","import Directive from '../core/directive';\nimport { getContext } from '../core/factory';\nimport { IFactoryMeta } from '../core/types';\n\nexport default class HrefDirective extends Directive {\n\tset href(href: string) {\n\t\tif (this.href_ !== href) {\n\t\t\tthis.href_ = href;\n\t\t\tconst { node } = getContext(this);\n\t\t\thref ? node.setAttribute('href', href) : node.removeAttribute('href');\n\t\t}\n\t}\n\tget href(): string {\n\t\treturn this.href_;\n\t}\n\tstatic meta: IFactoryMeta = {\n\t\tselector: '[[href]]',\n\t\tinputs: ['href'],\n\t};\n}\n\n","import Factory, { getContext } from '../core/factory';\nimport Structure from '../core/structure';\nimport { ExpressionFunction, IComment, IElement, IFactoryMeta } from '../core/types';\n\nexport default class IfStructure extends Structure {\n\tifend?: IComment;\n\tifFunction?: ExpressionFunction;\n\tclonedNode?: IElement;\n\telement?: IElement;\n\tonInit() {\n\t\tconst { module, node } = getContext(this);\n\t\tconst ifbegin: IComment = this.ifbegin = document.createComment(`*if begin`);\n\t\tifbegin.rxcompId = node.rxcompId;\n\t\tnode.parentNode!.replaceChild(ifbegin, node);\n\t\tconst ifend = this.ifend = document.createComment(`*if end`);\n\t\tifbegin.parentNode!.insertBefore(ifend, ifbegin.nextSibling);\n\t\tconst expression = node.getAttribute('*if');\n\t\tthis.ifFunction = module.makeFunction(expression!);\n\t\tconst clonedNode = node.cloneNode(true) as IElement;\n\t\tclonedNode.removeAttribute('*if');\n\t\tthis.clonedNode = clonedNode;\n\t\tthis.element = clonedNode.cloneNode(true) as IElement;\n\t\t// console.log('IfStructure.expression', expression);\n\t}\n\tonChanges(changes: Factory | Window) {\n\t\tconst { module } = getContext(this);\n\t\t// console.log('IfStructure.onChanges', changes);\n\t\tconst value = module.resolve(this.ifFunction!, changes, this);\n\t\tconst element: IElement = this.element!;\n\t\tif (value) {\n\t\t\tif (!element.parentNode) {\n\t\t\t\tconst ifend = this.ifend!;\n\t\t\t\tifend.parentNode!.insertBefore(element, ifend);\n\t\t\t\tmodule.compile(element);\n\t\t\t}\n\t\t} else {\n\t\t\tif (element.parentNode) {\n\t\t\t\tmodule.remove(element, this);\n\t\t\t\telement.parentNode.removeChild(element);\n\t\t\t\tthis.element = this.clonedNode!.cloneNode(true) as IElement;\n\t\t\t}\n\t\t}\n\t}\n\tstatic meta: IFactoryMeta = {\n\t\tselector: '[*if]',\n\t};\n}\n","import Directive from '../core/directive';\nimport { getContext } from '../core/factory';\nimport { IFactoryMeta } from '../core/types';\n\nexport default class InnerHtmlDirective extends Directive {\n\tset innerHTML(innerHTML: string) {\n\t\tif (this.innerHTML_ !== innerHTML) {\n\t\t\tthis.innerHTML_ = innerHTML;\n\t\t\tconst { node } = getContext(this);\n\t\t\tnode.innerHTML = innerHTML == undefined ? '' : innerHTML; // !!! keep == loose equality\n\t\t}\n\t}\n\tget innerHTML(): string {\n\t\treturn this.innerHTML_;\n\t}\n\tstatic meta: IFactoryMeta = {\n\t\tselector: `[innerHTML]`,\n\t\tinputs: ['innerHTML'],\n\t};\n}\n","import Component from '../core/component';\nimport { IFactoryMeta } from '../core/types';\n\nexport default class JsonComponent extends Component {\n\tactive: boolean = false;\n\tonToggle() {\n\t\tthis.active = !this.active;\n\t\tthis.pushChanges();\n\t}\n\tstatic meta: IFactoryMeta = {\n\t\tselector: 'json-component',\n\t\tinputs: ['item'],\n\t\ttemplate: /* html */`\n\t\t<div class=\"rxc-block\">\n\t\t\t<div class=\"rxc-head\">\n\t\t\t\t<span class=\"rxc-head__title\" (click)=\"onToggle()\">\n\t\t\t\t\t<span *if=\"!active\">+ json </span>\n\t\t\t\t\t<span *if=\"active\">- json </span>\n\t\t\t\t\t<span [innerHTML]=\"item\"></span>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t<ul class=\"rxc-list\" *if=\"active\">\n\t\t\t\t<li class=\"rxc-list__item\">\n\t\t\t\t\t<span class=\"rxc-list__value\" [innerHTML]=\"item | json\"></span>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</div>`,\n\t};\n}\n","import { IPipeMeta } from \"./types\";\n\nexport default class Pipe {\n\tstatic transform(value: any): any {\n\t\treturn value;\n\t}\n\tstatic meta: IPipeMeta;\n}\n","import Component from '../core/component';\nimport Directive from '../core/directive';\nimport Factory from '../core/factory';\nimport Pipe from '../core/pipe';\nimport Structure from '../core/structure';\nimport { FactoryList, IElement, IModuleParsedImportedMeta, IModuleParsedMeta, ISelectorResult, MatchFunction, PipeList, PipeMap, SelectorFunction } from '../core/types';\nimport { ModuleError } from '../error/error';\nimport Module from '../module/module';\n\nconst ORDER: FactoryList = [Structure, Component, Directive];\n\nexport default class Platform {\n\n\t/**\n\t * @param moduleFactory\n\t * @description This method returns an uncompiled module\n\t */\n\tstatic bootstrap(moduleFactory?: typeof Module): Module {\n\t\tif (!moduleFactory) {\n\t\t\tthrow new ModuleError('missing moduleFactory');\n\t\t}\n\t\tif (!moduleFactory.meta) {\n\t\t\tthrow new ModuleError('missing moduleFactory meta');\n\t\t}\n\t\tif (!moduleFactory.meta.bootstrap) {\n\t\t\tthrow new ModuleError('missing bootstrap');\n\t\t}\n\t\tif (!moduleFactory.meta.bootstrap.meta) {\n\t\t\tthrow new ModuleError('missing bootstrap meta');\n\t\t}\n\t\tif (!moduleFactory.meta.bootstrap.meta.selector) {\n\t\t\tthrow new ModuleError('missing bootstrap meta selector');\n\t\t}\n\t\tconst meta: IModuleParsedMeta = this.resolveMeta(moduleFactory!);\n\t\tconst module: Module = new moduleFactory();\n\t\tmodule.meta = meta;\n\t\tmeta.imports.forEach((moduleFactory: typeof Module) => {\n\t\t\tmoduleFactory.prototype.constructor.call(module);\n\t\t});\n\t\t// const instances = module.compile(meta.node, window);\n\t\t// module.instances = instances;\n\t\t// const root = instances[0];\n\t\t// root.pushChanges();\n\t\treturn module;\n\t}\n\n\tprotected static querySelector(selector: string): IElement | null {\n\t\treturn document.querySelector(selector);\n\t}\n\n\tprotected static resolveMeta(moduleFactory: typeof Module): IModuleParsedMeta {\n\t\tconst meta: IModuleParsedImportedMeta = this.resolveImportedMeta(moduleFactory);\n\t\tconst bootstrap: typeof Factory = moduleFactory.meta.bootstrap!;\n\t\tconst node = this.querySelector(bootstrap.meta.selector!);\n\t\tif (!node) {\n\t\t\tthrow new ModuleError(`missing node ${bootstrap.meta.selector}`);\n\t\t}\n\t\tconst nodeInnerHTML = node.innerHTML;\n\t\tconst pipes = this.resolvePipes(meta);\n\t\tconst factories = this.resolveFactories(meta);\n\t\tthis.sortFactories(factories);\n\t\tfactories.unshift(bootstrap);\n\t\tconst selectors = this.unwrapSelectors(factories);\n\t\treturn { factories, pipes, selectors, bootstrap, node, nodeInnerHTML, imports: moduleFactory.meta.imports || [] };\n\t}\n\n\tprotected static resolveImportedMeta(moduleFactory: typeof Module): IModuleParsedImportedMeta {\n\t\tconst meta: IModuleParsedImportedMeta = Object.assign({\n\t\t\timports: [],\n\t\t\tdeclarations: [],\n\t\t\tpipes: [],\n\t\t\texports: []\n\t\t}, moduleFactory.meta);\n\t\tmeta.imports = (moduleFactory.meta.imports || []).map(moduleFactory => this.resolveImportedMeta(moduleFactory));\n\t\treturn meta;\n\t}\n\n\tprotected static resolvePipes(meta: IModuleParsedImportedMeta, exported?: boolean): PipeMap {\n\t\tconst importedPipes: PipeMap[] = meta.imports.map((importMeta: IModuleParsedImportedMeta) => this.resolvePipes(importMeta, true));\n\t\tconst pipes: PipeMap = {};\n\t\tconst pipeList: PipeList = (exported ? meta.exports : meta.declarations).filter((x): x is typeof Pipe => x.prototype instanceof Pipe);\n\t\tpipeList.forEach(pipeFactory => pipes[pipeFactory.meta.name] = pipeFactory);\n\t\treturn Object.assign({}, ...importedPipes, pipes);\n\t}\n\n\tprotected static resolveFactories(meta: IModuleParsedImportedMeta, exported?: boolean): FactoryList {\n\t\tconst importedFactories: FactoryList[] = meta.imports.map((importMeta: any) => this.resolveFactories(importMeta, true));\n\t\tconst factoryList: FactoryList = (exported ? meta.exports : meta.declarations).filter((x): x is typeof Factory => x.prototype instanceof Factory);\n\t\treturn Array.prototype.concat.call(factoryList, ...importedFactories);\n\t}\n\n\tprotected static sortFactories(factories: FactoryList): void {\n\t\tfactories.sort((a, b) => {\n\t\t\tconst ai = ORDER.reduce((p, c, i) => a.prototype instanceof c ? i : p, -1);\n\t\t\tconst bi = ORDER.reduce((p, c, i) => b.prototype instanceof c ? i : p, -1);\n\t\t\t// return ai - bi;\n\t\t\tconst o = ai - bi;\n\t\t\tif (o === 0) {\n\t\t\t\treturn (a.meta.hosts ? 1 : 0) - (b.meta.hosts ? 1 : 0);\n\t\t\t}\n\t\t\treturn o;\n\t\t});\n\t}\n\n\tprotected static getExpressions(selector: string): MatchFunction[] {\n\t\tlet matchers: ((node: HTMLElement) => boolean)[] = [];\n\t\tselector.replace(/\\.([\\w\\-\\_]+)|\\[(.+?\\]*)(\\=)(.*?)\\]|\\[(.+?\\]*)\\]|([\\w\\-\\_]+)/g, function (value: string, c1, a2, u3, v4, a5, e6) {\n\t\t\tif (c1) {\n\t\t\t\tmatchers.push(function (node) {\n\t\t\t\t\treturn node.classList.contains(c1);\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (a2) {\n\t\t\t\tmatchers.push(function (node) {\n\t\t\t\t\treturn (node.hasAttribute(a2) && node.getAttribute(a2) === v4) ||\n\t\t\t\t\t\t(node.hasAttribute(`[${a2}]`) && node.getAttribute(`[${a2}]`) === v4);\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (a5) {\n\t\t\t\tmatchers.push(function (node) {\n\t\t\t\t\treturn node.hasAttribute(a5) || node.hasAttribute(`[${a5}]`);\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (e6) {\n\t\t\t\tmatchers.push(function (node) {\n\t\t\t\t\treturn node.nodeName.toLowerCase() === e6.toLowerCase();\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn '';\n\t\t});\n\t\treturn matchers;\n\t}\n\n\tprotected static unwrapSelectors(factories: FactoryList): SelectorFunction[] {\n\t\tconst selectors: SelectorFunction[] = [];\n\t\tfactories.forEach((factory: typeof Factory) => {\n\t\t\tif (factory.meta && factory.meta.selector) {\n\t\t\t\tfactory.meta.selector.split(',').forEach((selector: string) => {\n\t\t\t\t\tselector = selector.trim();\n\t\t\t\t\tlet excludes: MatchFunction[] = [];\n\t\t\t\t\tconst matchSelector = selector.replace(/\\:not\\((.+?)\\)/g, (value, unmatchSelector) => {\n\t\t\t\t\t\texcludes = this.getExpressions(unmatchSelector);\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t});\n\t\t\t\t\tconst includes: MatchFunction[] = this.getExpressions(matchSelector);\n\t\t\t\t\tselectors.push((node) => {\n\t\t\t\t\t\tconst included = includes.reduce((p, match) => {\n\t\t\t\t\t\t\treturn p && match(node);\n\t\t\t\t\t\t}, true);\n\t\t\t\t\t\tconst excluded = excludes.reduce((p, match) => {\n\t\t\t\t\t\t\treturn p || match(node);\n\t\t\t\t\t\t}, false);\n\t\t\t\t\t\tif (included && !excluded) {\n\t\t\t\t\t\t\treturn { node, factory, selector } as ISelectorResult;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\treturn selectors;\n\t}\n\n}\n\n/* global window self */\nexport const PLATFORM_BROWSER = typeof window !== 'undefined' && typeof window.document !== 'undefined';\n\n/* eslint-disable no-undef */\nexport const PLATFORM_JS_DOM = (typeof window !== 'undefined' && window.name === 'nodejs') || (typeof navigator !== 'undefined' && navigator.userAgent.includes('Node.js')) || (typeof navigator !== 'undefined' && navigator.userAgent.includes('jsdom'));\n/* eslint-enable no-undef */\n\nexport const PLATFORM_NODE = typeof process !== 'undefined' && process.versions != null && process.versions.node != null;\n\n/* eslint-disable no-restricted-globals */\nexport const PLATFORM_WEB_WORKER = typeof self === 'object' && self.constructor && self.constructor.name === 'DedicatedWorkerGlobalScope';\n\nexport const isPlatformServer = PLATFORM_NODE;\nexport const isPlatformBrowser = !PLATFORM_NODE && PLATFORM_BROWSER;\nexport const isPlatformWorker = PLATFORM_WEB_WORKER;\n","import { isPlatformBrowser } from \"../../platform\";\n\n/**\n * @example Serializer.encode(value, [encodeJson, encodeUriComponent, encodeBase64]);\n * @example Serializer.decode(value, [decodeBase64, decodeUriComponent, decodeJson]);\n */\nexport default class Serializer {\n\tstatic encode<T>(value: any, encoders: ((from: any) => any)[]): T;\n\tstatic encode(value: any, encoders: ((from: any) => any)[] = [encodeJson]): any {\n\t\treturn encoders.reduce((p, c) => c(p), value);\n\t}\n\n\tstatic decode<T>(value: any, decoders: ((from: any) => any)[]): T;\n\tstatic decode(value: any, decoders: ((from: any) => any)[] = [decodeJson]): any {\n\t\treturn decoders.reduce((p, c) => c(p), value);\n\t}\n\n\tstatic encodeJson<T>(value: any): T;\n\tstatic encodeJson(value: any): any {\n\t\treturn this.encode(value, [encodeJson]);\n\t}\n\n\tstatic decodeJson<T>(value: any): T;\n\tstatic decodeJson(value: any): any {\n\t\treturn this.decode(value, [decodeJson]);\n\t}\n\n\tstatic encodeBase64<T>(value: any): T;\n\tstatic encodeBase64(value: any): any {\n\t\treturn this.encode(value, [encodeJson, encodeBase64]);\n\t}\n\n\tstatic decodeBase64<T>(value: any): T;\n\tstatic decodeBase64(value: any): any {\n\t\treturn this.decode(value, [decodeBase64, decodeJson]);\n\t}\n}\n\nexport function encodeJson(value: any, circularRef?: any, space?: string | number): string {\n\tlet decoded: any;\n\ttry {\n\t\t// const pool: Map<any, boolean> = new Map();\n\t\tconst pool: any[] = [];\n\t\tconst json: string = JSON.stringify(value, function (key, value) {\n\t\t\tif (typeof value === 'object' && value != null) {\n\t\t\t\t// if (pool.has(value)) {\n\t\t\t\tif (pool.indexOf(value) !== -1) {\n\t\t\t\t\t// console.warn(`Serializer.encodeJson.error`, `circular reference found, discard key \"${key}\"`);\n\t\t\t\t\treturn circularRef;\n\t\t\t\t}\n\t\t\t\tpool.push(value);\n\t\t\t\t// pool.set(value, true);\n\t\t\t}\n\t\t\treturn value;\n\t\t}, space);\n\t\tdecoded = json;\n\t} catch (error) {\n\t\t// console.warn(`Serializer.encodeJson.error`, value, error);\n\t}\n\treturn decoded;\n}\n\nexport function encodeJsonWithOptions(circularRef?: any, space?: string | number): (value: any) => string {\n\treturn (value: any) => encodeJson(value, circularRef, space);\n}\n\nexport function decodeJson(value: string): any {\n\tlet decoded: any;\n\tif (value) {\n\t\ttry {\n\t\t\tdecoded = JSON.parse(value);\n\t\t} catch (error) {\n\t\t\t// console.warn(`Serializer.decodeJson.error`, value, error);\n\t\t}\n\t}\n\treturn decoded;\n}\n\nexport function encodeBase64(value: string): string {\n\tlet encoded: string;\n\ttry {\n\t\tencoded = isPlatformBrowser ? btoa(value) : Buffer.from(value).toString('base64');\n\t} catch (error) {\n\t\tencoded = value;\n\t}\n\treturn encoded;\n}\n\nexport function decodeBase64(value: string): string {\n\tlet decoded: string;\n\ttry {\n\t\tdecoded = isPlatformBrowser ? atob(value) : Buffer.from(value, 'base64').toString();\n\t} catch (error) {\n\t\tdecoded = value;\n\t}\n\treturn decoded;\n}\n","import Pipe from '../core/pipe';\nimport { IPipeMeta } from '../core/types';\nimport Serializer, { encodeJsonWithOptions } from '../platform/common/serializer/serializer';\n\nexport default class JsonPipe extends Pipe {\n\tstatic transform(value: any): string | undefined {\n\t\treturn Serializer.encode(value, [encodeJsonWithOptions('#ref', 2)]);\n\t}\n\tstatic meta: IPipeMeta = {\n\t\tname: 'json',\n\t};\n}\n","import { Observable, Subject } from 'rxjs';\nimport { takeUntil, tap } from 'rxjs/operators';\nimport Component from '../core/component';\nimport Context from '../core/context';\nimport Factory, { CONTEXTS, getContext, NODES } from '../core/factory';\nimport Structure from '../core/structure';\nimport { ExpressionFunction, IContext, IElement, IFactoryMeta, IModuleMeta, IModuleParsedMeta, ISelectorResult, IText, SelectorFunction } from '../core/types';\nimport { ExpressionError, nextError$ } from '../error/error';\nimport { isPlatformBrowser } from '../platform/platform';\n\nlet ID: number = 0;\n\nexport default class Module {\n\tmeta?: IModuleParsedMeta;\n\tinstances?: Factory[];\n\tunsubscribe$: Subject<void> = new Subject();\n\tstatic forRoot?: (...args: any[]) => typeof Module;\n\tpublic compile(node: IElement, parentInstance?: Factory | Window): Factory[] {\n\t\tlet componentNode: IElement;\n\t\tconst instances: Factory[] = Module.querySelectorsAll(node, this.meta!.selectors, []).map((match: ISelectorResult) => {\n\t\t\tif (componentNode && componentNode !== match.node) {\n\t\t\t\tparentInstance = undefined;\n\t\t\t}\n\t\t\tconst instance: Factory | undefined = this.makeInstance(match.node, match.factory, match.selector, parentInstance);\n\t\t\tif (match.factory.prototype instanceof Component) {\n\t\t\t\tcomponentNode = match.node;\n\t\t\t}\n\t\t\treturn instance;\n\t\t}).filter((x): x is Factory => x !== undefined);\n\t\t// instances.forEach(x => x.onInit());\n\t\t// console.log('compile', instances, node, parentInstance);\n\t\treturn instances;\n\t}\n\tpublic makeInstance(node: IElement, factory: typeof Factory, selector: string, parentInstance?: Factory | Window, args?: any[], inject?: { [key: string]: any }, skipSubscription: boolean = false): Factory | undefined {\n\t\tif (parentInstance || node.parentNode) {\n\t\t\tconst meta: IFactoryMeta = factory.meta;\n\t\t\t// collect parentInstance scope\n\t\t\tparentInstance = parentInstance || this.getParentInstance(node.parentNode);\n\t\t\tif (!parentInstance) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\t// creating factory instance\n\t\t\tconst instance = new factory(...(args || []));\n\t\t\t// injecting custom properties\n\t\t\tif (inject) {\n\t\t\t\tObject.keys(inject).forEach(key => {\n\t\t\t\t\t// console.log('Module.makeInstance', key, inject[key]);\n\t\t\t\t\tObject.defineProperty(instance, key, {\n\t\t\t\t\t\tvalue: inject[key],\n\t\t\t\t\t\tconfigurable: false,\n\t\t\t\t\t\tenumerable: false,\n\t\t\t\t\t\twritable: true,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t\t// creating instance context\n\t\t\tconst context = Module.makeContext(this, instance, parentInstance, node, factory, selector);\n\t\t\t// creating component input and outputs\n\t\t\tif (!(instance instanceof Context)) {\n\t\t\t\tthis.makeHosts(meta, instance, node);\n\t\t\t\tcontext.inputs = this.makeInputs(meta, instance);\n\t\t\t\tcontext.outputs = this.makeOutputs(meta, instance);\n\t\t\t\tif (parentInstance instanceof Factory) {\n\t\t\t\t\tthis.resolveInputsOutputs(instance, parentInstance);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// calling onInit event\n\t\t\tinstance.onInit();\n\t\t\t// subscribe to parent changes\n\t\t\tif (!skipSubscription) {\n\t\t\t\tthis.makeInstanceSubscription(instance, parentInstance);\n\t\t\t}\n\t\t\treturn instance;\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t}\n\tpublic makeInstanceSubscription(instance: Factory, parentInstance?: Factory | Window): void {\n\t\t// subscribe to parent changes\n\t\tif (parentInstance instanceof Factory) {\n\t\t\tparentInstance.changes$.pipe(\n\t\t\t\t// filter(() => node.parentNode),\n\t\t\t\t// debounceTime(1),\n\t\t\t\t/*\n\t\t\t\tdistinctUntilChanged(function(prev, curr) {\n\t\t\t\t\t// console.log(isComponent, context.inputs);\n\t\t\t\t\tif (isComponent && meta && Object.keys(context.inputs).length === 0) {\n\t\t\t\t\t\treturn true; // same\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t\t*/\n\t\t\t\ttakeUntil(instance.unsubscribe$)\n\t\t\t).subscribe((changes: Factory | Window) => {\n\t\t\t\t// console.log('Module.makeInstanceSubscription.changes', instance);\n\t\t\t\t// resolve component input outputs\n\t\t\t\tif (!(instance instanceof Context)) {\n\t\t\t\t\tthis.resolveInputsOutputs(instance, changes);\n\t\t\t\t}\n\t\t\t\t// calling onChanges event with changes\n\t\t\t\tinstance.onChanges(changes);\n\t\t\t\t// push instance changes for subscribers\n\t\t\t\tinstance.pushChanges();\n\t\t\t});\n\t\t}\n\t}\n\tpublic makeFunction(expression: string, params: string[] = ['$instance']): ExpressionFunction {\n\t\tif (expression) {\n\t\t\texpression = Module.parseExpression(expression);\n\t\t\tconst args: string = params.join(',');\n\t\t\tconst expressionFunction: string = `with(this) {\n\t\t\t\treturn (function (${args}, $$module) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst $$pipes = $$module.meta.pipes;\n\t\t\t\t\t\treturn ${expression};\n\t\t\t\t\t} catch(error) {\n\t\t\t\t\t\t$$module.nextError(error, this, ${JSON.stringify(expression)}, arguments);\n\t\t\t\t\t}\n\t\t\t\t}.bind(this)).apply(this, arguments);\n\t\t\t}`;\n\t\t\t// console.log('Module.makeFunction.expressionFunction', expressionFunction);\n\t\t\tconst expression_func: ExpressionFunction = new Function(expressionFunction) as ExpressionFunction;\n\t\t\t// console.log(this, $$module, $$pipes, \"${expression}\");\n\t\t\t// console.log(expression_func);\n\t\t\treturn expression_func;\n\t\t} else {\n\t\t\treturn () => { return null; };\n\t\t}\n\t}\n\tpublic nextError(error: Error, instance: Factory, expression: string, params: any[]): void {\n\t\tconst expressionError: ExpressionError = new ExpressionError(error, this, instance, expression, params);\n\t\tnextError$.next(expressionError);\n\t}\n\tpublic resolve(expression: ExpressionFunction, parentInstance: Factory | Window, payload: any): any {\n\t\t// console.log('Module.resolve', expression, parentInstance, payload, getContext);\n\t\treturn expression.apply(parentInstance, [payload, this]);\n\t}\n\tpublic parse(node: HTMLElement, instance: Factory): void {\n\t\tfor (let i: number = 0; i < node.childNodes.length; i++) {\n\t\t\tconst child: ChildNode = node.childNodes[i];\n\t\t\tif (child.nodeType === 1) {\n\t\t\t\tconst element: HTMLElement = child as HTMLElement;\n\t\t\t\tconst context: IContext | undefined = getParsableContextByElement(element);\n\t\t\t\tif (!context) {\n\t\t\t\t\tthis.parse(element, instance);\n\t\t\t\t}\n\t\t\t\t// else { console.log('Module.parse', element, context.instance); }\n\t\t\t} else if (child.nodeType === 3) {\n\t\t\t\tconst text: IText = child as IText;\n\t\t\t\t/*\n\t\t\t\tif (text.nodeValue!.trim() !== '') {\n\t\t\t\t\t// console.log('Module.parse', text.nodeValue, instance);\n\t\t\t\t}\n\t\t\t\t*/\n\t\t\t\tthis.parseTextNode(text, instance);\n\t\t\t}\n\t\t}\n\t}\n\tpublic remove(node: Node, keepInstance?: Factory): Node {\n\t\tconst keepContext: IContext | undefined = keepInstance ? getContext(keepInstance) : undefined;\n\t\tModule.traverseDown(node, (node: Node) => {\n\t\t\tconst rxcompId: number | undefined = (node as IElement).rxcompId;\n\t\t\tif (rxcompId) {\n\t\t\t\tconst keepContexts: IContext[] = Module.deleteContext(rxcompId, keepContext);\n\t\t\t\tif (keepContexts.length === 0) {\n\t\t\t\t\tdelete (node as IElement).rxcompId;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn node;\n\t}\n\tpublic destroy(): void {\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t\tthis.remove(this.meta!.node);\n\t\tthis.meta!.node.innerHTML = this.meta!.nodeInnerHTML;\n\t}\n\tprotected makeContext(instance: Factory, parentInstance: Factory | Window, node: IElement, selector: string): IContext {\n\t\tconst context: IContext = Module.makeContext(this, instance, parentInstance, node, instance.constructor as typeof Factory, selector);\n\t\t// console.log('Module.makeContext', context, context.instance, context.node);\n\t\treturn context;\n\t}\n\tprotected getInstance(node: HTMLElement | Document): Factory | Window | undefined {\n\t\tif (node === document) {\n\t\t\treturn (isPlatformBrowser ? window : global) as Window;\n\t\t}\n\t\tconst context: IContext | undefined = getContextByNode(node as HTMLElement);\n\t\tif (context) {\n\t\t\treturn context.instance;\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t}\n\tprotected getParentInstance(node: Node | null): Factory | Window {\n\t\treturn Module.traverseUp(node, (node: Node) => {\n\t\t\treturn this.getInstance(node as HTMLElement);\n\t\t});\n\t}\n\tprotected parseTextNode(node: IText, instance: Factory): void {\n\t\tlet expressions: (ExpressionFunction | string)[] | undefined = node.nodeExpressions;\n\t\tif (!expressions) {\n\t\t\texpressions = this.parseTextNodeExpression(node.wholeText);\n\t\t}\n\t\tif (expressions.length) {\n\t\t\tconst replacedText: string = expressions.reduce((p: string, c: ExpressionFunction | string) => {\n\t\t\t\tlet text: string;\n\t\t\t\tif (typeof c === 'function') { // instanceOf ExpressionFunction ?;\n\t\t\t\t\t// console.log('Module.parseTextNode', c, instance);\n\t\t\t\t\ttext = this.resolve(c as ExpressionFunction, instance, instance);\n\t\t\t\t\tif (text == undefined) { // !!! keep == loose equality\n\t\t\t\t\t\ttext = '';\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\ttext = c;\n\t\t\t\t}\n\t\t\t\treturn p + text;\n\t\t\t}, '');\n\t\t\tif (node.nodeValue !== replacedText) {\n\t\t\t\tconst textNode: IText = document.createTextNode(replacedText) as IText;\n\t\t\t\ttextNode.nodeExpressions = expressions;\n\t\t\t\tnode.parentNode!.replaceChild(textNode, node);\n\t\t\t}\n\t\t} else {\n\t\t\tnode.nodeExpressions = expressions;\n\t\t}\n\t}\n\tprotected pushFragment(nodeValue: string, from: number, to: number, expressions: (ExpressionFunction | string)[]): void {\n\t\tconst fragment: string = nodeValue.substring(from, to);\n\t\texpressions.push(fragment);\n\t}\n\tprotected parseTextNodeExpression(nodeValue: string): (ExpressionFunction | string)[] {\n\t\tconst expressions: (ExpressionFunction | string)[] = [];\n\t\tconst regex: RegExp = /\\{{2}((([^{}])|(\\{([^{}]|(\\{.*?\\}))+?\\}))*?)\\}{2}/g;\n\t\tlet lastIndex: number = 0,\n\t\t\tmatches: RegExpExecArray | null;\n\t\twhile ((matches = regex.exec(nodeValue)) !== null) {\n\t\t\tconst index: number = regex.lastIndex - matches[0].length;\n\t\t\tif (index > lastIndex) {\n\t\t\t\tthis.pushFragment(nodeValue, index, lastIndex, expressions);\n\t\t\t}\n\t\t\tlastIndex = regex.lastIndex;\n\t\t\tconst expression: ExpressionFunction = this.makeFunction(matches[1]);\n\t\t\texpressions.push(expression);\n\t\t}\n\t\t// console.log('Module.parseTextNodeExpression', regex.source, expressions, nodeValue);\n\t\tconst length: number = nodeValue.length;\n\t\tif (length > lastIndex) {\n\t\t\tthis.pushFragment(nodeValue, lastIndex, length, expressions);\n\t\t}\n\t\tif (expressions.find(x => typeof x === 'function')) {\n\t\t\treturn expressions;\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\tprotected makeHosts(meta: IFactoryMeta, instance: Factory, node: IElement): void {\n\t\tif (meta.hosts) {\n\t\t\tObject.keys(meta.hosts).forEach((key: string) => {\n\t\t\t\tconst factory: typeof Factory = meta.hosts![key];\n\t\t\t\tinstance[key] = getHost(instance, factory, node);\n\t\t\t});\n\t\t}\n\t}\n\tprotected makeInput(instance: Factory, key: string): ExpressionFunction | null {\n\t\tconst { node } = getContext(instance);\n\t\tlet input: ExpressionFunction | null = null,\n\t\t\texpression: string | null = null;\n\t\tif (node.hasAttribute(`[${key}]`)) {\n\t\t\texpression = node.getAttribute(`[${key}]`)!;\n\t\t\t// console.log('Module.makeInput.expression.1', expression);\n\t\t} else if (node.hasAttribute(key)) {\n\t\t\t// const attribute = node.getAttribute(key).replace(/{{/g, '\"+').replace(/}}/g, '+\"');\n\t\t\tconst attribute: string = node.getAttribute(key)!.replace(/({{)|(}})|(\")/g, function (substring: string, a, b, c) {\n\t\t\t\tif (a) {\n\t\t\t\t\treturn '\"+';\n\t\t\t\t}\n\t\t\t\tif (b) {\n\t\t\t\t\treturn '+\"';\n\t\t\t\t}\n\t\t\t\tif (c) {\n\t\t\t\t\treturn '\\\"';\n\t\t\t\t}\n\t\t\t\treturn '';\n\t\t\t});\n\t\t\texpression = `\"${attribute}\"`;\n\t\t\t// console.log('Module.makeInput.expression.2', expression);\n\t\t}\n\t\tif (expression) {\n\t\t\tinput = this.makeFunction(expression);\n\t\t}\n\t\t/*\n\t\tconst descriptor: PropertyDescriptor = Object.getOwnPropertyDescriptor(instance, key) as PropertyDescriptor;\n\t\tif (!descriptor) {\n\t\t\tObject.defineProperty(instance, key, {\n\t\t\t\tvalue: null,\n\t\t\t\tenumerable: true,\n\t\t\t\twritable: true,\n\t\t\t\tconfigurable: false,\n\t\t\t});\n\t\t}\n\t\t*/\n\t\t// console.log('Module.makeInput', key, instance, descriptor);\n\t\treturn input;\n\t}\n\tprotected makeInputs(meta: IFactoryMeta, instance: Factory): { [key: string]: ExpressionFunction } {\n\t\tconst inputs: { [key: string]: ExpressionFunction } = {};\n\t\tif (meta.inputs) {\n\t\t\tmeta.inputs.forEach((key: string, i: number) => {\n\t\t\t\tconst input = this.makeInput(instance, key);\n\t\t\t\tif (input) {\n\t\t\t\t\tinputs[key] = input;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn inputs;\n\t}\n\tprotected makeOutput(instance: Factory, key: string): Observable<any> {\n\t\tconst context: IContext = getContext(instance);\n\t\tconst node: IElement = context.node;\n\t\tconst parentInstance: Factory | Window = context.parentInstance;\n\t\tconst expression: string | null = node.getAttribute(`(${key})`);\n\t\tconst outputFunction: ExpressionFunction | null = expression ? this.makeFunction(expression, ['$event']) : null;\n\t\tconst output$: Observable<any> = new Subject<any>().pipe(\n\t\t\ttap((event) => {\n\t\t\t\tif (outputFunction) {\n\t\t\t\t\t// console.log(expression, parentInstance);\n\t\t\t\t\tthis.resolve(outputFunction, parentInstance, event);\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t\toutput$.pipe(\n\t\t\ttakeUntil(instance.unsubscribe$)\n\t\t).subscribe();\n\t\tinstance[key] = output$;\n\t\treturn output$;\n\t}\n\tprotected makeOutputs(meta: IFactoryMeta, instance: Factory): { [key: string]: Observable<any> } {\n\t\tconst outputs: { [key: string]: Observable<any> } = {};\n\t\tif (meta.outputs) {\n\t\t\tmeta.outputs.forEach((key: string) => {\n\t\t\t\tconst output = this.makeOutput(instance, key);\n\t\t\t\tif (output) {\n\t\t\t\t\toutputs[key] = output;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn outputs;\n\t}\n\tprotected resolveInputsOutputs(instance: Factory, changes: Factory | Window): void {\n\t\tconst context: IContext = getContext(instance);\n\t\tconst parentInstance: Factory | Window = context.parentInstance;\n\t\tconst inputs: { [key: string]: ExpressionFunction } = context.inputs!;\n\t\tfor (let key in inputs) {\n\t\t\tconst inputFunction: ExpressionFunction = inputs[key];\n\t\t\t// console.log('Module.inputFunction', inputFunction);\n\t\t\tconst value: any = this.resolve(inputFunction, parentInstance, instance);\n\t\t\tinstance[key] = value;\n\t\t}\n\t}\n\tprotected static parseExpression(expression: string): string {\n\t\tconst l: string = '┌';\n\t\tconst r: string = '┘';\n\t\tconst rx1: RegExp = /(\\()([^\\(\\)]*)(\\))/;\n\t\twhile (expression.match(rx1)) {\n\t\t\texpression = expression.replace(rx1, function (substring: string, ...args: any[]) {\n\t\t\t\treturn `${l}${Module.parsePipes(args[1])}${r}`;\n\t\t\t});\n\t\t}\n\t\texpression = Module.parsePipes(expression);\n\t\texpression = expression.replace(/(┌)|(┘)/g, function (substring: string, ...args) {\n\t\t\treturn args[0] ? '(' : ')';\n\t\t});\n\t\treturn Module.parseOptionalChaining(expression);\n\t}\n\tprotected static parsePipes(expression: string): string {\n\t\tconst l: string = '┌';\n\t\tconst r: string = '┘';\n\t\tconst rx1: RegExp = /(.*?[^\\|])\\|([^\\|]+)/;\n\t\twhile (expression.match(rx1)) {\n\t\t\texpression = expression.replace(rx1, function (substring: string, ...args: any[]) {\n\t\t\t\tconst value: string = args[0].trim();\n\t\t\t\tconst params: string[] = Module.parsePipeParams(args[1]);\n\t\t\t\tconst func: string = params.shift()!.trim();\n\t\t\t\treturn `$$pipes.${func}.transform${l}${[value, ...params]}${r}`;\n\t\t\t});\n\t\t}\n\t\treturn expression;\n\t}\n\tprotected static parsePipeParams(expression: string): string[] {\n\t\tconst segments: string[] = [];\n\t\tlet i: number = 0,\n\t\t\tword: string = '',\n\t\t\tblock: number = 0;\n\t\tconst t: number = expression.length;\n\t\twhile (i < t) {\n\t\t\tconst c: string = expression.substr(i, 1);\n\t\t\tif (c === '{' || c === '(' || c === '[') {\n\t\t\t\tblock++;\n\t\t\t}\n\t\t\tif (c === '}' || c === ')' || c === ']') {\n\t\t\t\tblock--;\n\t\t\t}\n\t\t\tif (c === ':' && block === 0) {\n\t\t\t\tif (word.length) {\n\t\t\t\t\tsegments.push(word.trim());\n\t\t\t\t}\n\t\t\t\tword = '';\n\t\t\t} else {\n\t\t\t\tword += c;\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\t\tif (word.length) {\n\t\t\tsegments.push(word.trim());\n\t\t}\n\t\treturn segments;\n\t}\n\tprotected static parseOptionalChaining(expression: string): string {\n\t\tconst regex: RegExp = /(\\w+(\\?\\.))+([\\.|\\w]+)/g;\n\t\tlet previous: string;\n\t\texpression = expression.replace(regex, function (substring: string, ...args: any[]) {\n\t\t\tconst tokens: string[] = substring.split('?.');\n\t\t\tfor (let i: number = 0; i < tokens.length - 1; i++) {\n\t\t\t\tconst a: string = i > 0 ? `(${tokens[i]} = ${previous})` : tokens[i];\n\t\t\t\tconst b: string = tokens[i + 1];\n\t\t\t\tprevious = i > 0 ? `${a}.${b}` : `(${a} ? ${a}.${b} : void 0)`;\n\t\t\t}\n\t\t\treturn previous || '';\n\t\t});\n\t\treturn expression;\n\t}\n\tprotected static makeContext(module: Module, instance: Factory, parentInstance: Factory | Window, node: IElement, factory: typeof Factory, selector: string): IContext {\n\t\tinstance.rxcompId = ++ID;\n\t\tconst context: IContext = { module, instance, parentInstance, node, factory, selector };\n\t\tconst rxcompNodeId = node.rxcompId = (node.rxcompId || instance.rxcompId);\n\t\tconst nodeContexts = NODES[rxcompNodeId] || (NODES[rxcompNodeId] = []);\n\t\tnodeContexts.push(context);\n\t\tCONTEXTS[instance.rxcompId] = context;\n\t\treturn context;\n\t}\n\tprotected static deleteContext(id: number, keepContext: IContext | undefined): IContext[] {\n\t\tconst keepContexts: IContext[] = [];\n\t\tconst nodeContexts: IContext[] = NODES[id];\n\t\tif (nodeContexts) {\n\t\t\tnodeContexts.forEach((context: IContext) => {\n\t\t\t\tif (context === keepContext) {\n\t\t\t\t\tkeepContexts.push(keepContext);\n\t\t\t\t} else {\n\t\t\t\t\tconst instance: Factory = context.instance;\n\t\t\t\t\tinstance.unsubscribe$.next();\n\t\t\t\t\tinstance.unsubscribe$.complete();\n\t\t\t\t\tinstance.onDestroy();\n\t\t\t\t\tdelete CONTEXTS[instance.rxcompId];\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (keepContexts.length) {\n\t\t\t\tNODES[id] = keepContexts;\n\t\t\t} else {\n\t\t\t\tdelete NODES[id];\n\t\t\t}\n\t\t}\n\t\treturn keepContexts;\n\t}\n\tprotected static matchSelectors(node: HTMLElement, selectors: SelectorFunction[], results: ISelectorResult[]): ISelectorResult[] {\n\t\tfor (let i: number = 0; i < selectors.length; i++) {\n\t\t\tconst selectorResult: ISelectorResult | false = selectors[i](node);\n\t\t\tif (selectorResult) {\n\t\t\t\tconst factory: typeof Factory = selectorResult.factory;\n\t\t\t\tif (factory.prototype instanceof Component && factory.meta.template) {\n\t\t\t\t\tnode.innerHTML = factory.meta.template;\n\t\t\t\t}\n\t\t\t\tresults.push(selectorResult);\n\t\t\t\tif (factory.prototype instanceof Structure) {\n\t\t\t\t\t// console.log('Structure', node);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn results;\n\t}\n\tprotected static querySelectorsAll(node: Node, selectors: SelectorFunction[], results: ISelectorResult[]): ISelectorResult[] {\n\t\tif (node.nodeType === 1) {\n\t\t\tconst selectorResults: ISelectorResult[] = this.matchSelectors(node as HTMLElement, selectors, []);\n\t\t\tresults = results.concat(selectorResults);\n\t\t\tconst structure: ISelectorResult | undefined = selectorResults.find(x => x.factory.prototype instanceof Structure);\n\t\t\tif (structure) {\n\t\t\t\treturn results;\n\t\t\t}\n\t\t\tconst childNodes: NodeListOf<ChildNode> = node.childNodes;\n\t\t\tfor (let i: number = 0; i < childNodes.length; i++) {\n\t\t\t\tresults = this.querySelectorsAll(childNodes[i], selectors, results);\n\t\t\t}\n\t\t}\n\t\treturn results;\n\t}\n\tprotected static traverseUp(node: Node | null, callback: (node: Node, i: number) => any, i: number = 0): any {\n\t\tif (!node) {\n\t\t\treturn;\n\t\t}\n\t\tconst result = callback(node, i);\n\t\tif (result) {\n\t\t\treturn result;\n\t\t}\n\t\treturn this.traverseUp(node.parentNode, callback, i + 1);\n\t}\n\tprotected static traverseDown(node: Node | null, callback: (node: Node, i: number) => any, i: number = 0): any {\n\t\tif (!node) {\n\t\t\treturn;\n\t\t}\n\t\tlet result = callback(node, i);\n\t\tif (result) {\n\t\t\treturn result;\n\t\t}\n\t\tif (node.nodeType === 1) {\n\t\t\tlet j = 0,\n\t\t\t\tt = node.childNodes.length;\n\t\t\twhile (j < t && !result) {\n\t\t\t\tresult = this.traverseDown(node.childNodes[j], callback, i + 1);\n\t\t\t\tj++;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\tprotected static traversePrevious(node: Node | null, callback: (node: Node, i: number) => any, i: number = 0): any {\n\t\tif (!node) {\n\t\t\treturn;\n\t\t}\n\t\tconst result = callback(node, i);\n\t\tif (result) {\n\t\t\treturn result;\n\t\t}\n\t\treturn this.traversePrevious(node.previousSibling, callback, i + 1);\n\t}\n\tprotected static traverseNext(node: Node | null, callback: (node: Node, i: number) => any, i: number = 0): any {\n\t\tif (!node) {\n\t\t\treturn;\n\t\t}\n\t\tconst result = callback(node, i);\n\t\tif (result) {\n\t\t\treturn result;\n\t\t}\n\t\treturn this.traverseNext(node.nextSibling, callback, i + 1);\n\t}\n\tstatic meta: IModuleMeta;\n}\nexport function getParsableContextByElement(element: HTMLElement): IContext | undefined {\n\tlet context: IContext | undefined;\n\tconst rxcompId: number | undefined = (element as IElement).rxcompId;\n\tif (rxcompId) {\n\t\tconst contexts: IContext[] | undefined = NODES[rxcompId];\n\t\tif (contexts) {\n\t\t\tcontext = contexts.reduce(\n\t\t\t\t(previous: IContext | undefined, current: IContext) => {\n\t\t\t\t\tif (current.instance instanceof Context) {\n\t\t\t\t\t\treturn previous ? previous : current;\n\t\t\t\t\t} else if (current.instance instanceof Component) {\n\t\t\t\t\t\treturn current;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn previous;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tundefined\n\t\t\t);\n\t\t}\n\t\t// context = contexts ? contexts.find(x => x.instance instanceof Component) : undefined;\n\t}\n\treturn context;\n}\nexport function getContextByNode(element: HTMLElement): IContext | undefined {\n\tlet context: IContext | undefined = getParsableContextByElement(element);\n\tif (context && context.factory.prototype instanceof Structure) {\n\t\treturn undefined;\n\t}\n\treturn context;\n}\nexport function getHost(instance: Factory, factory: typeof Factory, node: IElement): Factory | undefined {\n\tif (!node) {\n\t\tnode = getContext(instance).node;\n\t}\n\tif (node.rxcompId) {\n\t\tconst nodeContexts: IContext[] = NODES[node.rxcompId];\n\t\tif (nodeContexts) {\n\t\t\t// console.log(nodeContexts);\n\t\t\tfor (let i: number = 0; i < nodeContexts.length; i++) {\n\t\t\t\tconst context: IContext = nodeContexts[i];\n\t\t\t\tif (context.instance !== instance) {\n\t\t\t\t\t// console.log(context.instance, instance);\n\t\t\t\t\tif (context.instance instanceof factory) {\n\t\t\t\t\t\treturn context.instance;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif (node.parentNode) {\n\t\treturn getHost(instance, factory, node.parentNode as IElement);\n\t} else {\n\t\treturn undefined;\n\t}\n}\n","import Directive from '../core/directive';\nimport { getContext } from '../core/factory';\nimport { IFactoryMeta } from '../core/types';\n\nexport default class SrcDirective extends Directive {\n\tset src(src: string) {\n\t\tif (this.src_ !== src) {\n\t\t\tthis.src_ = src;\n\t\t\tconst { node } = getContext(this);\n\t\t\tsrc ? node.setAttribute('src', src) : node.removeAttribute('src');\n\t\t}\n\t}\n\tget src(): string {\n\t\treturn this.src_;\n\t}\n\tstatic meta: IFactoryMeta = {\n\t\tselector: '[[src]]',\n\t\tinputs: ['src'],\n\t};\n}\n","import Directive from '../core/directive';\nimport { getContext } from '../core/factory';\nimport { IFactoryMeta } from '../core/types';\n\nexport default class StyleDirective extends Directive {\n\n\tstyle?: { [key: string]: string } | null;\n\tpreviousStyle?: { [key: string]: string } | null;\n\n\tonChanges() {\n\t\tconst { node } = getContext(this);\n\t\tconst style = this.style;\n\t\tconst previousStyle = this.previousStyle;\n\t\tif (previousStyle) {\n\t\t\tfor (let key in previousStyle) {\n\t\t\t\tif (!style || !style[key]) {\n\t\t\t\t\tconst splitted: string[] = key.split('.');\n\t\t\t\t\tconst propertyName = splitted.shift();\n\t\t\t\t\tnode.style.removeProperty(propertyName!);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (style) {\n\t\t\tfor (let key in style) {\n\t\t\t\tif (!previousStyle || previousStyle[key] !== style[key]) {\n\t\t\t\t\tconst splitted: string[] = key.split('.');\n\t\t\t\t\tconst propertyName = splitted.shift();\n\t\t\t\t\tconst value = style[key] + (splitted.length ? splitted[0] : '');\n\t\t\t\t\t// console.log(propertyName, value, style, key, style[key]);\n\t\t\t\t\tnode.style.setProperty(propertyName!, value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.previousStyle = style;\n\t\t// console.log('StyleDirective.onChanges', style);\n\t}\n\tstatic meta: IFactoryMeta = {\n\t\tselector: `[[style]]`,\n\t\tinputs: ['style']\n\t};\n}\n","\nimport { takeUntil } from 'rxjs/operators';\nimport ClassDirective from './class/class.directive';\nimport Factory from './core/factory';\nimport Pipe from './core/pipe';\nimport { errors$ } from './error/error';\nimport EventDirective from './event/event.directive';\nimport ForStructure from './for/for.structure';\nimport HrefDirective from './href/href.directive';\nimport IfStructure from './if/if.structure';\nimport InnerHtmlDirective from './inner-html/inner-html.directive';\nimport JsonComponent from './json/json.component';\nimport JsonPipe from './json/json.pipe';\nimport Module from './module/module';\nimport SrcDirective from './src/src.directive';\nimport StyleDirective from './style/style.directive';\n\nconst factories: typeof Factory[] = [\n\tClassDirective,\n\tEventDirective,\n\tForStructure,\n\tHrefDirective,\n\tIfStructure,\n\tInnerHtmlDirective,\n\tJsonComponent,\n\tSrcDirective,\n\tStyleDirective,\n];\n\nconst pipes: typeof Pipe[] = [\n\tJsonPipe,\n];\n\nexport default class CoreModule extends Module {\n\tconstructor() {\n\t\tsuper();\n\t\t// console.log('CoreModule');\n\t\terrors$.pipe(\n\t\t\ttakeUntil(this.unsubscribe$),\n\t\t).subscribe();\n\t}\n\tstatic meta = {\n\t\tdeclarations: [\n\t\t\t...factories,\n\t\t\t...pipes,\n\t\t],\n\t\texports: [\n\t\t\t...factories,\n\t\t\t...pipes,\n\t\t]\n\t};\n}\n","import { IElement, IModuleParsedMeta } from '../core/types';\nimport { ModuleError } from '../error/error';\nimport Module from '../module/module';\nimport Platform, { isPlatformBrowser } from './platform';\n\nexport default class Browser extends Platform {\n\n\t/**\n\t * @param moduleFactory\n\t * @description This method returns a Browser compiled module\n\t */\n\tstatic bootstrap(moduleFactory?: typeof Module): Module {\n\t\tif (!isPlatformBrowser) {\n\t\t\tthrow new ModuleError('missing platform browser, window not found');\n\t\t}\n\t\tif (!moduleFactory) {\n\t\t\tthrow new ModuleError('missing moduleFactory');\n\t\t}\n\t\tif (!moduleFactory.meta) {\n\t\t\tthrow new ModuleError('missing moduleFactory meta');\n\t\t}\n\t\tif (!moduleFactory.meta.bootstrap) {\n\t\t\tthrow new ModuleError('missing bootstrap');\n\t\t}\n\t\tif (!moduleFactory.meta.bootstrap.meta) {\n\t\t\tthrow new ModuleError('missing bootstrap meta');\n\t\t}\n\t\tif (!moduleFactory.meta.bootstrap.meta.selector) {\n\t\t\tthrow new ModuleError('missing bootstrap meta selector');\n\t\t}\n\t\tconst meta: IModuleParsedMeta = this.resolveMeta(moduleFactory!);\n\t\tconst module: Module = new moduleFactory();\n\t\tmodule.meta = meta;\n\t\tmeta.imports.forEach((moduleFactory: typeof Module) => {\n\t\t\tmoduleFactory.prototype.constructor.call(module);\n\t\t});\n\t\tif (window.rxcomp_hydrate_) {\n\t\t\tconst clonedNode = meta.node.cloneNode() as IElement;\n\t\t\tclonedNode.innerHTML = meta.nodeInnerHTML = window.rxcomp_hydrate_.innerHTML;\n\t\t\tconst instances = module.compile(clonedNode, window);\n\t\t\tmodule.instances = instances;\n\t\t\tconst root = instances[0];\n\t\t\t// if (root instanceof module.meta.bootstrap) {\n\t\t\troot.pushChanges();\n\t\t\tmeta.node.parentNode?.replaceChild(clonedNode, meta.node);\n\t\t\t// }\n\t\t} else {\n\t\t\tconst instances = module.compile(meta.node, window);\n\t\t\tmodule.instances = instances;\n\t\t\tconst root = instances[0];\n\t\t\t// if (root instanceof module.meta.bootstrap) {\n\t\t\troot.pushChanges();\n\t\t\t// }\n\t\t}\n\t\treturn module;\n\t}\n\n}\n","import { Browser, Component, CoreModule, Module, Pipe } from '../../../src/rxcomp';\n\nclass RootComponent extends Component {\n\ttime: Date = new Date();\n\tvalue: number = 2;\n}\nRootComponent.meta = {\n\tselector: '[root-component]',\n};\n\nclass TimePipe extends Pipe {\n\tstatic transform(value: Date | string, options: number = 1): string {\n\t\tconst date = new Date(value);\n\t\treturn `${date.getHours()}:${date.getMinutes()}`;\n\t}\n}\nTimePipe.meta = {\n\tname: 'time',\n};\n\nclass MultPipe extends Pipe {\n\tstatic transform(value: string | number, mult1: number = 2, mult2: number = 1): number {\n\t\treturn Number(value) * Number(mult1) * Number(mult2);\n\t}\n}\nMultPipe.meta = {\n\tname: 'mult',\n};\n\nclass AppModule extends Module { }\nAppModule.meta = {\n\timports: [\n\t\tCoreModule\n\t],\n\tdeclarations: [\n\t\tTimePipe,\n\t\tMultPipe\n\t],\n\tbootstrap: RootComponent,\n};\n\nBrowser.bootstrap(AppModule);\n"]}