{"version":3,"sources":["test/js/test.pipes.ts","../../src/core/factory.ts","../../src/core/directive.ts","../../src/core/component.ts","../../src/core/context.ts","../../src/core/structure.ts","../../src/module/module.ts","../../src/class/class.directive.ts","../../src/event/event.directive.ts","../../src/for/for.item.ts","../../src/for/for.structure.ts","../../src/href/href.directive.ts","../../src/if/if.structure.ts","../../src/inner-html/inner-html.directive.ts","../../src/core/pipe.ts","../../src/json/json.pipe.ts","../../src/src/src.directive.ts","../../src/style/style.directive.ts","../../src/core.module.ts","../../src/platform/platform.ts","../../src/platform/browser.ts","../../test/js/test.pipes.ts"],"names":["rxjs","operators","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_inheritsLoose","subClass","superClass","prototype","create","constructor","__proto__","_setPrototypeOf","o","p","setPrototypeOf","isNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","toString","call","e","_construct","Parent","args","Class","a","push","apply","instance","Function","bind","arguments","Factory","Directive","_Factory","this","Component","RESERVED_PROPERTIES","Context","descriptors","_this","_Component","mergeDescriptors","getPrototypeOf","defineProperties","self","ReferenceError","_assertThisInitialized","source","properties","getOwnPropertyNames","_loop","shift","indexOf","hasOwnProperty","getOwnPropertyDescriptor","value","_len","Structure","ID","CONTEXTS","NODES","Module","_proto","compile","node","parentInstance","componentNode","querySelectorsAll","meta","selectors","map","match","undefined","makeInstance","factory","selector","filter","x","_this2","parentNode","isComponent","getParentInstance","initialized","context","makeContext","changes$","BehaviorSubject","unsubscribe$","Subject","module","pushChanges","next","parse","setTimeout","makeHosts","inputs","makeInputs","outputs","makeOutputs","pipe","takeUntil","subscribe","changes","resolveInputsOutputs","makeFunction","expression","params","parseExpression","join","getInstance","Document","window","getContextByNode","_this3","traverseUp","childNodes","child","nodeType","element","text","parseTextNode","_this4","expressions","nodeExpressions","parseTextNodeExpression","nodeValue","replacedText","reduce","c","resolve","textNode","document","createTextNode","replaceChild","pushFragment","from","to","fragment","substring","matches","regex","lastIndex","exec","index","payload","hosts","keys","forEach","getHost","getContext","rxcompId","nodeContexts","makeInput","input","hasAttribute","getAttribute","replace","b","_this5","makeOutput","_this6","outputFunction","output$","tap","event","_this7","inputFunction","destroy","remove","innerHTML","nodeInnerHTML","keepInstance","keepContext","traverseDown","deleteContext","rx1","parsePipes","parseOptionalChaining","trim","parsePipeParams","func","concat","segments","word","block","t","substr","previous","tokens","split","rxcompNodeId","id","keepContexts","complete","matchSelectors","results","selectorResult","template","selectorResults","find","callback","result","j","traversePrevious","previousSibling","traverseNext","nextSibling","current","ClassDirective","_Directive","onInit","_getContext","classFunction","classList","onChanges","_getContext2","object","setAttribute","EventDirective","event$","fromEvent","shareReplay","ForItem","$key","$value","count","_Context","Constructor","protoProps","staticProps","get","even","ForStructure","_Structure","instances","forbegin","createComment","forend","insertBefore","removeAttribute","token","getExpressionToken","forFunction","iterable","isArray","Array","array","total","Math","max","clonedNode","cloneNode","forItemContext","removeChild","forExpressions","keyValueMatches","indexExpressions","HrefDirective","href","IfStructure","ifbegin","ifend","ifFunction","InnerHtmlDirective","Pipe","transform","JsonPipe","_Pipe","JSON","stringify","name","SrcDirective","src","StyleDirective","style","splitted","setProperty","console","log","CoreModule","_Module","factories","pipes","declarations","exports","ORDER","Browser","_Platform","Platform","bootstrap","moduleFactory","resolveMeta","querySelector","resolvePipes","resolveFactories","sortFactories","unshift","unwrapSelectors","assign","imports","exported","importedPipes","importMeta","pipeFactory","_Array$prototype$conc","importedFactories","factoryList","sort","getExpressions","matchers","c1","a2","u3","v4","a5","e6","contains","nodeName","toLowerCase","excludes","matchSelector","unmatchSelector","includes","included","excluded","isBrowser","Boolean","RootComponent","time","TimePipe","options","date","getHours","getMinutes","MultPipe","_Pipe2","mult1","mult2","Number","AppModule"],"mappings":"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","file":"docs/js/test.pipes.min.js","sourcesContent":[null,"import { BehaviorSubject, Subject } from 'rxjs';\n\nexport type MatchFunction = (node: HTMLElement) => boolean;\n\nexport type SelectorFunction = (node: HTMLElement) => ISelectorResult | false;\n\nexport interface ISelectorResult {\n\tnode: IElement;\n\tfactory: typeof Factory;\n\tselector: string;\n}\n\nexport type ExpressionFunction = () => any;\n\nexport interface IFactoryMeta {\n\tselector: string;\n\thosts?: { [key: string]: typeof Factory };\n\tinputs?: string[];\n\toutputs?: string[];\n\ttemplate?: string;\n}\n\nexport interface IElement extends HTMLElement {\n\trxcompId?: number;\n}\n\nexport interface IText extends Text {\n\tnodeExpressions?: (ExpressionFunction | string)[];\n}\n\nexport default class Factory {\n\trxcompId?: number;\n\tchanges$?: BehaviorSubject<Factory>;\n\tunsubscribe$?: Subject<void>;\n\t/*\n\tonInit?: () => void;\n\tonChanges?: (changes: Factory) => void;\n\tonView?: () => void;\n\tonDestroy?: () => void;\n\t*/\n\tpushChanges?: Function;\n\tstatic meta: IFactoryMeta;\n\n\tconstructor(...args: any[]) {\n\n\t}\n}\n","import Factory from './factory';\n\nexport default class Directive extends Factory {\n}\n","import Factory from './factory';\n\nexport default class Component extends Factory {\n}\n","// import { BehaviorSubject, Subject } from 'rxjs';\nimport Component from './component';\nimport Factory from './factory';\n\nconst RESERVED_PROPERTIES = ['constructor', 'rxcompId', 'onInit', 'onChanges', 'onDestroy', 'pushChanges', 'changes$', 'unsubscribe$'];\n\nexport default class Context extends Component {\n\n\tconstructor(instance: Factory, descriptors: { [key: string]: PropertyDescriptor } = {}) {\n\t\tsuper();\n\t\tdescriptors = Context.mergeDescriptors(instance, instance, descriptors);\n\t\tdescriptors = Context.mergeDescriptors(Object.getPrototypeOf(instance), instance, descriptors);\n\t\t/*\n\t\tconst subjects = {\n\t\t\tchanges$: {\n\t\t\t\tvalue: new BehaviorSubject(this),\n\t\t\t\twritable: false,\n\t\t\t\tenumerable: false,\n\t\t\t},\n\t\t\tunsubscribe$: {\n\t\t\t\tvalue: new Subject(),\n\t\t\t\twritable: false,\n\t\t\t\tenumerable: false,\n\t\t\t}\n\t\t};\n\t\t*/\n\t\tObject.defineProperties(this, descriptors);\n\t}\n\n\tstatic mergeDescriptors(source: Object, instance: Factory, descriptors: { [key: string]: PropertyDescriptor } = {}): { [key: string]: PropertyDescriptor } {\n\t\tconst properties: string[] = Object.getOwnPropertyNames(source);\n\t\twhile (properties.length) {\n\t\t\tconst key: string = properties.shift();\n\t\t\tif (RESERVED_PROPERTIES.indexOf(key) === -1 && !descriptors.hasOwnProperty(key)) {\n\t\t\t\t// console.log('Context.mergeDescriptors', key, source[key]);\n\t\t\t\tconst descriptor: PropertyDescriptor = Object.getOwnPropertyDescriptor(source, key);\n\t\t\t\tif (typeof descriptor.value == 'function') {\n\t\t\t\t\tdescriptor.value = (...args) => {\n\t\t\t\t\t\treturn instance[key].apply(instance, args);\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tdescriptors[key] = descriptor;\n\t\t\t}\n\t\t}\n\t\treturn descriptors;\n\t}\n\n}\n","import Factory from './factory';\n\nexport default class Structure extends Factory {\n}\n","import { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { takeUntil, tap } from 'rxjs/operators';\nimport Component from '../core/component';\nimport Context from '../core/context';\nimport Factory, { ExpressionFunction, IElement, IFactoryMeta, ISelectorResult, IText, SelectorFunction } from '../core/factory';\nimport Pipe from '../core/pipe';\nimport Structure from '../core/structure';\n\nexport interface IContext {\n\tmodule: Module;\n\tinstance: Factory;\n\tparentInstance: Factory | Window;\n\tnode: IElement;\n\tfactory: typeof Factory;\n\tselector: string;\n\tinputs?: { [key: string]: ExpressionFunction };\n\toutputs?: { [key: string]: ExpressionFunction };\n}\n\nlet ID: number = 0;\nconst CONTEXTS: { [key: number]: IContext } = {};\nconst NODES: { [key: number]: IContext[] } = {};\n\nexport interface IModuleMeta {\n\tdeclarations?: (typeof Factory | typeof Pipe)[];\n\texports?: (typeof Factory | typeof Pipe)[];\n\timports?: (typeof Module | IModuleMeta)[];\n\tpipes?: { [key: string]: typeof Pipe };\n\tfactories?: typeof Factory[];\n\tselectors?: SelectorFunction[];\n\tbootstrap?: typeof Factory;\n\tnode?: IElement;\n\tnodeInnerHTML?: string;\n}\n\nexport default class Module {\n\n\tmeta: IModuleMeta;\n\n\tcompile(node: IElement, parentInstance?: Factory | Window): Factory[] {\n\t\tlet componentNode: IElement;\n\t\tconst instances: Factory[] = Module.querySelectorsAll(node, this.meta.selectors, []).map((match: ISelectorResult) => {\n\t\t\tif (componentNode && componentNode !== match.node) {\n\t\t\t\tparentInstance = undefined;\n\t\t\t}\n\t\t\tconst instance: Factory | undefined = this.makeInstance(match.node, match.factory, match.selector, parentInstance);\n\t\t\tif (match.factory.prototype instanceof Component) {\n\t\t\t\tcomponentNode = match.node;\n\t\t\t}\n\t\t\treturn instance;\n\t\t}).filter(x => x != undefined);\n\t\t// console.log('compile', instances, node, parentInstance);\n\t\treturn instances;\n\t}\n\n\tmakeInstance(node: IElement, factory: typeof Factory, selector: string, parentInstance: Factory | Window, args?: any[]): Factory | undefined {\n\t\tif (parentInstance || node.parentNode) {\n\t\t\tconst isComponent = factory.prototype instanceof Component;\n\t\t\tconst meta = factory.meta;\n\t\t\t// console.log('meta', meta, factory);\n\t\t\t// collect parentInstance scope\n\t\t\tparentInstance = parentInstance || this.getParentInstance(node.parentNode);\n\t\t\tif (!parentInstance) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// creating factory instance\n\t\t\tconst instance = new factory(...(args || []));\n\t\t\t// creating instance context\n\t\t\tconst context = Module.makeContext(this, instance, parentInstance, node, factory, selector);\n\t\t\t// injecting changes$ and unsubscribe$ subjects\n\t\t\tObject.defineProperties(instance, {\n\t\t\t\tchanges$: {\n\t\t\t\t\tvalue: new BehaviorSubject(instance),\n\t\t\t\t\twritable: false,\n\t\t\t\t\tenumerable: false,\n\t\t\t\t},\n\t\t\t\tunsubscribe$: {\n\t\t\t\t\tvalue: new Subject(),\n\t\t\t\t\twritable: false,\n\t\t\t\t\tenumerable: false,\n\t\t\t\t}\n\t\t\t});\n\t\t\tlet initialized;\n\t\t\t// injecting instance pushChanges method\n\t\t\tconst module = this;\n\t\t\tinstance.pushChanges = function () {\n\t\t\t\t// console.log(new Error(`pushChanges ${instance.constructor.name}`).stack);\n\t\t\t\tthis.changes$.next(this);\n\t\t\t\t// parse component text nodes\n\t\t\t\tif (isComponent) {\n\t\t\t\t\t// console.log('Module.parse', instance.constructor.name);\n\t\t\t\t\tinitialized ? module.parse(node, instance) : setTimeout(function () { module.parse(node, instance); });\n\t\t\t\t}\n\t\t\t\t// calling onView event\n\t\t\t\tif (typeof instance['onView'] === 'function') {\n\t\t\t\t\t// console.log('onView', instance.constructor.name);\n\t\t\t\t\tinstance['onView']();\n\t\t\t\t}\n\t\t\t};\n\t\t\t// creating component input and outputs\n\t\t\t// if (isComponent && meta) {\n\t\t\tif (meta) {\n\t\t\t\tthis.makeHosts(meta, instance, node);\n\t\t\t\tcontext.inputs = this.makeInputs(meta, instance);\n\t\t\t\tcontext.outputs = this.makeOutputs(meta, instance);\n\t\t\t}\n\t\t\t// calling onInit event\n\t\t\tif (typeof instance['onInit'] === 'function') {\n\t\t\t\tinstance['onInit']();\n\t\t\t}\n\t\t\tinitialized = true;\n\t\t\t// subscribe to parent changes\n\t\t\tif (parentInstance instanceof Factory && parentInstance.changes$) {\n\t\t\t\tparentInstance.changes$.pipe(\n\t\t\t\t\t// filter(() => node.parentNode),\n\t\t\t\t\t// debounceTime(1),\n\t\t\t\t\t/*\n\t\t\t\t\tdistinctUntilChanged(function(prev, curr) {\n\t\t\t\t\t\tconsole.log(isComponent, context.inputs);\n\t\t\t\t\t\tif (isComponent && meta && Object.keys(context.inputs).length === 0) {\n\t\t\t\t\t\t\treturn true; // same\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t\t*/\n\t\t\t\t\ttakeUntil(instance.unsubscribe$)\n\t\t\t\t).subscribe((changes: Factory | Window) => {\n\t\t\t\t\t// resolve component input outputs\n\t\t\t\t\t// if (isComponent && meta) {\n\t\t\t\t\tif (meta) {\n\t\t\t\t\t\tthis.resolveInputsOutputs(instance, changes);\n\t\t\t\t\t}\n\t\t\t\t\t// calling onChanges event with changes\n\t\t\t\t\tif (typeof instance['onChanges'] === 'function') {\n\t\t\t\t\t\t// console.log('onChanges', instance.constructor.name);\n\t\t\t\t\t\t// console.log('onChanges', instance.constructor.meta.selector, changes);\n\t\t\t\t\t\tinstance['onChanges'](changes);\n\t\t\t\t\t}\n\t\t\t\t\t// push instance changes for subscribers\n\t\t\t\t\tinstance.pushChanges();\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn instance;\n\t\t}\n\t}\n\n\tmakeContext(instance: Factory, parentInstance: Factory | Window, node: IElement, selector: string): IContext {\n\t\tconst context: IContext = Module.makeContext(this, instance, parentInstance, node, instance.constructor as typeof Factory, selector);\n\t\t// console.log('Module.makeContext', context, context.instance, context.node);\n\t\treturn context;\n\t}\n\n\tmakeFunction(expression: string, params: string[] = ['$instance']): ExpressionFunction {\n\t\tif (expression) {\n\t\t\texpression = Module.parseExpression(expression);\n\t\t\t// console.log(expression);\n\t\t\tconst args: string = params.join(',');\n\t\t\tconst expression_func: ExpressionFunction = new Function(`with(this) {\n\t\t\t\treturn (function (${args}, $$module) {\n\t\t\t\t\tconst $$pipes = $$module.meta.pipes;\n\t\t\t\t\treturn ${expression};\n\t\t\t\t}.bind(this)).apply(this, arguments);\n\t\t\t}`) as ExpressionFunction;\n\t\t\t// console.log(expression_func);\n\t\t\treturn expression_func;\n\t\t} else {\n\t\t\treturn () => { return null; };\n\t\t}\n\t}\n\n\tgetInstance(node: HTMLElement | Document): Factory | Window {\n\t\tif (node instanceof Document) {\n\t\t\treturn window; // !!! window or global\n\t\t}\n\t\tconst context: IContext | void = getContextByNode(node);\n\t\tif (context) {\n\t\t\treturn context.instance;\n\t\t}\n\t}\n\n\tgetParentInstance(node: Node): Factory | Window {\n\t\treturn Module.traverseUp(node, (node: Node) => {\n\t\t\treturn this.getInstance(node as HTMLElement);\n\t\t});\n\t}\n\n\tparse(node: IElement, instance: Factory): void {\n\t\tfor (let i: number = 0; i < node.childNodes.length; i++) {\n\t\t\tconst child: ChildNode = node.childNodes[i];\n\t\t\tif (child.nodeType === 1) {\n\t\t\t\tconst element: HTMLElement = child as HTMLElement;\n\t\t\t\tconst context: IContext | void = getContextByNode(element);\n\t\t\t\tif (!context) {\n\t\t\t\t\tthis.parse(element, instance);\n\t\t\t\t}\n\t\t\t} else if (child.nodeType === 3) {\n\t\t\t\tconst text: IText = child as IText;\n\t\t\t\tthis.parseTextNode(text, instance);\n\t\t\t}\n\t\t}\n\t}\n\n\t// reduce(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: T[]) => T, initialValue: T): T;\n\n\tparseTextNode(node: IText, instance: Factory): void {\n\t\tlet expressions: (ExpressionFunction | string)[] = node.nodeExpressions;\n\t\tif (!expressions) {\n\t\t\texpressions = this.parseTextNodeExpression(node.nodeValue);\n\t\t}\n\t\tconst replacedText: string = expressions.reduce((p: string, c: ExpressionFunction | string) => {\n\t\t\tlet text: string;\n\t\t\tif (typeof c === 'function') { // instanceOf ExpressionFunction ?;\n\t\t\t\ttext = this.resolve(c as ExpressionFunction, instance, instance);\n\t\t\t\tif (text == undefined) { // !!! keep == loose equality\n\t\t\t\t\ttext = '';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttext = c;\n\t\t\t}\n\t\t\treturn p + text;\n\t\t}, '') as string;\n\t\tif (node.nodeValue !== replacedText) {\n\t\t\tconst textNode: IText = document.createTextNode(replacedText) as IText;\n\t\t\ttextNode.nodeExpressions = expressions;\n\t\t\tnode.parentNode.replaceChild(textNode, node);\n\t\t}\n\t}\n\n\tpushFragment(nodeValue: string, from: number, to: number, expressions: (ExpressionFunction | string)[]): void {\n\t\tconst fragment: string = nodeValue.substring(from, to);\n\t\texpressions.push(fragment);\n\t};\n\n\tparseTextNodeExpression(nodeValue: string): (ExpressionFunction | string)[] {\n\t\tconst expressions: (ExpressionFunction | string)[] = [];\n\t\tconst regex: RegExp = /\\{{2}((([^{}])|(\\{([^{}]|(\\{.*?\\}))+?\\}))*?)\\}{2}/g;\n\t\tlet lastIndex: number = 0,\n\t\t\tmatches: RegExpExecArray;\n\t\t/*\n\t\tconst pushFragment = function (from: number, to: number): void {\n\t\t\tconst fragment = nodeValue.substring(from, to);\n\t\t\texpressions.push(fragment);\n\t\t};\n\t\t*/\n\t\twhile ((matches = regex.exec(nodeValue)) !== null) {\n\t\t\tconst index: number = regex.lastIndex - matches[0].length;\n\t\t\tif (index > lastIndex) {\n\t\t\t\tthis.pushFragment(nodeValue, index, lastIndex, expressions);\n\t\t\t}\n\t\t\tlastIndex = regex.lastIndex;\n\t\t\tconst expression: ExpressionFunction = this.makeFunction(matches[1]);\n\t\t\texpressions.push(expression);\n\t\t}\n\t\tconst length: number = nodeValue.length;\n\t\tif (length > lastIndex) {\n\t\t\tthis.pushFragment(nodeValue, lastIndex, length, expressions);\n\t\t}\n\t\treturn expressions;\n\t}\n\n\tresolve(expression: ExpressionFunction, parentInstance: Factory | Window, payload: any): any {\n\t\t// console.log(expression, parentInstance, payload);\n\t\treturn expression.apply(parentInstance, [payload, this]);\n\t}\n\n\tmakeHosts(meta: IFactoryMeta, instance: Factory, node: IElement): void {\n\t\tif (meta.hosts) {\n\t\t\tObject.keys(meta.hosts).forEach((key: string) => {\n\t\t\t\tconst factory: typeof Factory = meta.hosts[key];\n\t\t\t\tinstance[key] = getHost(instance, factory, node);\n\t\t\t});\n\t\t}\n\t}\n\n\tmakeInput(instance: Factory, key: string): ExpressionFunction {\n\t\tconst { node } = getContext(instance);\n\t\tlet input: ExpressionFunction, expression: string = null;\n\t\tif (node.hasAttribute(`[${key}]`)) {\n\t\t\texpression = node.getAttribute(`[${key}]`);\n\t\t} else if (node.hasAttribute(key)) {\n\t\t\t// const attribute = node.getAttribute(key).replace(/{{/g, '\"+').replace(/}}/g, '+\"');\n\t\t\tconst attribute: string = node.getAttribute(key).replace(/({{)|(}})|(\")/g, function (substring: string, a, b, c) {\n\t\t\t\tif (a) {\n\t\t\t\t\treturn '\"+';\n\t\t\t\t}\n\t\t\t\tif (b) {\n\t\t\t\t\treturn '+\"';\n\t\t\t\t}\n\t\t\t\tif (c) {\n\t\t\t\t\treturn '\\\"';\n\t\t\t\t}\n\t\t\t});\n\t\t\texpression = `\"${attribute}\"`;\n\t\t}\n\t\tif (expression !== null) {\n\t\t\tinput = this.makeFunction(expression);\n\t\t}\n\t\treturn input;\n\t}\n\n\tmakeInputs(meta: IFactoryMeta, instance: Factory): { [key: string]: ExpressionFunction } {\n\t\tconst inputs: { [key: string]: ExpressionFunction } = {};\n\t\tif (meta.inputs) {\n\t\t\tmeta.inputs.forEach((key: string, i: number) => {\n\t\t\t\tconst input = this.makeInput(instance, key);\n\t\t\t\tif (input) {\n\t\t\t\t\tinputs[key] = input;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn inputs;\n\t}\n\n\tmakeOutput(instance: Factory, key: string): ExpressionFunction {\n\t\tconst context: IContext = getContext(instance);\n\t\tconst node: IElement = context.node;\n\t\tconst parentInstance: Factory | Window = context.parentInstance;\n\t\tconst expression: string = node.getAttribute(`(${key})`);\n\t\tconst outputFunction: ExpressionFunction = this.makeFunction(expression, ['$event']);\n\t\tconst output$: Observable<any> = new Subject<any>().pipe(\n\t\t\ttap((event) => {\n\t\t\t\tthis.resolve(outputFunction, parentInstance, event);\n\t\t\t})\n\t\t);\n\t\toutput$.pipe(\n\t\t\ttakeUntil(instance.unsubscribe$)\n\t\t).subscribe();\n\t\tinstance[key] = output$;\n\t\treturn outputFunction;\n\t}\n\n\tmakeOutputs(meta: IFactoryMeta, instance: Factory): { [key: string]: ExpressionFunction } {\n\t\tconst outputs: { [key: string]: ExpressionFunction } = {};\n\t\tif (meta.outputs) {\n\t\t\tmeta.outputs.forEach((key: string, i: number) => {\n\t\t\t\toutputs[key] = this.makeOutput(instance, key);\n\t\t\t});\n\t\t}\n\t\treturn outputs;\n\t}\n\n\tresolveInputsOutputs(instance: Factory, changes: Factory | Window): void {\n\t\tconst context: IContext = getContext(instance);\n\t\tconst parentInstance: Factory | Window = context.parentInstance;\n\t\tconst inputs: { [key: string]: ExpressionFunction } = context.inputs;\n\t\tfor (let key in inputs) {\n\t\t\tconst inputFunction: ExpressionFunction = inputs[key];\n\t\t\tconst value: any = this.resolve(inputFunction, parentInstance, instance);\n\t\t\tinstance[key] = value;\n\t\t}\n\t\t/*\n\t\tconst outputs = context.outputs;\n\t\tfor (let key in outputs) {\n\t\t\tconst inpuoutputFunctiontFunction = outputs[key];\n\t\t\tconst value = this.resolve(outputFunction, parentInstance, null);\n\t\t\t// console.log(`setted -> ${key}`, value);\n\t\t}\n\t\t*/\n\t}\n\n\tdestroy(): void {\n\t\tthis.remove(this.meta.node);\n\t\tthis.meta.node.innerHTML = this.meta.nodeInnerHTML;\n\t}\n\n\tremove(node: Node, keepInstance?: Factory): Node {\n\t\tconst keepContext: IContext = keepInstance ? getContext(keepInstance) : undefined;\n\t\tModule.traverseDown(node, (node: IElement) => {\n\t\t\tconst rxcompId: number = node.rxcompId;\n\t\t\tif (rxcompId) {\n\t\t\t\tconst keepContexts: IContext[] = Module.deleteContext(rxcompId, keepContext);\n\t\t\t\tif (keepContexts.length === 0) {\n\t\t\t\t\tdelete node.rxcompId;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn node;\n\t}\n\n\tstatic parseExpression(expression: string): string {\n\t\tconst l: string = '┌';\n\t\tconst r: string = '┘';\n\t\tconst rx1: RegExp = /(\\()([^\\(\\)]*)(\\))/;\n\t\twhile (expression.match(rx1)) {\n\t\t\texpression = expression.replace(rx1, function (substring: string, ...args: any[]) {\n\t\t\t\treturn `${l}${Module.parsePipes(args[1])}${r}`;\n\t\t\t});\n\t\t}\n\t\texpression = Module.parsePipes(expression);\n\t\texpression = expression.replace(/(┌)|(┘)/g, function (substring: string, ...args) {\n\t\t\treturn args[0] ? '(' : ')';\n\t\t});\n\t\treturn Module.parseOptionalChaining(expression);\n\t}\n\n\tstatic parsePipes(expression: string): string {\n\t\tconst l: string = '┌';\n\t\tconst r: string = '┘';\n\t\tconst rx1: RegExp = /(.*?[^\\|])\\|([^\\|]+)/;\n\t\twhile (expression.match(rx1)) {\n\t\t\texpression = expression.replace(rx1, function (substring: string, ...args: any[]) {\n\t\t\t\tconst value: string = args[0].trim();\n\t\t\t\tconst params: string[] = Module.parsePipeParams(args[1]);\n\t\t\t\tconst func: string = params.shift().trim();\n\t\t\t\treturn `$$pipes.${func}.transform┌${[value, ...params]}┘`;\n\t\t\t});\n\t\t}\n\t\treturn expression;\n\t}\n\n\tstatic parsePipeParams(expression: string): string[] {\n\t\tconst segments: string[] = [];\n\t\tlet i: number = 0,\n\t\t\tword: string = '',\n\t\t\tblock: number = 0;\n\t\tconst t: number = expression.length;\n\t\twhile (i < t) {\n\t\t\tconst c: string = expression.substr(i, 1);\n\t\t\tif (c === '{' || c === '(' || c === '[') {\n\t\t\t\tblock++;\n\t\t\t}\n\t\t\tif (c === '}' || c === ')' || c === ']') {\n\t\t\t\tblock--;\n\t\t\t}\n\t\t\tif (c === ':' && block === 0) {\n\t\t\t\tif (word.length) {\n\t\t\t\t\tsegments.push(word.trim());\n\t\t\t\t}\n\t\t\t\tword = '';\n\t\t\t} else {\n\t\t\t\tword += c;\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\t\tif (word.length) {\n\t\t\tsegments.push(word.trim());\n\t\t}\n\t\treturn segments;\n\t}\n\n\tstatic parseOptionalChaining(expression: string): string {\n\t\tconst regex: RegExp = /(\\w+(\\?\\.))+([\\.|\\w]+)/g;\n\t\tlet previous: string;\n\t\texpression = expression.replace(regex, function (substring: string, ...args: any[]) {\n\t\t\tconst tokens: string[] = substring.split('?.');\n\t\t\tfor (let i: number = 0; i < tokens.length - 1; i++) {\n\t\t\t\tconst a: string = i > 0 ? `(${tokens[i]} = ${previous})` : tokens[i];\n\t\t\t\tconst b: string = tokens[i + 1];\n\t\t\t\tprevious = i > 0 ? `${a}.${b}` : `(${a} ? ${a}.${b} : void 0)`;\n\t\t\t}\n\t\t\treturn previous || '';\n\t\t});\n\t\treturn expression;\n\t}\n\n\tstatic makeContext(module: Module, instance: Factory, parentInstance: Factory | Window, node: IElement, factory: typeof Factory, selector: string): IContext {\n\t\tinstance.rxcompId = ++ID;\n\t\tconst context: IContext = { module, instance, parentInstance, node, factory, selector };\n\t\tconst rxcompNodeId = node.rxcompId = (node.rxcompId || instance.rxcompId);\n\t\tconst nodeContexts = NODES[rxcompNodeId] || (NODES[rxcompNodeId] = []);\n\t\tnodeContexts.push(context);\n\t\tCONTEXTS[instance.rxcompId] = context;\n\t\treturn context;\n\t}\n\n\tstatic deleteContext(id: number, keepContext: IContext): IContext[] {\n\t\tconst keepContexts: IContext[] = [];\n\t\tconst nodeContexts: IContext[] = NODES[id];\n\t\tif (nodeContexts) {\n\t\t\tnodeContexts.forEach((context: IContext) => {\n\t\t\t\tif (context === keepContext) {\n\t\t\t\t\tkeepContexts.push(keepContext);\n\t\t\t\t} else {\n\t\t\t\t\tconst instance: Factory = context.instance;\n\t\t\t\t\tinstance.unsubscribe$.next();\n\t\t\t\t\tinstance.unsubscribe$.complete();\n\t\t\t\t\tif (typeof instance['onDestroy'] === 'function') {\n\t\t\t\t\t\tinstance['onDestroy']();\n\t\t\t\t\t\tdelete CONTEXTS[instance.rxcompId];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (keepContexts.length) {\n\t\t\t\tNODES[id] = keepContexts;\n\t\t\t} else {\n\t\t\t\tdelete NODES[id];\n\t\t\t}\n\t\t}\n\t\treturn keepContexts;\n\t}\n\n\tstatic matchSelectors(node: HTMLElement, selectors: SelectorFunction[], results: ISelectorResult[]): ISelectorResult[] {\n\t\tfor (let i: number = 0; i < selectors.length; i++) {\n\t\t\tconst selectorResult: ISelectorResult | false = selectors[i](node);\n\t\t\tif (selectorResult) {\n\t\t\t\tconst factory: typeof Factory = selectorResult.factory;\n\t\t\t\tif (factory.prototype instanceof Component && factory.meta.template) {\n\t\t\t\t\tnode.innerHTML = factory.meta.template;\n\t\t\t\t}\n\t\t\t\tresults.push(selectorResult);\n\t\t\t\tif (factory.prototype instanceof Structure) {\n\t\t\t\t\t// console.log('Structure', node);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn results;\n\t}\n\n\tstatic querySelectorsAll(node: Node, selectors: SelectorFunction[], results: ISelectorResult[]): ISelectorResult[] {\n\t\tif (node.nodeType === 1) {\n\t\t\tconst selectorResults: ISelectorResult[] = this.matchSelectors(node as HTMLElement, selectors, []);\n\t\t\tresults = results.concat(selectorResults);\n\t\t\tconst structure: ISelectorResult = selectorResults.find(x => x.factory.prototype instanceof Structure);\n\t\t\tif (structure) {\n\t\t\t\treturn results;\n\t\t\t}\n\t\t\tconst childNodes: NodeListOf<ChildNode> = node.childNodes;\n\t\t\tfor (let i: number = 0; i < childNodes.length; i++) {\n\t\t\t\tresults = this.querySelectorsAll(childNodes[i], selectors, results);\n\t\t\t}\n\t\t}\n\t\treturn results;\n\t}\n\n\tstatic traverseUp(node: Node, callback: (node: Node, i: number) => any, i: number = 0): any {\n\t\tif (!node) {\n\t\t\treturn;\n\t\t}\n\t\tconst result = callback(node, i);\n\t\tif (result) {\n\t\t\treturn result;\n\t\t}\n\t\treturn this.traverseUp(node.parentNode, callback, i + 1);\n\t}\n\n\tstatic traverseDown(node: Node, callback: (node: Node, i: number) => any, i: number = 0): any {\n\t\tif (!node) {\n\t\t\treturn;\n\t\t}\n\t\tlet result = callback(node, i);\n\t\tif (result) {\n\t\t\treturn result;\n\t\t}\n\t\tif (node.nodeType === 1) {\n\t\t\tlet j = 0,\n\t\t\t\tt = node.childNodes.length;\n\t\t\twhile (j < t && !result) {\n\t\t\t\tresult = this.traverseDown(node.childNodes[j], callback, i + 1);\n\t\t\t\tj++;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tstatic traversePrevious(node: Node, callback: (node: Node, i: number) => any, i: number = 0): any {\n\t\tif (!node) {\n\t\t\treturn;\n\t\t}\n\t\tconst result = callback(node, i);\n\t\tif (result) {\n\t\t\treturn result;\n\t\t}\n\t\treturn this.traversePrevious(node.previousSibling, callback, i + 1);\n\t}\n\n\tstatic traverseNext(node: Node, callback: (node: Node, i: number) => any, i: number = 0): any {\n\t\tif (!node) {\n\t\t\treturn;\n\t\t}\n\t\tconst result = callback(node, i);\n\t\tif (result) {\n\t\t\treturn result;\n\t\t}\n\t\treturn this.traverseNext(node.nextSibling, callback, i + 1);\n\t}\n\n\tstatic meta: IModuleMeta;\n\n}\n\nexport function getContext(instance: Factory): IContext {\n\treturn CONTEXTS[instance.rxcompId];\n}\n\nexport function getContextByNode(node: Node): IContext | void {\n\tlet context: IContext;\n\tconst rxcompId: number = node['rxcompId'];\n\tif (rxcompId) {\n\t\tconst nodeContexts: IContext[] = NODES[rxcompId];\n\t\tif (nodeContexts) {\n\t\t\tcontext = nodeContexts.reduce((previous: IContext, current: IContext) => {\n\t\t\t\tif (current.factory.prototype instanceof Component) {\n\t\t\t\t\treturn current;\n\t\t\t\t} else if (current.factory.prototype instanceof Context) {\n\t\t\t\t\treturn previous ? previous : current;\n\t\t\t\t} else {\n\t\t\t\t\treturn previous;\n\t\t\t\t}\n\t\t\t}, null);\n\t\t\t// console.log(node.rxcompId, context);\n\t\t}\n\t}\n\treturn context;\n}\n\nexport function getHost(instance: Factory, factory: typeof Factory, node: IElement): Factory {\n\tif (!node) {\n\t\tnode = getContext(instance).node;\n\t}\n\tif (node.rxcompId) {\n\t\tconst nodeContexts: IContext[] = NODES[node.rxcompId];\n\t\tif (nodeContexts) {\n\t\t\t// console.log(nodeContexts);\n\t\t\tfor (let i: number = 0; i < nodeContexts.length; i++) {\n\t\t\t\tconst context: IContext = nodeContexts[i];\n\t\t\t\tif (context.instance !== instance) {\n\t\t\t\t\t// console.log(context.instance, instance);\n\t\t\t\t\tif (context.instance instanceof factory) {\n\t\t\t\t\t\treturn context.instance;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif (node.parentNode) {\n\t\treturn getHost(instance, factory, node.parentNode as IElement);\n\t}\n}\n","import Factory, { ExpressionFunction } from '../../dist/cjs/core/factory';\nimport Directive from '../core/directive';\nimport { getContext } from '../module/module';\n\n/*\nexport default class ClassDirective extends Directive {\n\n\tclass: { [key: string]: string } | string;\n\tkeys: string[] = [];\n\n\tonInit() {\n\t\tconst { node } = getContext(this);\n\t\tnode.classList.forEach(x => this.keys.push(x));\n\t}\n\n\tonChanges() {\n\t\tconst { node } = getContext(this);\n\t\tlet keys: string[];\n\t\tconst object = this.class;\n\t\tif (typeof object === 'object') {\n\t\t\tkeys = [];\n\t\t\tfor (let key in object) {\n\t\t\t\tif (object[key]) {\n\t\t\t\t\tkeys.push(key);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (typeof object === 'string') {\n\t\t\tkeys = object.split(/\\s+/);\n\t\t}\n\t\tkeys = (keys || []).concat(this.keys);\n\t\t// console.log(keys);\n\t\tnode.setAttribute('class', keys.join(' '));\n\t\t// console.log('ClassDirective.onChanges', keys);\n\t}\n\n}\n\nClassDirective.meta = {\n\tselector: `[[class]]`,\n\tinputs: ['class']\n};\n*/\n\nexport default class ClassDirective extends Directive {\n\n\tclassFunction: ExpressionFunction;\n\tkeys: string[] = [];\n\n\tonInit() {\n\t\tconst { module, node } = getContext(this);\n\t\tconst expression = node.getAttribute('[class]');\n\t\tthis.classFunction = module.makeFunction(expression);\n\t\tnode.classList.forEach(x => this.keys.push(x));\n\t\t// console.log('ClassDirective.onInit', this.classList, expression);\n\t}\n\n\tonChanges(changes: Factory | Window) {\n\t\tconst { module, node } = getContext(this);\n\t\tconst object = module.resolve(this.classFunction, changes, this);\n\t\tlet keys: string[];\n\t\tif (typeof object === 'object') {\n\t\t\tkeys = [];\n\t\t\tfor (let key in object) {\n\t\t\t\tif (object[key]) {\n\t\t\t\t\tkeys.push(key);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (typeof object === 'string') {\n\t\t\tkeys = object.split(' ');\n\t\t}\n\t\tkeys = (keys || []).concat(this.keys);\n\t\t// console.log(keys);\n\t\tnode.setAttribute('class', keys.join(' '));\n\t\t// console.log('ClassDirective.onChanges', keys);\n\t}\n\n}\n\nClassDirective.meta = {\n\tselector: `[[class]]`,\n\tinputs: ['class']\n};\n\n","import { fromEvent, Observable } from 'rxjs';\nimport { shareReplay, takeUntil } from 'rxjs/operators';\nimport Directive from '../core/directive';\nimport { getContext } from '../module/module';\n\nconst EVENTS = ['mousedown', 'mouseup', 'mousemove', 'click', 'dblclick', 'mouseover', 'mouseout', 'mouseenter', 'mouseleave', 'contextmenu', 'touchstart', 'touchmove', 'touchend', 'keydown', 'keyup', 'input', 'change', 'loaded'];\n\nexport default class EventDirective extends Directive {\n\n\tevent: string;\n\tevent$: Observable<Event>;\n\n\tonInit() {\n\t\tconst { module, node, parentInstance, selector } = getContext(this);\n\t\tconst event = this.event = selector.replace(/\\[|\\]|\\(|\\)/g, '');\n\t\tconst event$ = this.event$ = fromEvent<Event>(node, event).pipe(shareReplay(1));\n\t\tconst expression = node.getAttribute(`(${event})`);\n\t\tif (expression) {\n\t\t\tconst outputFunction = module.makeFunction(expression, ['$event']);\n\t\t\tevent$.pipe(\n\t\t\t\ttakeUntil(this.unsubscribe$)\n\t\t\t).subscribe(event => {\n\t\t\t\t// console.log(parentInstance);\n\t\t\t\tmodule.resolve(outputFunction, parentInstance, event);\n\t\t\t});\n\t\t} else {\n\t\t\tparentInstance[`${event}$`] = event$;\n\t\t}\n\t\t// console.log('EventDirective.onInit', 'selector', selector, 'event', event);\n\t}\n\n}\n\nEventDirective.meta = {\n\tselector: `[(${EVENTS.join(')],[(')})]`,\n};\n","import Context from '../core/context';\nimport Factory from '../core/factory';\n\nexport default class ForItem extends Context {\n\n\tindex: number;\n\tcount: number;\n\t// !!! try with payload options { key, $key, value, $value, index, count } or use onInit()\n\n\tconstructor(key: string, $key: number | string, value: string, $value: any, index: number, count: number, parentInstance: Factory) {\n\t\t// console.log('ForItem', arguments);\n\t\tsuper(parentInstance);\n\t\t/*\n\t\tsuper(parentInstance, {\n\t\t\t[key]: {\n\t\t\t\tget: function() {\n\t\t\t\t\treturn this.$key;\n\t\t\t\t},\n\t\t\t\tset: function(key) {\n\t\t\t\t\tthis.$key = key;\n\t\t\t\t}\n\t\t\t},\n\t\t\t[value]: {\n\t\t\t\tget: function() {\n\t\t\t\t\treturn this.$value;\n\t\t\t\t},\n\t\t\t\tset: function(value) {\n\t\t\t\t\tthis.$value = value;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\t*/\n\t\tthis[key] = $key;\n\t\tthis[value] = $value;\n\t\tthis.index = index;\n\t\tthis.count = count;\n\t}\n\n\tget first(): boolean { return this.index === 0; }\n\n\tget last(): boolean { return this.index === this.count - 1; }\n\n\tget even(): boolean { return this.index % 2 === 0; }\n\n\tget odd(): boolean { return !this.even; }\n\n}\n","import Factory, { ExpressionFunction, IElement } from '../core/factory';\nimport Structure from '../core/structure';\nimport Module, { getContext, IContext } from '../module/module';\nimport ForItem from './for.item';\n\nexport interface IExpressionToken {\n\tkey: string;\n\tvalue: string;\n\titerable: string;\n}\n\nexport default class ForStructure extends Structure {\n\n\tforbegin: Comment;\n\tforend: Comment;\n\tinstances: Factory[] = [];\n\ttoken: IExpressionToken;\n\tforFunction: ExpressionFunction;\n\n\tonInit() {\n\t\tconst { module, node } = getContext(this);\n\t\tconst forbegin: Comment = this.forbegin = document.createComment(`*for begin`);\n\t\tforbegin['rxcompId'] = node.rxcompId;\n\t\tnode.parentNode.replaceChild(forbegin, node);\n\t\tconst forend: Comment = this.forend = document.createComment(`*for end`);\n\t\tforbegin.parentNode.insertBefore(forend, forbegin.nextSibling);\n\t\tconst expression: string = node.getAttribute('*for');\n\t\t// this.expression = expression;\n\t\tnode.removeAttribute('*for');\n\t\tconst token = this.token = this.getExpressionToken(expression);\n\t\tthis.forFunction = module.makeFunction(token.iterable);\n\t}\n\n\tonChanges(changes) {\n\t\tconst context: IContext = getContext(this);\n\t\tconst module: Module = context.module;\n\t\tconst node: IElement = context.node;\n\t\t// resolve\n\t\tconst token: IExpressionToken = this.token;\n\t\tlet result = module.resolve(this.forFunction, changes, this) || [];\n\t\tconst isArray = Array.isArray(result);\n\t\tconst array: any[] = isArray ? result : Object.keys(result);\n\t\tconst total: number = array.length;\n\t\tconst previous: number = this.instances.length;\n\t\t// let nextSibling = this.forbegin.nextSibling;\n\t\tfor (let i: number = 0; i < Math.max(previous, total); i++) {\n\t\t\tif (i < total) {\n\t\t\t\tconst key: number | string = isArray ? i : array[i];\n\t\t\t\tconst value: any = isArray ? array[key] : result[key];\n\t\t\t\tif (i < previous) {\n\t\t\t\t\t// update\n\t\t\t\t\tconst instance: Factory = this.instances[i];\n\t\t\t\t\tinstance[token.key] = key;\n\t\t\t\t\tinstance[token.value] = value;\n\t\t\t\t\t/*\n\t\t\t\t\tif (!nextSibling) {\n\t\t\t\t\t\tconst context = getContext(instance);\n\t\t\t\t\t\tconst node = context.node;\n\t\t\t\t\t\tthis.forend.parentNode.insertBefore(node, this.forend);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnextSibling = nextSibling.nextSibling;\n\t\t\t\t\t}\n\t\t\t\t\t*/\n\t\t\t\t} else {\n\t\t\t\t\t// create\n\t\t\t\t\tconst clonedNode: IElement = node.cloneNode(true) as IElement;\n\t\t\t\t\tdelete clonedNode['rxcompId'];\n\t\t\t\t\tthis.forend.parentNode.insertBefore(clonedNode, this.forend);\n\t\t\t\t\tconst args = [token.key, key, token.value, value, i, total, context.parentInstance]; // !!! context.parentInstance unused?\n\t\t\t\t\tconst instance = module.makeInstance(clonedNode, ForItem, context.selector, context.parentInstance, args);\n\t\t\t\t\tif (instance) {\n\t\t\t\t\t\tconst forItemContext = getContext(instance);\n\t\t\t\t\t\t// console.log('ForStructure', clonedNode, forItemContext.instance.constructor.name);\n\t\t\t\t\t\tmodule.compile(clonedNode, forItemContext.instance);\n\t\t\t\t\t\t// nextSibling = clonedNode.nextSibling;\n\t\t\t\t\t\tthis.instances.push(instance);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// remove\n\t\t\t\tconst instance: Factory = this.instances[i];\n\t\t\t\tconst { node } = getContext(instance);\n\t\t\t\tnode.parentNode.removeChild(node);\n\t\t\t\tmodule.remove(node);\n\t\t\t}\n\t\t}\n\t\tthis.instances.length = array.length;\n\t\t// console.log('ForStructure', this.instances, token);\n\t}\n\n\tgetExpressionToken(expression: string): IExpressionToken {\n\t\tif (expression === null) {\n\t\t\tthrow ('invalid for');\n\t\t}\n\t\tif (expression.trim().indexOf('let ') === -1 || expression.trim().indexOf(' of ') === -1) {\n\t\t\tthrow ('invalid for');\n\t\t}\n\t\tconst expressions: string[] = expression.split(';').map(x => x.trim()).filter(x => x !== '');\n\t\tconst forExpressions: string[] = expressions[0].split(' of ').map(x => x.trim());\n\t\tlet value: string = forExpressions[0].replace(/\\s*let\\s*/, '');\n\t\tconst iterable: string = forExpressions[1];\n\t\tlet key: string = 'index';\n\t\tconst keyValueMatches: RegExpMatchArray = value.match(/\\[(.+)\\s*,\\s*(.+)\\]/);\n\t\tif (keyValueMatches) {\n\t\t\tkey = keyValueMatches[1];\n\t\t\tvalue = keyValueMatches[2];\n\t\t}\n\t\tif (expressions.length > 1) {\n\t\t\tconst indexExpressions: string[] = expressions[1].split(/\\s*let\\s*|\\s*=\\s*index/).map(x => x.trim());\n\t\t\tif (indexExpressions.length === 3) {\n\t\t\t\tkey = indexExpressions[1];\n\t\t\t}\n\t\t}\n\t\treturn { key, value, iterable };\n\t}\n\n}\n\nForStructure.meta = {\n\tselector: '[*for]',\n};\n","import Directive from '../core/directive';\nimport { getContext } from '../module/module';\n\nexport default class HrefDirective extends Directive {\n\n\thref: string;\n\n\tonChanges() {\n\t\tconst { node } = getContext(this);\n\t\tnode.setAttribute('href', this.href);\n\t}\n\n}\n\nHrefDirective.meta = {\n\tselector: '[[href]]',\n\tinputs: ['href'],\n};\n","import Factory, { ExpressionFunction, IElement } from '../core/factory';\nimport Structure from '../core/structure';\nimport { IExpressionToken } from '../for/for.structure';\nimport { getContext } from '../module/module';\n\nexport default class IfStructure extends Structure {\n\n\tifbegin: Comment;\n\tifend: Comment;\n\tinstances: Factory[] = [];\n\ttoken: IExpressionToken;\n\tifFunction: ExpressionFunction;\n\tclonedNode: IElement;\n\tnode: IElement;\n\n\tonInit() {\n\t\tconst { module, node } = getContext(this);\n\t\tconst ifbegin = this.ifbegin = document.createComment(`*if begin`);\n\t\tifbegin['rxcompId'] = node.rxcompId;\n\t\tnode.parentNode.replaceChild(ifbegin, node);\n\t\tconst ifend = this.ifend = document.createComment(`*if end`);\n\t\tifbegin.parentNode.insertBefore(ifend, ifbegin.nextSibling);\n\t\tconst expression = node.getAttribute('*if');\n\t\tthis.ifFunction = module.makeFunction(expression);\n\t\tconst clonedNode = node.cloneNode(true) as IElement;\n\t\tclonedNode.removeAttribute('*if');\n\t\tthis.clonedNode = clonedNode;\n\t\tthis.node = clonedNode.cloneNode(true) as IElement;\n\t\t// console.log('IfStructure.expression', expression);\n\t}\n\n\tonChanges(changes) {\n\t\tconst { module } = getContext(this);\n\t\t// console.log('IfStructure.onChanges', changes);\n\t\tconst value = module.resolve(this.ifFunction, changes, this);\n\t\tconst node = this.node;\n\t\tif (value) {\n\t\t\tif (!node.parentNode) {\n\t\t\t\tthis.ifend.parentNode.insertBefore(node, this.ifend);\n\t\t\t\tmodule.compile(node);\n\t\t\t}\n\t\t} else {\n\t\t\tif (node.parentNode) {\n\t\t\t\tmodule.remove(node, this);\n\t\t\t\tnode.parentNode.removeChild(node);\n\t\t\t\tthis.node = this.clonedNode.cloneNode(true) as IElement;\n\t\t\t}\n\t\t}\n\t}\n\n}\n\nIfStructure.meta = {\n\tselector: '[*if]',\n};\n","import Directive from '../core/directive';\nimport { getContext } from '../module/module';\n\nexport default class InnerHtmlDirective extends Directive {\n\n\tinnerHTML: string;\n\n\tonChanges() {\n\t\tconst { node } = getContext(this);\n\t\tnode.innerHTML = this.innerHTML == undefined ? '' : this.innerHTML; // !!! keep == loose equality\n\t}\n\n}\n\nInnerHtmlDirective.meta = {\n\tselector: `[innerHTML]`,\n\tinputs: ['innerHTML'],\n};\n","export interface IPipeMeta {\n\tname: string;\n}\n\nexport default class Pipe {\n\n\tstatic transform(value: any): any {\n\t\treturn value;\n\t}\n\n\tstatic meta: IPipeMeta;\n}\n","import Pipe from '../core/pipe';\n\nexport default class JsonPipe extends Pipe {\n\n\tstatic transform(value: any): string {\n\t\treturn JSON.stringify(value, null, '\\t');\n\t}\n\n}\n\nJsonPipe.meta = {\n\tname: 'json',\n};\n","import Directive from '../core/directive';\nimport { getContext } from '../module/module';\n\nexport default class SrcDirective extends Directive {\n\n\tsrc: string;\n\n\tonChanges() {\n\t\tconst { node } = getContext(this);\n\t\tnode.setAttribute('src', this.src);\n\t}\n\n}\n\nSrcDirective.meta = {\n\tselector: '[[src]]',\n\tinputs: ['src'],\n};\n","import Directive from '../core/directive';\nimport { getContext } from '../module/module';\n\nexport default class StyleDirective extends Directive {\n\n\t/*\n\tstyleFunction: ExpressionFunction;\n\n\tonInit() {\n\t\tconst { module, node } = getContext(this);\n\t\tconst expression = node.getAttribute('[style]');\n\t\tthis.styleFunction = module.makeFunction(expression);\n\t\t// console.log('StyleDirective.onInit', expression);\n\t}\n\n\tonChanges(changes) {\n\t\tconst { module, node } = getContext(this);\n\t\tconst style = module.resolve(this.styleFunction, changes, this);\n\t\tfor (let key in style) {\n\t\t\tnode.style.setProperty(key, style[key]);\n\t\t}\n\t\t// console.log('StyleDirective.onChanges', changes, style);\n\t}\n\t*/\n\n\tstyle: { [key: string]: string };\n\n\tonChanges() {\n\t\tconst { node } = getContext(this);\n\t\tconst style = this.style;\n\t\tif (style) {\n\t\t\tfor (let key in style) {\n\t\t\t\tconst splitted: string[] = key.split('.');\n\t\t\t\tconst name = splitted.shift();\n\t\t\t\tnode.style.setProperty(name, style[key] + splitted.length ? splitted[0] : '');\n\t\t\t}\n\t\t}\n\t\tconsole.log('StyleDirective.onChanges', style);\n\t}\n\n}\n\nStyleDirective.meta = {\n\tselector: `[[style]]`,\n\tinputs: ['style']\n};\n","import ClassDirective from './class/class.directive';\nimport EventDirective from './event/event.directive';\nimport ForStructure from './for/for.structure';\nimport HrefDirective from './href/href.directive';\nimport IfStructure from './if/if.structure';\nimport InnerHtmlDirective from './inner-html/inner-html.directive';\nimport JsonPipe from './json/json.pipe';\nimport Module from './module/module';\nimport SrcDirective from './src/src.directive';\nimport StyleDirective from './style/style.directive';\n\nexport default class CoreModule extends Module { }\nconst factories = [\n\tClassDirective,\n\tEventDirective,\n\tForStructure,\n\tHrefDirective,\n\tIfStructure,\n\tInnerHtmlDirective,\n\tSrcDirective,\n\tStyleDirective,\n];\nconst pipes = [\n\tJsonPipe,\n];\nCoreModule.meta = {\n\tdeclarations: [\n\t\t...factories,\n\t\t...pipes,\n\t],\n\texports: [\n\t\t...factories,\n\t\t...pipes,\n\t]\n};\n","import Component from '../core/component';\nimport Directive from '../core/directive';\nimport Factory, { IElement, ISelectorResult, MatchFunction, SelectorFunction } from '../core/factory';\nimport Pipe from '../core/pipe';\nimport Structure from '../core/structure';\nimport Module, { IModuleMeta } from '../module/module';\n\nconst ORDER: (typeof Factory)[] = [Structure, Component, Directive];\n\nexport default class Platform {\n\n\tstatic bootstrap(moduleFactory: typeof Module): Module {\n\t\tconst meta = this.resolveMeta(moduleFactory);\n\t\t// console.log(meta);\n\t\tconst bootstrap = meta.bootstrap;\n\t\tif (!bootstrap) {\n\t\t\tthrow ('missing bootstrap');\n\t\t}\n\t\tconst node = meta.node = this.querySelector(bootstrap.meta.selector);\n\t\tif (!node) {\n\t\t\tthrow (`missing node ${bootstrap.meta.selector}`);\n\t\t}\n\t\tmeta.nodeInnerHTML = node.innerHTML;\n\t\tconst pipes = meta.pipes = this.resolvePipes(meta);\n\t\tconst factories = meta.factories = this.resolveFactories(meta);\n\t\tthis.sortFactories(factories);\n\t\tfactories.unshift(bootstrap);\n\t\tconst selectors = meta.selectors = this.unwrapSelectors(factories);\n\t\tconst module = new moduleFactory();\n\t\tmodule.meta = meta;\n\t\tconst instances = module.compile(node, window);\n\t\tconst root = instances[0];\n\t\t// if (root instanceof module.meta.bootstrap) {\n\t\troot.pushChanges();\n\t\t// }\n\t\treturn module;\n\t}\n\n\tstatic querySelector(selector: string): IElement | null {\n\t\treturn document.querySelector(selector);\n\t}\n\n\tstatic resolveMeta(moduleFactory: typeof Module): IModuleMeta {\n\t\tconst meta = Object.assign({ imports: [], declarations: [], pipes: [], exports: [] }, moduleFactory.meta);\n\t\tmeta.imports = meta.imports.map(moduleFactory => this.resolveMeta(moduleFactory));\n\t\treturn meta;\n\t}\n\n\tstatic resolvePipes(meta: IModuleMeta, exported?: boolean): { [key: string]: typeof Pipe } {\n\t\tconst importedPipes = meta.imports.map((importMeta: IModuleMeta) => this.resolvePipes(importMeta, true));\n\t\tconst pipes = {};\n\t\tconst pipeList: (typeof Pipe)[] = (exported ? meta.exports : meta.declarations).filter((x: typeof Pipe) => x.prototype instanceof Pipe) as (typeof Pipe)[];\n\t\tpipeList.forEach(pipeFactory => pipes[pipeFactory.meta.name] = pipeFactory);\n\t\treturn Object.assign({}, ...importedPipes, pipes);\n\t}\n\n\tstatic resolveFactories(meta: IModuleMeta, exported?: boolean): (typeof Factory)[] {\n\t\tconst importedFactories = meta.imports.map((importMeta: IModuleMeta) => this.resolveFactories(importMeta, true));\n\t\tconst factoryList: (typeof Factory | typeof Pipe)[] = (exported ? meta.exports : meta.declarations).filter(x => (x.prototype instanceof Structure || x.prototype instanceof Component || x.prototype instanceof Directive));\n\t\treturn Array.prototype.concat.call(factoryList, ...importedFactories);\n\t}\n\n\tstatic sortFactories(factories: (typeof Factory)[]): void {\n\t\tfactories.sort((a, b) => {\n\t\t\tconst ai = ORDER.reduce((p, c, i) => a.prototype instanceof c ? i : p, -1);\n\t\t\tconst bi = ORDER.reduce((p, c, i) => b.prototype instanceof c ? i : p, -1);\n\t\t\t// return ai - bi;\n\t\t\tconst o = ai - bi;\n\t\t\tif (o === 0) {\n\t\t\t\treturn (a.meta.hosts ? 1 : 0) - (b.meta.hosts ? 1 : 0);\n\t\t\t}\n\t\t\treturn o;\n\t\t});\n\t}\n\n\tstatic getExpressions(selector: string): MatchFunction[] {\n\t\tlet matchers = [];\n\t\tselector.replace(/\\.([\\w\\-\\_]+)|\\[(.+?\\]*)(\\=)(.*?)\\]|\\[(.+?\\]*)\\]|([\\w\\-\\_]+)/g, function (value: string, c1, a2, u3, v4, a5, e6) {\n\t\t\tif (c1) {\n\t\t\t\tmatchers.push(function (node) {\n\t\t\t\t\treturn node.classList.contains(c1);\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (a2) {\n\t\t\t\tmatchers.push(function (node) {\n\t\t\t\t\treturn (node.hasAttribute(a2) && node.getAttribute(a2) === v4) ||\n\t\t\t\t\t\t(node.hasAttribute(`[${a2}]`) && node.getAttribute(`[${a2}]`) === v4);\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (a5) {\n\t\t\t\tmatchers.push(function (node) {\n\t\t\t\t\treturn node.hasAttribute(a5) || node.hasAttribute(`[${a5}]`);\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (e6) {\n\t\t\t\tmatchers.push(function (node) {\n\t\t\t\t\treturn node.nodeName.toLowerCase() === e6.toLowerCase();\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn '';\n\t\t});\n\t\treturn matchers;\n\t}\n\n\tstatic unwrapSelectors(factories: (typeof Factory)[]): SelectorFunction[] {\n\t\tconst selectors: SelectorFunction[] = [];\n\t\tfactories.forEach((factory: typeof Factory) => {\n\t\t\tfactory.meta.selector.split(',').forEach((selector: string) => {\n\t\t\t\tselector = selector.trim();\n\t\t\t\tlet excludes: MatchFunction[] = [];\n\t\t\t\tconst matchSelector = selector.replace(/\\:not\\((.+?)\\)/g, (value, unmatchSelector) => {\n\t\t\t\t\texcludes = this.getExpressions(unmatchSelector);\n\t\t\t\t\treturn '';\n\t\t\t\t});\n\t\t\t\tconst includes: MatchFunction[] = this.getExpressions(matchSelector);\n\t\t\t\tselectors.push((node) => {\n\t\t\t\t\tconst included = includes.reduce((p, match) => {\n\t\t\t\t\t\treturn p && match(node);\n\t\t\t\t\t}, true);\n\t\t\t\t\tconst excluded = excludes.reduce((p, match) => {\n\t\t\t\t\t\treturn p || match(node);\n\t\t\t\t\t}, false);\n\t\t\t\t\tif (included && !excluded) {\n\t\t\t\t\t\treturn { node, factory, selector } as ISelectorResult;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t\treturn selectors;\n\t}\n\n\tstatic isBrowser(): boolean {\n\t\treturn Boolean(window);\n\t}\n\n\t// static isServer() {}\n\n}\n","import Platform from './platform';\n\nexport default class Browser extends Platform { }\n","import { Browser, Component, CoreModule, Module, Pipe } from '../../src/rxcomp';\n\nclass RootComponent extends Component {\n\ttime: Date = new Date();\n\tvalue: number = 2;\n}\nRootComponent.meta = {\n\tselector: '[root-component]',\n};\n\nclass TimePipe extends Pipe {\n\tstatic transform(value, options = 1) {\n\t\tconst date = new Date(value);\n\t\treturn `${date.getHours()}:${date.getMinutes()}`;\n\t}\n}\nTimePipe.meta = {\n\tname: 'time',\n};\n\nclass MultPipe extends Pipe {\n\tstatic transform(value, mult1 = 2, mult2 = 1) {\n\t\treturn Number(value) * Number(mult1) * Number(mult2);\n\t}\n}\nMultPipe.meta = {\n\tname: 'mult',\n};\n\nclass AppModule extends Module { }\nAppModule.meta = {\n\timports: [\n\t\tCoreModule\n\t],\n\tdeclarations: [\n\t\tTimePipe,\n\t\tMultPipe\n\t],\n\tbootstrap: RootComponent,\n};\n\nBrowser.bootstrap(AppModule);\n"]}