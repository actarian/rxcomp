{"version":3,"sources":["web/client/js/test.pipes.ts","../../src/core/factory.ts","../../src/core/directive.ts","../../src/class/class.directive.ts","../../src/error/error.ts","../../src/event/event.directive.ts","../../src/core/structure.ts","../../src/core/component.ts","../../src/core/context.ts","../../src/for/for.item.ts","../../src/for/for.structure.ts","../../src/href/href.directive.ts","../../src/if/if.structure.ts","../../src/inner-html/inner-html.directive.ts","../../src/json/json.component.ts","../../src/core/pipe.ts","../../src/platform/platform.ts","../../src/platform/common/serializer/serializer.ts","../../src/json/json.pipe.ts","../../src/module/module.ts","../../src/src/src.directive.ts","../../src/style/style.directive.ts","../../src/core.module.ts","../../src/platform/browser.ts","../../web/client/js/test.pipes.ts"],"names":["rxjs","operators","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","Constructor","protoProps","staticProps","prototype","_inheritsLoose","subClass","superClass","create","constructor","__proto__","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","_setPrototypeOf","p","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","toString","call","e","_construct","Parent","args","Class","a","push","apply","instance","Function","bind","arguments","_wrapNativeSuper","_cache","Map","undefined","fn","indexOf","TypeError","has","get","set","Wrapper","this","value","CONTEXTS","NODES","Factory","rxcompId","unsubscribe$","Subject","changes$","ReplaySubject","_proto","onInit","onChanges","changes","onView","onDestroy","pushChanges","getContext","module","instances","next","Directive","_Factory","ClassDirective","_this","_Directive","class","keys","_this2","node","classList","forEach","object","split","concat","setAttribute","join","selector","inputs","ModuleError","_Error","Error","ExpressionError","_Error2","error","expression","params","message","name","template","outerHTML","ErrorInterceptorHandler","interceptor","handle","intercept","DefaultErrorHandler","of","ErrorInterceptors","nextError$","errors$","pipe","switchMap","reduceRight","tap","console","EventDirective","event","_getContext","parentInstance","replace","event$","fromEvent","shareReplay","getAttribute","outputFunction","makeFunction","takeUntil","subscribe","resolve","Structure","Component","parse","RESERVED_PROPERTIES","Context","descriptors","_Component","mergeDescriptors","defineProperties","self","ReferenceError","_assertThisInitialized","context","filter","source","properties","getOwnPropertyNames","_loop","shift","hasOwnProperty","getOwnPropertyDescriptor","_len","ForItem","$key","$value","index","count","_Context","even","ForStructure","_Structure","forbegin","document","createComment","parentNode","replaceChild","forend","insertBefore","nextSibling","removeAttribute","token","getExpressionToken","forFunction","iterable","result","isArray","Array","array","total","previous","Math","max","clonedNode","cloneNode","makeInstance","compile","removeChild","remove","trim","expressions","map","x","forExpressions","keyValueMatches","match","indexExpressions","HrefDirective","href","href_","IfStructure","ifbegin","ifend","ifFunction","element","InnerHtmlDirective","innerHTML","innerHTML_","JsonComponent","active","onToggle","Pipe","transform","ORDER","Platform","bootstrap","moduleFactory","meta","resolveMeta","imports","querySelector","resolveImportedMeta","nodeInnerHTML","pipes","resolvePipes","factories","resolveFactories","sortFactories","unshift","selectors","unwrapSelectors","assign","declarations","exports","exported","importedPipes","importMeta","pipeFactory","_Array$prototype$conc","_this3","importedFactories","factoryList","sort","b","reduce","c","hosts","getExpressions","matchers","c1","a2","u3","v4","a5","e6","contains","hasAttribute","nodeName","toLowerCase","_this4","factory","excludes","matchSelector","unmatchSelector","includes","included","excluded","PLATFORM_BROWSER","window","isPlatformBrowser","navigator","userAgent","process","versions","Serializer","encode","encoders","encodeJson","decode","decoders","decodeJson","encodeBase64","decodeBase64","circularRef","space","decoded","pool","JSON","stringify","encoded","btoa","Buffer","from","atob","JsonPipe","_Pipe","ID","Module","componentNode","querySelectorsAll","inject","getParentInstance","makeContext","makeHosts","makeInputs","outputs","makeOutputs","resolveInputsOutputs","parseExpression","nextError","expressionError","payload","childNodes","child","nodeType","getParsableContextByNode","text","parseTextNode","keepInstance","keepContext","traverseDown","deleteContext","destroy","complete","getInstance","global","getContextByNode","traverseUp","nodeExpressions","parseTextNodeExpression","wholeText","replacedText","nodeValue","textNode","createTextNode","pushFragment","to","fragment","substring","matches","regex","lastIndex","exec","find","getHost","nodeContexts","makeInput","input","_this5","makeOutput","_this6","output$","_this7","output","inputFunction","rx1","parsePipes","parseOptionalChaining","parsePipeParams","func","segments","word","block","t","substr","tokens","rxcompNodeId","id","keepContexts","matchSelectors","results","selectorResult","selectorResults","callback","j","traversePrevious","previousSibling","traverseNext","current","SrcDirective","src","src_","StyleDirective","style","previousStyle","propertyName","removeProperty","splitted","setProperty","CoreModule","_Module","Browser","_Platform","rxcomp_hydrate_","_meta$node$parentNode","RootComponent","time","TimePipe","options","date","getHours","getMinutes","MultPipe","_Pipe2","mult1","mult2","Number","AppModule"],"mappings":";;;;;CAMC,SAASA,EAAKC,GAAW,aAAa,SAASC,EAAkBC,EAAQC,GACxE,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CACrC,IAAIE,EAAaH,EAAMC,GACvBE,EAAWC,WAAaD,EAAWC,aAAc,EACjDD,EAAWE,cAAe,EACtB,UAAWF,IAAYA,EAAWG,UAAW,GACjDC,OAAOC,eAAeT,EAAQI,EAAWM,IAAKN,IAIlD,SAASO,EAAaC,EAAaC,EAAYC,GAG7C,OAFID,GAAYd,EAAkBa,EAAYG,UAAWF,GACrDC,GAAaf,EAAkBa,EAAaE,GACzCF,EAGT,SAASI,EAAeC,EAAUC,GAChCD,EAASF,UAAYP,OAAOW,OAAOD,EAAWH,WAC9CE,EAASF,UAAUK,YAAcH,EACjCA,EAASI,UAAYH,EAGvB,SAASI,EAAgBC,GAIvB,OAHAD,EAAkBd,OAAOgB,eAAiBhB,OAAOiB,eAAiB,SAAyBF,GACzF,OAAOA,EAAEF,WAAab,OAAOiB,eAAeF,KAEvBA,GAGzB,SAASG,EAAgBH,EAAGI,GAM1B,OALAD,EAAkBlB,OAAOgB,gBAAkB,SAAyBD,EAAGI,GAErE,OADAJ,EAAEF,UAAYM,EACPJ,IAGcA,EAAGI,GAG5B,SAASC,IACP,GAAuB,oBAAZC,UAA4BA,QAAQC,UAAW,OAAO,EACjE,GAAID,QAAQC,UAAUC,KAAM,OAAO,EACnC,GAAqB,mBAAVC,MAAsB,OAAO,EAExC,IAEE,OADAC,KAAKlB,UAAUmB,SAASC,KAAKN,QAAQC,UAAUG,KAAM,IAAI,iBAClD,EACP,MAAOG,GACP,OAAO,GAIX,SAASC,EAAWC,EAAQC,EAAMC,GAchC,OAZEH,EADET,IACWC,QAAQC,UAER,SAAoBQ,EAAQC,EAAMC,GAC7C,IAAIC,EAAI,CAAC,MACTA,EAAEC,KAAKC,MAAMF,EAAGF,GAChB,IACIK,EAAW,IADGC,SAASC,KAAKH,MAAML,EAAQG,IAG9C,OADID,GAAOd,EAAgBkB,EAAUJ,EAAMzB,WACpC6B,IAIOD,MAAM,KAAMI,WAOhC,SAASC,EAAiBR,GACxB,IAAIS,EAAwB,mBAARC,IAAqB,IAAIA,SAAQC,EA8BrD,OA5BAH,EAAmB,SAA0BR,GAC3C,GAAc,OAAVA,IARmBY,EAQkBZ,GAPqB,IAAzDK,SAASX,SAASC,KAAKiB,GAAIC,QAAQ,kBAOS,OAAOb,EAR5D,IAA2BY,EAUvB,GAAqB,mBAAVZ,EACT,MAAM,IAAIc,UAAU,sDAGtB,QAAsB,IAAXL,EAAwB,CACjC,GAAIA,EAAOM,IAAIf,GAAQ,OAAOS,EAAOO,IAAIhB,GAEzCS,EAAOQ,IAAIjB,EAAOkB,GAGpB,SAASA,IACP,OAAOrB,EAAWG,EAAOO,UAAWzB,EAAgBqC,MAAMvC,aAW5D,OARAsC,EAAQ3C,UAAYP,OAAOW,OAAOqB,EAAMzB,UAAW,CACjDK,YAAa,CACXwC,MAAOF,EACPrD,YAAY,EACZE,UAAU,EACVD,cAAc,KAGXoB,EAAgBgC,EAASlB,KAGVA,GC1GnB,IAAMqB,EAAwC,GACxCC,EAAuC,GAE/BC,EAAAA,WAiBpB,SAAAA,IAfAJ,KAAAK,UAAoB,EACpBL,KAAAM,aAA8B,IAAIC,EAAAA,QAClCP,KAAAQ,SAAmC,IAAIC,EAAAA,cAAc,GDsHpD,IAAIC,EAASN,EAAQhD,UAoBrB,OAlBAsD,ECvHDC,OAAA,aDyHCD,ECxHDE,UAAA,SAAUC,KD0HTH,ECzHDI,OAAA,aD2HCJ,EC1HDK,UAAA,aD4HCL,EC3HDM,YAAA,WACoBC,EAAWjB,MAAtBkB,OACGC,YACVnB,KAAKQ,SAASY,KAAKpB,MACnBA,KAAKc,WDiICV,EC9IYA,GDgJrB,SC5HgBa,EAAWhC,GAC1B,OAAOiB,EAASjB,EAASoB,UACzB,IC1BoBgB,EAAAA,SAAAA,GFyJnB,SAASA,IACP,OAAOC,EAAStC,MAAMgB,KAAMZ,YAAcY,KAG5C,OANA3C,EAAegE,EAAWC,GAMnBD,EE7JYA,CAAkBjB,GCElBmB,EAAAA,SAAAA,GAArB,SAAAA,IHgKI,IAAIC,EAKJ,OAHAA,EAAQC,EAAWzC,MAAMgB,KAAMZ,YAAcY,MGjKhD0B,MAAmD,GACnDF,EAAAG,KAAiB,GHmKPH,EARTnE,EAAekE,EAAgBE,GAW/B,IAAIf,EAASa,EAAenE,UAkC5B,OAhCAsD,EGvKDC,OAAA,WHwKG,IAAIiB,EAAS5B,KGvKEiB,EAAWjB,MAApB6B,KACHC,UAAUC,SAAQ,SAAC9B,GACvB2B,EAAKD,KAAK5C,KAAKkB,OH+KhBS,EG5KDE,UAAA,WH6KG,IG5KMiB,EAASZ,EAAWjB,MAApB6B,KACJF,EAAiB,GACfK,EAAShC,KAAK0B,MACpB,GAAsB,iBAAXM,EACV,IAAK,IAAIjF,KAAOiF,EACXA,EAAOjF,IACV4E,EAAK5C,KAAKhC,OAGgB,iBAAXiF,IACjBL,EAAOK,EAAOC,MAAM,QAErBN,EAAOA,EAAKO,OAAOlC,KAAK2B,MAExBE,EAAKM,aAAa,QAASR,EAAKS,KAAK,OHkL9Bb,EG1MYA,CAAuBF,GA2BpCE,EAAAA,KAAqB,CAC3Bc,SAAQ,YACRC,OAAQ,CAAC,UAFH,IC1BKC,EAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAAxD,MAAAgB,KAAAZ,YAAAY,KAAA,OAAA3C,EAAAkF,EAAAC,GAAAD,EAAA,CAAAlD,EAAiCoD,QAEpBC,EAAb,SAAAC,GAOC,SAAAD,EAAYE,EAAc1B,EAAgBjC,EAAmB4D,EAAoBC,GJkN9E,IAAItB,EIjNAuB,EAAO,sBAAiC9D,EAASxB,YAAYuF,KAAtD,KAA+DH,EAA/D,UACXD,EAAMG,SACRvB,EAAAmB,EAAAnE,KAAAwB,KAAM+C,IAAN/C,MACKgD,KAAOJ,EAAMI,KAElBxB,EAAKN,OAASA,EACdM,EAAKvC,SAAWA,EAChBuC,EAAKqB,WAAaA,EAClBrB,EAAKsB,OAASA,EJmNZ,IIlNMjB,EAASZ,EAAWhC,GAApB4C,KJsNN,OIrNFL,EAAKyB,SAAWpB,EAAKqB,UJqNZ1B,EIvOX,OAAAnE,EAAAqF,EAAAC,GAAAD,EAAA,CAAArD,EAAqCoD,QA8BxBU,EAAb,WACC,SAAAA,EACS/B,EACAgC,GADApD,KAAAoB,KAAAA,EACApB,KAAAoD,YAAAA,EAHV,OAAAD,EAAA/F,UAKCiG,OAAA,SAAOT,GACN,OAAO5C,KAAKoD,YAAYE,UAAUV,EAAO5C,KAAKoB,OANhD+B,EAAA,GAoBaI,EAAb,WAAA,SAAAA,KAAA,OAAAA,EAAAnG,UACCiG,OAAA,SAAOT,GAMN,OAAOY,EAAAA,GAAGZ,IAPZW,EAAA,GAWaE,EAAyC,GAEzCC,EAAmC,IAAIjD,EAAAA,cAAqB,GAC5DkD,EAAoCD,EAAWE,KAU3DC,EAAAA,WAAU,SAACjB,GAIV,OAH6Ba,EAAkBK,aAAY,SAAC1C,EAAqBgC,GAChF,OAAO,IAAID,EAAwB/B,EAAMgC,KACvC,IAAIG,GACMF,OAAOT,MAErBmB,EAAAA,KAAI,SAACnB,GACAA,GACHoB,QAAQpB,MAAMA,OCjFIqB,EAAAA,SAAAA,GAArB,SAAAA,ILqRI,IAAIzC,EAIJ,OAFAA,EAAQC,EAAWzC,MAAMgB,KAAMZ,YAAcY,MKtRhDkE,MAAgB,GLwRN1C,EA0BT,OAjCAnE,EAAe4G,EAAgBxC,GAUlBwC,EAAe7G,UK1R7BuD,OAAA,WL6RG,IAAIwD,EK5R6ClD,EAAWjB,MAAtDkB,EAAAA,EAAAA,OAAQW,EAAAA,EAAAA,KAAMuC,EAAAA,EAAAA,eAAgB/B,EAAAA,EAAAA,SAEhC6B,EAAQlE,KAAKkE,MAAQ7B,EAASgC,QAAQ,eAAgB,IACtDC,EAA4BC,EAAAA,UAAiB1C,EAAMqC,GAAON,KAAKY,EAAAA,YAAY,IAC3E3B,EAAahB,EAAK4C,aAAL,IAAsBP,EAAtB,KACnB,GAAIrB,EAAY,CACf,IAAM6B,EAAiBxD,EAAOyD,aAAa9B,EAAY,CAAC,WACxDyB,EAAOV,KACNgB,EAAAA,UAAU5E,KAAKM,eACduE,WAAU,SAAAX,GACXhD,EAAO4D,QAAQJ,EAAgBN,EAAgBF,WAGhDE,EAAkBF,EAAJ,KAAgBI,GLmSxBL,EKnTYA,CAAuB5C,GAoBpC4C,EAAAA,KAAqB,CAC3B5B,SAAQ,KAvBK,CAAC,YAAa,UAAW,YAAa,QAAS,WAAY,YAAa,WAAY,aAAc,aAAc,cAAe,aAAc,YAAa,WAAY,UAAW,QAAS,QAAS,SAAU,UAuBpMD,KAAK,SAAnB,MADF,IC1Ba2C,EAAAA,SAAAA,GNgUnB,SAASA,IACP,OAAOzD,EAAStC,MAAMgB,KAAMZ,YAAcY,KAG5C,OANA3C,EAAe0H,EAAWzD,GAMnByD,EMpUYA,CAAkB3E,GCClB4E,EAAAA,SAAAA,GPuUnB,SAASA,IACP,OAAO1D,EAAStC,MAAMgB,KAAMZ,YAAcY,KAiB5C,OApBA3C,EAAe2H,EAAW1D,GAMb0D,EAAU5H,UOzUxB4D,YAAA,WP4UG,IAAImD,EO3UmBlD,EAAWjB,MAA5BkB,EAAAA,EAAAA,OAAQW,EAAAA,EAAAA,KACZX,EAAOC,YAEVnB,KAAKQ,SAASY,KAAKpB,MAGnBkB,EAAO+D,MAAMpD,EAAM7B,MAEnBA,KAAKc,WP8UCkE,EOzVYA,CAAkB5E,GCCjC8E,EAAsB,CAAC,cAAe,WAAY,SAAU,YAAa,YAAa,cAAe,WAAY,gBAElGC,EAAAA,SAAAA,GAEpB,SAAAA,EAAYf,EAAyBgB,GR2VlC,IAAI5D,EAUJ,YQrWkC4D,IAAAA,IAAAA,EAAqD,IACzF5D,EAAA6D,EAAA7G,KAAAwB,OAAAA,KACAoF,EAAcD,EAAQG,iBAAiBlB,EAAgBA,EAAgBgB,GACvEA,EAAcD,EAAQG,iBAAiBzI,OAAOiB,eAAesG,GAAiBA,EAAgBgB,GAC9FvI,OAAO0I,iBRoGT,SAAgCC,GAC9B,QAAa,IAATA,EACF,MAAM,IAAIC,eAAe,6DAG3B,OAAOD,EQzGPE,CAAAlE,GAA8B4D,GRiWrB5D,EA2DT,OAxEAnE,EAAe8H,EAASE,GAgBXF,EAAQ/H,UQjWtB4D,YAAA,WRoWG,IAAIY,EAAS5B,KQnWT2F,EAAU1E,EAAWjB,MACtB2F,EAAQhE,OACZgE,EAAQhE,KAAO9E,OAAO8E,KAAKgE,EAAQvB,gBAAgBwB,QAAO,SAAA7I,GAAG,OAA0C,IAAtCmI,EAAoBxF,QAAQ3C,OAG1F4I,EAAQzE,OAAOC,WAClBwE,EAAQhE,KAAKI,SAAQ,SAAAhF,GACpB6E,EAAK7E,GAAO4I,EAAQvB,eAAerH,MAGrCsI,EAAAjI,UAAM4D,YAANxC,KAAAwB,OR4WAmF,EQzWMG,iBAAP,SAAwBO,EAAgB5G,EAAmBmG,QAAAA,IAAAA,IAAAA,EAAqD,IAE/G,IADA,IAAMU,EAAuBjJ,OAAOkJ,oBAAoBF,GR+WlDG,EAAQ,WQ7Wb,IAAMjJ,EAAc+I,EAAWG,QAC/B,IAA0C,IAAtCf,EAAoBxF,QAAQ3C,KAAgBqI,EAAYc,eAAenJ,GAAM,CAChF,IAAMN,EAAiCI,OAAOsJ,yBAAyBN,EAAQ9I,GAChD,mBAApBN,EAAWwD,QACrBxD,EAAWwD,MAAQ,WRiXZ,IAAK,IAAImG,EAAOhH,UAAU5C,OQjXVoC,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GACtB,OAAOK,EAASlC,GAAKiC,MAAMC,EAAUL,KAGvCwG,EAAYrI,GAAON,IATdqJ,EAAWtJ,QAAQwJ,IAY1B,OAAOZ,GR6XAD,EQlaYA,CAAgBH,GCHhBqB,EAAAA,SAAAA,GAKpB,SAAAA,EAAYtJ,EAAauJ,EAAuBrG,EAAesG,EAAaC,EAAeC,EAAerC,GTqavG,IAAI5C,EAOJ,OS1aFA,EAAAkF,EAAAlI,KAAAwB,KAAMoE,IAANpE,MAqBKjD,GAAOuJ,EACZ9E,EAAKvB,GAASsG,EACd/E,EAAKgF,MAAQA,EACbhF,EAAKiF,MAAQA,ETkZJjF,EAyBT,OAnCAnE,EAAegJ,EAASK,GAaxB1J,EAAaqJ,EAAS,CAAC,CACrBtJ,IAAK,QACL8C,IAAK,WSrZe,OAAsB,IAAfG,KAAKwG,QTwZ/B,CACDzJ,IAAK,OACL8C,IAAK,WSzZc,OAAOG,KAAKwG,QAAUxG,KAAKyG,MAAQ,IT4ZrD,CACD1J,IAAK,OACL8C,IAAK,WS7Zc,OAAOG,KAAKwG,MAAQ,GAAM,ITga5C,CACDzJ,IAAK,MACL8C,IAAK,WSjaa,OAAQG,KAAK2G,STsa1BN,ES1cYA,CAAgBlB,GCGhByB,EAAAA,SAAAA,GAArB,SAAAA,IV4cI,IAAIpF,EAIJ,OAFAA,EAAQqF,EAAW7H,MAAMgB,KAAMZ,YAAcY,MU7chDmB,UAAuB,GV+cbK,EAPTnE,EAAeuJ,EAAcC,GAU7B,IAAInG,EAASkG,EAAaxJ,UA8G1B,OA5GAsD,EUhdDC,OAAA,WVidG,IAAIwD,EUhdmBlD,EAAWjB,MAA5BkB,EAAAA,EAAAA,OAAQW,EAAAA,EAAAA,KACViF,EAAqBC,SAASC,cAAT,cAC3BF,EAASzG,SAAWwB,EAAKxB,SACzBwB,EAAKoF,WAAYC,aAAaJ,EAAUjF,GACxC,IAAMsF,EAAmBnH,KAAKmH,OAASJ,SAASC,cAAT,YACvCF,EAASG,WAAYG,aAAaD,EAAQL,EAASO,aACnD,IAAMxE,EAAqBhB,EAAK4C,aAAa,QAC7C5C,EAAKyF,gBAAgB,QACrB,IAAMC,EAAQvH,KAAKuH,MAAQvH,KAAKwH,mBAAmB3E,GACnD7C,KAAKyH,YAAcvG,EAAOyD,aAAa4C,EAAMG,WVsd7ChH,EUpdDE,UAAA,SAAUC,GAWT,IAVA,IAAM8E,EAAoB1E,EAAWjB,MAC/BkB,EAAiByE,EAAQzE,OACzBW,EAAiB8D,EAAQ9D,KAEzB0F,EAA0BvH,KAAKuH,MACjCI,EAASzG,EAAO4D,QAAQ9E,KAAKyH,YAAc5G,EAASb,OAAS,GAC3D4H,EAAUC,MAAMD,QAAQD,GACxBG,EAAeF,EAAUD,EAAS9K,OAAO8E,KAAKgG,GAC9CI,EAAgBD,EAAMtL,OACtBwL,EAAmBhI,KAAKmB,UAAU3E,OAC/BD,EAAY,EAAGA,EAAI0L,KAAKC,IAAIF,EAAUD,GAAQxL,IACtD,GAAIA,EAAIwL,EAAO,CACd,IAAMhL,EAAuB6K,EAAUrL,EAAIuL,EAAMvL,GAC3C0D,EAAa2H,EAAUE,EAAM/K,GAAiB4K,EAAO5K,GAC3D,GAAIR,EAAIyL,EAAU,CAEjB,IAAM/I,EAAoBe,KAAKmB,UAAU5E,GACzC0C,EAASsI,EAAMxK,KAAOA,EACtBkC,EAASsI,EAAMtH,OAASA,MAUlB,CAEN,IAAMkI,EAAuBtG,EAAKuG,WAAU,UACrCD,EAAW9H,SAClBL,KAAKmH,OAAQF,WAAYG,aAAae,EAAYnI,KAAKmH,QAEvD,IAAMvI,EAAO,CAAC2I,EAAMxK,IAAKA,EAAKwK,EAAMtH,MAAOA,EAAO1D,EAAGwL,EAAOpC,EAAQvB,gBAC9DnF,EAAWiC,EAAOmH,aAAaF,EAAY9B,EAASV,EAAQtD,SAAUsD,EAAQvB,eAAgBxF,GAChGK,IAIHiC,EAAOoH,QAAQH,EAAYlJ,GAE3Be,KAAKmB,UAAUpC,KAAKE,SAGhB,CAEN,IACQ4C,EAASZ,EADSjB,KAAKmB,UAAU5E,IACjCsF,KACRA,EAAKoF,WAAYsB,YAAY1G,GAC7BX,EAAOsH,OAAO3G,GAGhB7B,KAAKmB,UAAU3E,OAASsL,EAAMtL,QV8c9BkE,EU3cD8G,mBAAA,SAAmB3E,GAClB,GAAmB,OAAfA,EACH,MAAM,IAAIJ,MAAM,eAEjB,IAA2C,IAAvCI,EAAW4F,OAAO/I,QAAQ,UAAyD,IAAvCmD,EAAW4F,OAAO/I,QAAQ,QACzE,MAAM,IAAI+C,MAAM,eAEjB,IAAMiG,EAAwB7F,EAAWZ,MAAM,KAAK0G,KAAI,SAAAC,GAAC,OAAIA,EAAEH,UAAQ7C,QAAO,SAAAgD,GAAC,MAAU,KAANA,KAC7EC,EAA2BH,EAAY,GAAGzG,MAAM,QAAQ0G,KAAI,SAAAC,GAAC,OAAIA,EAAEH,UACrExI,EAAgB4I,EAAe,GAAGxE,QAAQ,YAAa,IACrDqD,EAAmBmB,EAAe,GACpC9L,EAAc,QACZ+L,EAA2C7I,EAAM8I,MAAM,uBAK7D,GAJID,IACH/L,EAAM+L,EAAgB,GACtB7I,EAAQ6I,EAAgB,IAErBJ,EAAYlM,OAAS,EAAG,CAC3B,IAAMwM,EAA6BN,EAAY,GAAGzG,MAAM,0BAA0B0G,KAAI,SAAAC,GAAC,OAAIA,EAAEH,UAC7D,IAA5BO,EAAiBxM,SACpBO,EAAMiM,EAAiB,IAGzB,MAAO,CAAEjM,IAAAA,EAAKkD,MAAAA,EAAOyH,SAAAA,IVgedd,EUjkBYA,CAAqB7B,GAmGlC6B,EAAAA,KAAqB,CAC3BvE,SAAU,UADJ,ICrGa4G,EAAAA,SAAAA,GX0kBnB,SAASA,IACP,OAAOxH,EAAWzC,MAAMgB,KAAMZ,YAAcY,KAoB9C,OAvBA3C,EAAe4L,EAAexH,GAM9BzE,EAAaiM,EAAe,CAAC,CAC3BlM,IAAK,OACL+C,IAAK,SW/kBCoJ,GACR,GAAIlJ,KAAKmJ,QAAUD,EAAM,CACxBlJ,KAAKmJ,MAAQD,EADW,IAEhBrH,EAASZ,EAAWjB,MAApB6B,KACRqH,EAAOrH,EAAKM,aAAa,OAAQ+G,GAAQrH,EAAKyF,gBAAgB,UXqlB7DzH,IAAK,WWjlBP,OAAOG,KAAKmJ,UXslBLF,EW/lBYA,CAAsB5H,GAWnC4H,EAAAA,KAAqB,CAC3B5G,SAAU,WACVC,OAAQ,CAAC,SAFH,ICXa8G,EAAAA,SAAAA,GZumBnB,SAASA,IACP,OAAOvC,EAAW7H,MAAMgB,KAAMZ,YAAcY,KAH9C3C,EAAe+L,EAAavC,GAM5B,IAAInG,EAAS0I,EAAYhM,UA0CzB,OAxCAsD,EYxmBDC,OAAA,WZymBG,IAAIwD,EYxmBmBlD,EAAWjB,MAA5BkB,EAAAA,EAAAA,OAAQW,EAAAA,EAAAA,KACVwH,EAAoBrJ,KAAKqJ,QAAUtC,SAASC,cAAT,aACzCqC,EAAQhJ,SAAWwB,EAAKxB,SACxBwB,EAAKoF,WAAYC,aAAamC,EAASxH,GACvC,IAAMyH,EAAQtJ,KAAKsJ,MAAQvC,SAASC,cAAT,WAC3BqC,EAAQpC,WAAYG,aAAakC,EAAOD,EAAQhC,aAChD,IAAMxE,EAAahB,EAAK4C,aAAa,OACrCzE,KAAKuJ,WAAarI,EAAOyD,aAAa9B,GACtC,IAAMsF,EAAatG,EAAKuG,WAAU,GAClCD,EAAWb,gBAAgB,OAC3BtH,KAAKmI,WAAaA,EAClBnI,KAAKwJ,QAAUrB,EAAWC,WAAU,IZ8mBpC1H,EY3mBDE,UAAA,SAAUC,GZ4mBP,IY3mBMK,EAAWD,EAAWjB,MAAtBkB,OAEFjB,EAAQiB,EAAO4D,QAAQ9E,KAAKuJ,WAAa1I,EAASb,MAClDwJ,EAAoBxJ,KAAKwJ,QAC/B,GAAIvJ,GACH,IAAKuJ,EAAQvC,WAAY,CACxB,IAAMqC,EAAQtJ,KAAKsJ,MACnBA,EAAMrC,WAAYG,aAAaoC,EAASF,GACxCpI,EAAOoH,QAAQkB,SAGZA,EAAQvC,aACX/F,EAAOsH,OAAOgB,EAASxJ,MACvBwJ,EAAQvC,WAAWsB,YAAYiB,GAC/BxJ,KAAKwJ,QAAUxJ,KAAKmI,WAAYC,WAAU,KZknBrCgB,EYrpBYA,CAAoBrE,GAuCjCqE,EAAAA,KAAqB,CAC3B/G,SAAU,SADJ,ICvCaoH,EAAAA,SAAAA,Gb4pBnB,SAASA,IACP,OAAOhI,EAAWzC,MAAMgB,KAAMZ,YAAcY,KAoB9C,OAvBA3C,EAAeoM,EAAoBhI,GAMnCzE,EAAayM,EAAoB,CAAC,CAChC1M,IAAK,YACL+C,IAAK,SajqBM4J,GACT1J,KAAK2J,aAAeD,IACvB1J,KAAK2J,WAAaD,EACDzI,EAAWjB,MAApB6B,KACH6H,UAAyBlK,MAAbkK,EAAyB,GAAKA,IbuqB9C7J,IAAK,WanqBP,OAAOG,KAAK2J,ebwqBLF,EajrBYA,CAA2BpI,GAWxCoI,EAAAA,KAAqB,CAC3BpH,SAAQ,cACRC,OAAQ,CAAC,cAFH,ICZasH,EAAAA,SAAAA,GAArB,SAAAA,Id2rBI,IAAIpI,EAIJ,OAFAA,EAAQ6D,EAAWrG,MAAMgB,KAAMZ,YAAcY,Mc5rBhD6J,QAAkB,Ed8rBRrI,EAUT,OAjBAnE,EAAeuM,EAAevE,GAUjBuE,EAAcxM,UchsB5B0M,SAAA,WACC9J,KAAK6J,QAAU7J,KAAK6J,OACpB7J,KAAKgB,edqsBE4I,EczsBYA,CAAsB5E,GAMnC4E,EAAAA,KAAqB,CAC3BvH,SAAU,iBACVC,OAAQ,CAAC,QACTW,SAAQ,oeAHF,ICPa8G,EAAAA,WfitBnB,SAASA,KAMT,OAJAA,EeltBMC,UAAP,SAAiB/J,GAChB,OAAOA,GfqtBA8J,EevtBYA,GCOfE,EAAqB,CAAClF,EAAWC,EAAW3D,GAE7B6I,EAAAA,WhBktBnB,SAASA,KAoMT,OAlMAA,EgB9sBMC,UAAP,SAAiBC,GAChB,IAAKA,EACJ,MAAM,IAAI7H,EAAY,yBAEvB,IAAK6H,EAAcC,KAClB,MAAM,IAAI9H,EAAY,8BAEvB,IAAK6H,EAAcC,KAAKF,UACvB,MAAM,IAAI5H,EAAY,qBAEvB,IAAK6H,EAAcC,KAAKF,UAAUE,KACjC,MAAM,IAAI9H,EAAY,0BAEvB,IAAK6H,EAAcC,KAAKF,UAAUE,KAAKhI,SACtC,MAAM,IAAIE,EAAY,mCAEvB,IAAM8H,EAA0BrK,KAAKsK,YAAYF,GAC3ClJ,EAAiB,IAAIkJ,EAS3B,OARAlJ,EAAOmJ,KAAOA,EACdA,EAAKE,QAAQxI,SAAQ,SAACqI,GACrBA,EAAchN,UAAUK,YAAYe,KAAK0C,MAMnCA,GhBktBPgJ,EgB/sBgBM,cAAP,SAAqBnI,GAC9B,OAAO0E,SAASyD,cAAcnI,IhBktB9B6H,EgB/sBgBI,YAAP,SAAmBF,GAC5B,IAAMC,EAAkCrK,KAAKyK,oBAAoBL,GAC3DD,EAA4BC,EAAcC,KAAKF,UAC/CtI,EAAO7B,KAAKwK,cAAcL,EAAUE,KAAKhI,UAC/C,IAAKR,EACJ,MAAM,IAAIU,EAAJ,gBAAgC4H,EAAUE,KAAKhI,UAEtD,IAAMqI,EAAgB7I,EAAK6H,UACrBiB,EAAQ3K,KAAK4K,aAAaP,GAC1BQ,EAAY7K,KAAK8K,iBAAiBT,GAIxC,OAHArK,KAAK+K,cAAcF,GACnBA,EAAUG,QAAQb,GAEX,CAAEU,UAAAA,EAAWF,MAAAA,EAAOM,UADTjL,KAAKkL,gBAAgBL,GACDV,UAAAA,EAAWtI,KAAAA,EAAM6I,cAAAA,EAAeH,QAASH,EAAcC,KAAKE,SAAW,KhB4tB7GL,EgBztBgBO,oBAAP,SAA2BL,GhB0tBlC,IAAI5I,EAAQxB,KgBztBRqK,EAAkCxN,OAAOsO,OAAO,CACrDZ,QAAS,GACTa,aAAc,GACdT,MAAO,GACPU,QAAS,IACPjB,EAAcC,MAEjB,OADAA,EAAKE,SAAWH,EAAcC,KAAKE,SAAW,IAAI5B,KAAI,SAAAyB,GAAa,OAAI5I,EAAKiJ,oBAAoBL,MACzFC,GhBguBPH,EgB7tBgBU,aAAP,SAAoBP,EAAiCiB,GhB8tB5D,IAAI1J,EAAS5B,KgB7tBTuL,EAA2BlB,EAAKE,QAAQ5B,KAAI,SAAC6C,GAAD,OAA2C5J,EAAKgJ,aAAaY,GAAY,MACrHb,EAAiB,GAGvB,OAF4BW,EAAWjB,EAAKgB,QAAUhB,EAAKe,cAAcxF,QAAO,SAACgD,GAAD,OAAyBA,EAAExL,qBAAqB2M,KACvHhI,SAAQ,SAAA0J,GAAW,OAAId,EAAMc,EAAYpB,KAAKrH,MAAQyI,KACxD5O,OAAOsO,OAAPnM,MAAAnC,OAAM,CAAQ,IAARqF,OAAeqJ,EAAf,CAA8BZ,MhBwuB3CT,EgBruBgBY,iBAAP,SAAwBT,EAAiCiB,GhBsuBhE,IACII,EADAC,EAAS3L,KgBruBT4L,EAAmCvB,EAAKE,QAAQ5B,KAAI,SAAC6C,GAAD,OAAqBG,EAAKb,iBAAiBU,GAAY,MAC3GK,GAA4BP,EAAWjB,EAAKgB,QAAUhB,EAAKe,cAAcxF,QAAO,SAACgD,GAAD,OAA4BA,EAAExL,qBAAqBgD,KACzI,OAAOsL,EAAA7D,MAAMzK,UAAU8E,QAAO1D,KAAvBQ,MAAA0M,EAAA,CAA4BG,GAA5B3J,OAA4C0J,KhB+uBnD1B,EgB5uBgBa,cAAP,SAAqBF,GAC9BA,EAAUiB,MAAK,SAAChN,EAAGiN,GAClB,IAGMnO,EAHKqM,EAAM+B,QAAO,SAAChO,EAAGiO,EAAG1P,GAAP,OAAauC,EAAE1B,qBAAqB6O,EAAI1P,EAAIyB,KAAI,GAC7DiM,EAAM+B,QAAO,SAAChO,EAAGiO,EAAG1P,GAAP,OAAawP,EAAE3O,qBAAqB6O,EAAI1P,EAAIyB,KAAI,GAGxE,OAAU,IAANJ,GACKkB,EAAEuL,KAAK6B,MAAQ,EAAI,IAAMH,EAAE1B,KAAK6B,MAAQ,EAAI,GAE9CtO,MhBqvBRsM,EgBjvBgBiC,eAAP,SAAsB9J,GAC/B,IAAI+J,EAA+C,GAyBnD,OAxBA/J,EAASgC,QAAQ,iEAAiE,SAAUpE,EAAeoM,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GAsB9H,OArBIL,GACHD,EAASrN,MAAK,SAAU8C,GACvB,OAAOA,EAAKC,UAAU6K,SAASN,MAG7BC,GACHF,EAASrN,MAAK,SAAU8C,GACvB,OAAQA,EAAK+K,aAAaN,IAAOzK,EAAK4C,aAAa6H,KAAQE,GACzD3K,EAAK+K,aAAL,IAAsBN,EAAtB,MAAgCzK,EAAK4C,aAAL,IAAsB6H,EAAtB,OAAiCE,KAGjEC,GACHL,EAASrN,MAAK,SAAU8C,GACvB,OAAOA,EAAK+K,aAAaH,IAAO5K,EAAK+K,aAAL,IAAsBH,EAAtB,QAG9BC,GACHN,EAASrN,MAAK,SAAU8C,GACvB,OAAOA,EAAKgL,SAASC,gBAAkBJ,EAAGI,iBAGrC,MAEDV,GhBuvBPlC,EgBpvBgBgB,gBAAP,SAAuBL,GhBqvB9B,IAAIkC,EAAS/M,KgBpvBTiL,EAAgC,GA2BtC,OA1BAJ,EAAU9I,SAAQ,SAACiL,GACdA,EAAQ3C,MAAQ2C,EAAQ3C,KAAKhI,UAChC2K,EAAQ3C,KAAKhI,SAASJ,MAAM,KAAKF,SAAQ,SAACM,GACzCA,EAAWA,EAASoG,OACpB,IAAIwE,EAA4B,GAC1BC,EAAgB7K,EAASgC,QAAQ,mBAAmB,SAACpE,EAAOkN,GAEjE,OADAF,EAAWF,EAAKZ,eAAegB,GACxB,MAEFC,EAA4BL,EAAKZ,eAAee,GACtDjC,EAAUlM,MAAK,SAAC8C,GACf,IAAMwL,EAAWD,EAASpB,QAAO,SAAChO,EAAG+K,GACpC,OAAO/K,GAAK+K,EAAMlH,MAChB,GACGyL,EAAWL,EAASjB,QAAO,SAAChO,EAAG+K,GACpC,OAAO/K,GAAK+K,EAAMlH,MAChB,GACH,SAAIwL,GAAaC,IACT,CAAEzL,KAAAA,EAAMmL,QAAAA,EAAS3K,SAAAA,YAQtB4I,GhBgwBAf,EgBt5BYA,GA4JRqD,EAAqC,oBAAXC,aAAqD,IAApBA,OAAOzG,SAYlE0G,GATqC,oBAAXD,QAA0C,WAAhBA,OAAOxK,MAA4C,oBAAd0K,WAA6BA,UAAUC,UAAUP,SAAS,YAAqC,oBAAdM,WAA6BA,UAAUC,UAAUP,SAAS,WAGjM,oBAAZQ,SAA+C,MAApBA,QAAQC,UAA6C,MAAzBD,QAAQC,SAAShM,OAMzD0L,GC7K9BO,EAAAA,WjBi6BnB,SAASA,KAsCT,OApCAA,EiBj6BMC,OAAP,SAAc9N,EAAY+N,GACzB,YADyBA,IAAAA,IAAAA,EAAmC,CAACC,IACtDD,EAAShC,QAAO,SAAChO,EAAGiO,GAAJ,OAAUA,EAAEjO,KAAIiC,IjB06BvC6N,EiBt6BMI,OAAP,SAAcjO,EAAYkO,GACzB,YADyBA,IAAAA,IAAAA,EAAmC,CAACC,IACtDD,EAASnC,QAAO,SAAChO,EAAGiO,GAAJ,OAAUA,EAAEjO,KAAIiC,IjB+6BvC6N,EiB36BMG,WAAP,SAAkBhO,GACjB,OAAOD,KAAK+N,OAAO9N,EAAO,CAACgO,KjB86B3BH,EiB16BMM,WAAP,SAAkBnO,GACjB,OAAOD,KAAKkO,OAAOjO,EAAO,CAACmO,KjB66B3BN,EiBz6BMO,aAAP,SAAoBpO,GACnB,OAAOD,KAAK+N,OAAO9N,EAAO,CAACgO,EAAYI,KjB46BvCP,EiBx6BMQ,aAAP,SAAoBrO,GACnB,OAAOD,KAAKkO,OAAOjO,EAAO,CAACqO,EAAcF,KjB26BlCN,EiBv8BYA,GjB08BrB,SiB16BgBG,EAAWhO,EAAYsO,EAAmBC,GACzD,IAAIC,EACJ,IAEC,IAAMC,EAAc,GAapBD,EAZqBE,KAAKC,UAAU3O,GAAO,SAAUlD,EAAKkD,GACzD,GAAqB,iBAAVA,GAA+B,MAATA,EAAe,CAE/C,IAA6B,IAAzByO,EAAKhP,QAAQO,GAEhB,OAAOsO,EAERG,EAAK3P,KAAKkB,GAGX,OAAOA,IACLuO,GAEF,MAAO5L,IAGT,OAAO6L,EjBg7BR,SiBz6BgBL,EAAWnO,GAC1B,IAAIwO,EACJ,GAAIxO,EACH,IACCwO,EAAUE,KAAK1J,MAAMhF,GACpB,MAAO2C,IAIV,OAAO6L,EjB46BR,SiBz6BgBJ,EAAapO,GAC5B,IAAI4O,EACJ,IACCA,EAAUpB,EAAoBqB,KAAK7O,GAAS8O,OAAOC,KAAK/O,GAAO1B,SAAS,UACvE,MAAOqE,GACRiM,EAAU5O,EAEX,OAAO4O,EjB86BR,SiB36BgBP,EAAarO,GAC5B,IAAIwO,EACJ,IACCA,EAAUhB,EAAoBwB,KAAKhP,GAAS8O,OAAOC,KAAK/O,EAAO,UAAU1B,WACxE,MAAOqE,GACR6L,EAAUxO,EAEX,OAAOwO,EACP,IC5FoBS,EAAAA,SAAAA,GlB4gCnB,SAASA,IACP,OAAOC,EAAMnQ,MAAMgB,KAAMZ,YAAcY,KAOzC,OAVA3C,EAAe6R,EAAUC,GAMzBD,EkB/gCMlF,UAAP,SAAiB/J,GAChB,OAAO6N,EAAWC,OAAO9N,EAAO,EDwDIsO,ECxDmB,ODwDAC,ECxDQ,EDyDzD,SAACvO,GAAD,OAAgBgO,EAAWhO,EAAOsO,EAAaC,OjBs6BvD,IiBv6BsCD,EAAmBC,GjB09BhDU,EkBphCYA,CAAiBnF,GAI9BmF,EAAAA,KAAkB,CACxBlM,KAAM,QCCR,IAAIoM,EAAa,EAEIC,EAAAA,WAArB,SAAAA,IAGCrP,KAAAM,aAA8B,IAAIC,EAAAA,QnBohCjC,IAAIG,EAAS2O,EAAOjS,UA6mBpB,OA3mBAsD,EmBphCM4H,QAAA,SAAQzG,EAAgBuC,GnBqhC5B,ImBphCEkL,EnBohCE9N,EAAQxB,KmBvgCd,OAZ6BqP,EAAOE,kBAAkB1N,EAAM7B,KAAKqK,KAAMY,UAAW,IAAItC,KAAI,SAACI,GACtFuG,GAAiBA,IAAkBvG,EAAMlH,OAC5CuC,OAAiB5E,GAElB,IAAMP,EAAgCuC,EAAK6G,aAAaU,EAAMlH,KAAMkH,EAAMiE,QAASjE,EAAM1G,SAAU+B,GAInG,OAHI2E,EAAMiE,QAAQ5P,qBAAqB4H,IACtCsK,EAAgBvG,EAAMlH,MAEhB5C,KACL2G,QAAO,SAACgD,GAAD,YAA2BpJ,IAANoJ,MnB+hC/BlI,EmB1hCM2H,aAAA,SAAaxG,EAAgBmL,EAAyB3K,EAAkB+B,EAAmCxF,EAAc4Q,GnB2hC7H,IAAI5N,EAAS5B,KmB1hCf,GAAIoE,GAAkBvC,EAAKoF,WAAY,CACtC,IAAMoD,EAAqB2C,EAAQ3C,KAGnC,KADAjG,EAAiBA,GAAkBpE,KAAKyP,kBAAkB5N,EAAKoF,aAE9D,OAGD,IAAMhI,EAAQP,EAAOsO,EAAYpO,GAAQ,IAErC4Q,GACH3S,OAAO8E,KAAK6N,GAAQzN,SAAQ,SAAAhF,GAE3BF,OAAOC,eAAemC,EAAUlC,EAAK,CACpCkD,MAAOuP,EAAOzS,GACdJ,cAAc,EACdD,YAAY,EACZE,UAAU,OAKb,IAAM+I,EAAU0J,EAAOK,YAAY1P,KAAMf,EAAUmF,EAAgBvC,EAAMmL,EAAS3K,GAuClF,OArCIgI,IACHrK,KAAK2P,UAAUtF,EAAMpL,EAAU4C,GAC/B8D,EAAQrD,OAAStC,KAAK4P,WAAWvF,EAAMpL,GACvC0G,EAAQkK,QAAU7P,KAAK8P,YAAYzF,EAAMpL,GACrCmF,aAA0BhE,GAC7BJ,KAAK+P,qBAAqB9Q,EAAUmF,IAItCnF,EAAS0B,SAELyD,aAA0BhE,GAC7BgE,EAAe5D,SAASoD,KAavBgB,EAAAA,UAAU3F,EAASqB,eAClBuE,WAAU,SAAChE,GAERwJ,GACHzI,EAAKmO,qBAAqB9Q,EAAU4B,GAGrC5B,EAAS2B,UAAUC,GAEnB5B,EAAS+B,iBAGJ/B,InBmhCRyB,EmB9gCMiE,aAAA,SAAa9B,EAAoBC,GACvC,QADuCA,IAAAA,IAAAA,EAAmB,CAAC,cACvDD,EAAY,CACfA,EAAawM,EAAOW,gBAAgBnN,GAEpC,IAAMjE,EAAekE,EAAOV,KAAK,KAajC,OAZ4C,IAAIlD,SAAJ,2CACvBN,EADuB,wGAIhCiE,EAJgC,8EAMP8L,KAAKC,UAAU/L,GANR,sFAc5C,OAAO,WAAQ,OAAO,OnB4gCvBnC,EmBzgCMuP,UAAA,SAAUrN,EAAc3D,EAAmB4D,EAAoBC,GACrE,IAAMoN,EAAmC,IAAIxN,EAAgBE,EAAO5C,KAAMf,EAAU4D,EAAYC,GAChGY,EAAWtC,KAAK8O,InB4gChBxP,EmB1gCMoE,QAAA,SAAQjC,EAAgCuB,EAAkC+L,GAEhF,OAAOtN,EAAW7D,MAAMoF,EAAgB,CAAC+L,EAASnQ,QnB4gClDU,EmB1gCMuE,MAAA,SAAMpD,EAAgB5C,GAC5B,IAAK,IAAI1C,EAAY,EAAGA,EAAIsF,EAAKuO,WAAW5T,OAAQD,IAAK,CACxD,IAAM8T,EAAmBxO,EAAKuO,WAAW7T,GACzC,GAAuB,IAAnB8T,EAAMC,SAAgB,CACzB,IAAM9G,EAAuB6G,EACIE,EAAyB/G,IAEzDxJ,KAAKiF,MAAMuE,EAASvK,QAEf,GAAuB,IAAnBoR,EAAMC,SAAgB,CAChC,IAAME,EAAcH,EACpBrQ,KAAKyQ,cAAcD,EAAMvR,MnBihC3ByB,EmB7gCM8H,OAAA,SAAO3G,EAAY6O,GACzB,IAAMC,EAAoCD,EAAezP,EAAWyP,QAAgBlR,EAUpF,OATA6P,EAAOuB,aAAa/O,GAAM,SAACA,GAC1B,IAAMxB,EAAgCwB,EAAkBxB,SACpDA,IAEyB,IADKgP,EAAOwB,cAAcxQ,EAAUsQ,GAC/CnU,eACRqF,EAAkBxB,aAItBwB,GnBkhCPnB,EmBhhCMoQ,QAAA,WACN9Q,KAAKM,aAAac,OAClBpB,KAAKM,aAAayQ,WAClB/Q,KAAKwI,OAAOxI,KAAKqK,KAAMxI,MACvB7B,KAAKqK,KAAMxI,KAAK6H,UAAY1J,KAAKqK,KAAMK,enBmhCvChK,EmBjhCSgP,YAAA,SAAYzQ,EAAmBmF,EAAkCvC,EAAgBQ,GAG1F,OAF0BgN,EAAOK,YAAY1P,KAAMf,EAAUmF,EAAgBvC,EAAM5C,EAASxB,YAA+B4E,InBqhC3H3B,EmBjhCSsQ,YAAA,SAAYnP,GACrB,GAAIA,IAASkF,SACZ,OAAQ0G,EAAoBD,OAASyD,OAEtC,IAAMtL,EnB2/CR,SmB5oCiC9D,GAChC,IAAI8D,EAAgC4K,EAAyB1O,GACzD8D,GAAWA,EAAQqH,QAAQ5P,qBAAqB2H,IACnDY,OAAUnG,GAEX,OAAOmG,EApXgCuL,CAAiBrP,GACvD,OAAI8D,EACIA,EAAQ1G,cAEf,GnBuhCDyB,EmBphCS+O,kBAAA,SAAkB5N,GnBqhCzB,IAAI8J,EAAS3L,KmBphCf,OAAOqP,EAAO8B,WAAWtP,GAAM,SAACA,GAC/B,OAAO8J,EAAKqF,YAAYnP,OnB0hCzBnB,EmBvhCS+P,cAAA,SAAc5O,EAAa5C,GnBwhClC,IAAI8N,EAAS/M,KmBvhCX0I,EAA2D7G,EAAKuP,gBAIpE,GAHK1I,IACJA,EAAc1I,KAAKqR,wBAAwBxP,EAAKyP,YAE7C5I,EAAYlM,OAAQ,CACvB,IAAM+U,EAAuB7I,EAAYsD,QAAO,SAAChO,EAAWiO,GAC3D,IAAIuE,EASJ,MARiB,mBAANvE,EAEEzM,OADZgR,EAAOzD,EAAKjI,QAAQmH,EAAyBhN,EAAUA,MAEtDuR,EAAO,IAGRA,EAAOvE,EAEDjO,EAAIwS,IACT,IACH,GAAI3O,EAAK2P,YAAcD,EAAc,CACpC,IAAME,EAAkB1K,SAAS2K,eAAeH,GAChDE,EAASL,gBAAkB1I,EAC3B7G,EAAKoF,WAAYC,aAAauK,EAAU5P,SAGzCA,EAAKuP,gBAAkB1I,GnBmiCxBhI,EmBhiCSiR,aAAA,SAAaH,EAAmBxC,EAAc4C,EAAYlJ,GACnE,IAAMmJ,EAAmBL,EAAUM,UAAU9C,EAAM4C,GACnDlJ,EAAY3J,KAAK8S,InBmiCjBnR,EmBjiCS2Q,wBAAA,SAAwBG,GAKjC,IAJA,IAGCO,EAHKrJ,EAA+C,GAC/CsJ,EAAgB,qDAClBC,EAAoB,EAEqB,QAArCF,EAAUC,EAAME,KAAKV,KAAsB,CAClD,IAAMhL,EAAgBwL,EAAMC,UAAYF,EAAQ,GAAGvV,OAC/CgK,EAAQyL,GACXjS,KAAK2R,aAAaH,EAAWhL,EAAOyL,EAAWvJ,GAEhDuJ,EAAYD,EAAMC,UAClB,IAAMpP,EAAiC7C,KAAK2E,aAAaoN,EAAQ,IACjErJ,EAAY3J,KAAK8D,GAElB,IAAMrG,EAAiBgV,EAAUhV,OAIjC,OAHIA,EAASyV,GACZjS,KAAK2R,aAAaH,EAAWS,EAAWzV,EAAQkM,GAE7CA,EAAYyJ,MAAK,SAAAvJ,GAAC,MAAiB,mBAANA,KACzBF,EAEA,InB6iCRhI,EmB1iCSiP,UAAA,SAAUtF,EAAoBpL,EAAmB4C,GACtDwI,EAAK6B,OACRrP,OAAO8E,KAAK0I,EAAK6B,OAAOnK,SAAQ,SAAChF,GAChC,IAAMiQ,EAA0B3C,EAAK6B,MAAOnP,GAC5CkC,EAASlC,GnB67Cb,SmB9oCgBqV,EAAQnT,EAAmB+N,EAAyBnL,GAC9DA,IACJA,EAAOZ,EAAWhC,GAAU4C,MAE7B,GAAIA,EAAKxB,SAAU,CAClB,IAAMgS,EAA2BlS,EAAM0B,EAAKxB,UAC5C,GAAIgS,EAEH,IAAK,IAAI9V,EAAY,EAAGA,EAAI8V,EAAa7V,OAAQD,IAAK,CACrD,IAAMoJ,EAAoB0M,EAAa9V,GACvC,GAAIoJ,EAAQ1G,WAAaA,GAEpB0G,EAAQ1G,oBAAoB+N,EAC/B,OAAOrH,EAAQ1G,UAMpB,OAAI4C,EAAKoF,WACDmL,EAAQnT,EAAU+N,EAASnL,EAAKoF,iBAEvC,EArUkBmL,CAAQnT,EAAU+N,EAASnL,OnB+iC7CnB,EmB3iCS4R,UAAA,SAAUrT,EAAmBlC,GnB4iCpC,ImB3iCM8E,EAASZ,EAAWhC,GAApB4C,KACJ0Q,EAAmC,KACtC1P,EAA4B,KAC7B,GAAIhB,EAAK+K,aAAL,IAAsB7P,EAAtB,KACH8F,EAAahB,EAAK4C,aAAL,IAAsB1H,EAAtB,UACP,GAAI8E,EAAK+K,aAAa7P,GAAM,CAclC8F,EAAU,IAZgBhB,EAAK4C,aAAa1H,GAAMsH,QAAQ,kBAAkB,SAAUyN,EAAmBhT,EAAGiN,EAAGE,GAC9G,OAAInN,EACI,KAEJiN,EACI,KAEJE,EACI,IAED,MAEE,IAKX,OAHIpJ,IACH0P,EAAQvS,KAAK2E,aAAa9B,IAEpB0P,GnBqjCP7R,EmBnjCSkP,WAAA,SAAWvF,EAAoBpL,GnBojCtC,IAAIuT,EAASxS,KmBnjCTsC,EAAgD,GAStD,OARI+H,EAAK/H,QACR+H,EAAK/H,OAAOP,SAAQ,SAAChF,EAAaR,GACjC,IAAMgW,EAAQC,EAAKF,UAAUrT,EAAUlC,GACnCwV,IACHjQ,EAAOvF,GAAOwV,MAIVjQ,GnB2jCP5B,EmBzjCS+R,WAAA,SAAWxT,EAAmBlC,GnB0jCrC,IAAI2V,EAAS1S,KmBzjCT2F,EAAoB1E,EAAWhC,GAC/B4C,EAAiB8D,EAAQ9D,KACzBuC,EAAmCuB,EAAQvB,eAC3CvB,EAA4BhB,EAAK4C,aAAL,IAAsB1H,EAAtB,KAC5B2H,EAA4C7B,EAAa7C,KAAK2E,aAAa9B,EAAY,CAAC,WAAa,KACrG8P,GAA2B,IAAIpS,EAAAA,SAAeqD,KACnDG,EAAAA,KAAI,SAACG,GACAQ,GAEHgO,EAAK5N,QAAQJ,EAAgBN,EAAgBF,OAQhD,OAJAyO,EAAQ/O,KACPgB,EAAAA,UAAU3F,EAASqB,eAClBuE,YACF5F,EAASlC,GAAO4V,EACTA,GnByjCPjS,EmBvjCSoP,YAAA,SAAYzF,EAAoBpL,GnBwjCvC,IAAI2T,EAAS5S,KmBvjCT6P,EAA8C,GASpD,OARIxF,EAAKwF,SACRxF,EAAKwF,QAAQ9N,SAAQ,SAAChF,GACrB,IAAM8V,EAASD,EAAKH,WAAWxT,EAAUlC,GACrC8V,IACHhD,EAAQ9S,GAAO8V,MAIXhD,GnB+jCPnP,EmB7jCSqP,qBAAA,SAAqB9Q,EAAmB4B,GACjD,IAAM8E,EAAoB1E,EAAWhC,GAC/BmF,EAAmCuB,EAAQvB,eAC3C9B,EAAgDqD,EAAQrD,OAC9D,IAAK,IAAIvF,KAAOuF,EAAQ,CACvB,IAAMwQ,EAAoCxQ,EAAOvF,GAC3CkD,EAAaD,KAAK8E,QAAQgO,EAAe1O,EAAgBnF,GAC/DA,EAASlC,GAAOkD,InBkkCjBoP,EmB/jCgBW,gBAAP,SAAuBnN,GAIhC,IAHA,IAEMkQ,EAAc,qBACblQ,EAAWkG,MAAMgK,IACvBlQ,EAAaA,EAAWwB,QAAQ0O,GAAK,SAAUjB,GAC9C,MALgB,IAKFzC,EAAO2D,WAAP5T,UAAA5C,QAAA,OAAAgD,EAAAJ,UAAA,IAJE,OAWlB,OAHAyD,GADAA,EAAawM,EAAO2D,WAAWnQ,IACPwB,QAAQ,YAAY,SAAUyN,GACrD,OAAO1S,UAAA5C,QAAA,OAAAgD,EAAAJ,UAAA,IAAU,IAAM,OAEjBiQ,EAAO4D,sBAAsBpQ,InBokCpCwM,EmBlkCgB2D,WAAP,SAAkBnQ,GAI3B,IAHA,IAEMkQ,EAAc,uBACblQ,EAAWkG,MAAMgK,IACvBlQ,EAAaA,EAAWwB,QAAQ0O,GAAK,SAAUjB,GnBokC1C,IAAK,IAAI1L,EAAOhH,UAAU5C,OmBpkCsCoC,EAAAA,IAAAA,MAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAAA,UAAAA,GACpE,IAAMqB,EAAgBrB,EAAK,GAAG6J,OACxB3F,EAAmBuM,EAAO6D,gBAAgBtU,EAAK,IAC/CuU,EAAerQ,EAAOmD,QAASwC,OACrC,MAAA,WAAkB0K,EAAlB,cAAA,CAAwClT,GAAxCiC,OAAkDY,GAPlC,OAUlB,OAAOD,GnB2kCPwM,EmBzkCgB6D,gBAAP,SAAuBrQ,GAMhC,IALA,IAAMuQ,EAAqB,GACvB7W,EAAY,EACf8W,EAAe,GACfC,EAAgB,EACXC,EAAY1Q,EAAWrG,OACtBD,EAAIgX,GAAG,CACb,IAAMtH,EAAYpJ,EAAW2Q,OAAOjX,EAAG,GAC7B,MAAN0P,GAAmB,MAANA,GAAmB,MAANA,GAC7BqH,IAES,MAANrH,GAAmB,MAANA,GAAmB,MAANA,GAC7BqH,IAES,MAANrH,GAAuB,IAAVqH,GACZD,EAAK7W,QACR4W,EAASrU,KAAKsU,EAAK5K,QAEpB4K,EAAO,IAEPA,GAAQpH,EAET1P,IAKD,OAHI8W,EAAK7W,QACR4W,EAASrU,KAAKsU,EAAK5K,QAEb2K,GnBolCP/D,EmBllCgB4D,sBAAP,SAA6BpQ,GACtC,IACImF,EAUJ,OATAnF,EAAaA,EAAWwB,QAFF,2BAEiB,SAAUyN,GAEhD,IADA,IAAM2B,EAAmB3B,EAAU7P,MAAM,MAChC1F,EAAY,EAAGA,EAAIkX,EAAOjX,OAAS,EAAGD,IAAK,CACnD,IAAMuC,EAAYvC,EAAI,EAAJ,IAAYkX,EAAOlX,GAAnB,MAA2ByL,EAA3B,IAAyCyL,EAAOlX,GAC5DwP,EAAY0H,EAAOlX,EAAI,GAC7ByL,EAAWzL,EAAI,EAAOuC,EAAX,IAAgBiN,EAAhB,IAA0BjN,EAA1B,MAAiCA,EAAjC,IAAsCiN,EAAtC,aAEZ,OAAO/D,GAAY,OnBylCpBqH,EmBrlCgBK,YAAP,SAAmBxO,EAAgBjC,EAAmBmF,EAAkCvC,EAAgBmL,EAAyB3K,GAC1IpD,EAASoB,WAAa+O,EACtB,IAAMzJ,EAAoB,CAAEzE,OAAAA,EAAQjC,SAAAA,EAAUmF,eAAAA,EAAgBvC,KAAAA,EAAMmL,QAAAA,EAAS3K,SAAAA,GACvEqR,EAAe7R,EAAKxB,SAAYwB,EAAKxB,UAAYpB,EAASoB,SAIhE,OAHqBF,EAAMuT,KAAkBvT,EAAMuT,GAAgB,KACtD3U,KAAK4G,GAClBzF,EAASjB,EAASoB,UAAYsF,EACvBA,GnB+lCP0J,EmB7lCgBwB,cAAP,SAAqB8C,EAAYhD,GAC1C,IAAMiD,EAA2B,GAC3BvB,EAA2BlS,EAAMwT,GAmBvC,OAlBItB,IACHA,EAAatQ,SAAQ,SAAC4D,GACrB,GAAIA,IAAYgL,EACfiD,EAAa7U,KAAK4R,OACZ,CACN,IAAM1R,EAAoB0G,EAAQ1G,SAClCA,EAASqB,aAAac,OACtBnC,EAASqB,aAAayQ,WACtB9R,EAAS8B,mBACFb,EAASjB,EAASoB,cAGvBuT,EAAapX,OAChB2D,EAAMwT,GAAMC,SAELzT,EAAMwT,IAGRC,GnBmmCPvE,EmBjmCgBwE,eAAP,SAAsBhS,EAAmBoJ,EAA+B6I,GACjF,IAAK,IAAIvX,EAAY,EAAGA,EAAI0O,EAAUzO,OAAQD,IAAK,CAClD,IAAMwX,EAA0C9I,EAAU1O,GAAGsF,GAC7D,GAAIkS,EAAgB,CACnB,IAAM/G,EAA0B+G,EAAe/G,QAK/C,GAJIA,EAAQ5P,qBAAqB4H,GAAagI,EAAQ3C,KAAKpH,WAC1DpB,EAAK6H,UAAYsD,EAAQ3C,KAAKpH,UAE/B6Q,EAAQ/U,KAAKgV,GACT/G,EAAQ5P,qBAAqB2H,EAEhC,OAIH,OAAO+O,GnBwmCPzE,EmBtmCgBE,kBAAP,SAAyB1N,EAAYoJ,EAA+B6I,GAC7E,GAAsB,IAAlBjS,EAAKyO,SAAgB,CACxB,IAAM0D,EAAqChU,KAAK6T,eAAehS,EAAqBoJ,EAAW,IAG/F,GAFA6I,EAAUA,EAAQ5R,OAAO8R,GACsBA,EAAgB7B,MAAK,SAAAvJ,GAAC,OAAIA,EAAEoE,QAAQ5P,qBAAqB2H,KAEvG,OAAO+O,EAGR,IADA,IAAM1D,EAAoCvO,EAAKuO,WACtC7T,EAAY,EAAGA,EAAI6T,EAAW5T,OAAQD,IAC9CuX,EAAU9T,KAAKuP,kBAAkBa,EAAW7T,GAAI0O,EAAW6I,GAG7D,OAAOA,GnB+mCPzE,EmB7mCgB8B,WAAP,SAAkBtP,EAAmBoS,EAA0C1X,GACxF,QADwFA,IAAAA,IAAAA,EAAY,GAC/FsF,EAAL,CAGA,IAAM8F,EAASsM,EAASpS,EAAMtF,GAC9B,OAAIoL,GAGG3H,KAAKmR,WAAWtP,EAAKoF,WAAYgN,EAAU1X,EAAI,KnBunCtD8S,EmBrnCgBuB,aAAP,SAAoB/O,EAAmBoS,EAA0C1X,GAC1F,QAD0FA,IAAAA,IAAAA,EAAY,GACjGsF,EAAL,CAGA,IAAI8F,EAASsM,EAASpS,EAAMtF,GAC5B,GAAIoL,EACH,OAAOA,EAER,GAAsB,IAAlB9F,EAAKyO,SAGR,IAFA,IAAI4D,EAAI,EACPX,EAAI1R,EAAKuO,WAAW5T,OACd0X,EAAIX,IAAM5L,GAChBA,EAAS3H,KAAK4Q,aAAa/O,EAAKuO,WAAW8D,GAAID,EAAU1X,EAAI,GAC7D2X,IAGF,OAAOvM,InBioCP0H,EmB/nCgB8E,iBAAP,SAAwBtS,EAAmBoS,EAA0C1X,GAC9F,QAD8FA,IAAAA,IAAAA,EAAY,GACrGsF,EAAL,CAGA,IAAM8F,EAASsM,EAASpS,EAAMtF,GAC9B,OAAIoL,GAGG3H,KAAKmU,iBAAiBtS,EAAKuS,gBAAiBH,EAAU1X,EAAI,KnByoCjE8S,EmBvoCgBgF,aAAP,SAAoBxS,EAAmBoS,EAA0C1X,GAC1F,QAD0FA,IAAAA,IAAAA,EAAY,GACjGsF,EAAL,CAGA,IAAM8F,EAASsM,EAASpS,EAAMtF,GAC9B,OAAIoL,GAGG3H,KAAKqU,aAAaxS,EAAKwF,YAAa4M,EAAU1X,EAAI,KnBipClD8S,EmBpoDYA,GnBsoDrB,SmB9oCgBkB,EAAyB1O,GACxC,IAAI8D,EACEtF,EAAgCwB,EAAkBxB,SACxD,GAAIA,EAAU,CACb,IAAMgS,EAA2BlS,EAAME,GACnCgS,IACH1M,EAAU0M,EAAarG,QAAO,SAAChE,EAAgCsM,GAC9D,OAAIA,EAAQtH,QAAQ5P,qBAAqB4H,EACjCsP,EACGA,EAAQtH,QAAQ5P,qBAAqB+H,EACxC6C,GAAsBsM,EAMtBtM,SAENxI,IAIL,OAAOmG,EAiCP,ICvjBoB4O,EAAAA,SAAAA,GpB0sDnB,SAASA,IACP,OAAO9S,EAAWzC,MAAMgB,KAAMZ,YAAcY,KAoB9C,OAvBA3C,EAAekX,EAAc9S,GAM7BzE,EAAauX,EAAc,CAAC,CAC1BxX,IAAK,MACL+C,IAAK,SoB/sDA0U,GACP,GAAIxU,KAAKyU,OAASD,EAAK,CACtBxU,KAAKyU,KAAOD,EADU,IAEd3S,EAASZ,EAAWjB,MAApB6B,KACR2S,EAAM3S,EAAKM,aAAa,MAAOqS,GAAO3S,EAAKyF,gBAAgB,SpBqtD1DzH,IAAK,WoBjtDP,OAAOG,KAAKyU,SpBstDLF,EoB/tDYA,CAAqBlT,GAWlCkT,EAAAA,KAAqB,CAC3BlS,SAAU,UACVC,OAAQ,CAAC,QAFH,ICXaoS,EAAAA,SAAAA,GrBuuDnB,SAASA,IACP,OAAOjT,EAAWzC,MAAMgB,KAAMZ,YAAcY,KAsC9C,OAzCA3C,EAAeqX,EAAgBjT,GAMlBiT,EAAetX,UqBtuD7BwD,UAAA,WrByuDG,IqBxuDMiB,EAASZ,EAAWjB,MAApB6B,KACF8S,EAAQ3U,KAAK2U,MACbC,EAAgB5U,KAAK4U,cAC3B,GAAIA,EACH,IAAK,IAAI7X,KAAO6X,EACf,IAAKD,IAAUA,EAAM5X,GAAM,CAC1B,IACM8X,EADqB9X,EAAIkF,MAAM,KACPgE,QAC9BpE,EAAK8S,MAAMG,eAAeD,GAI7B,GAAIF,EACH,IAAK,IAAI5X,KAAO4X,EACf,IAAKC,GAAiBA,EAAc7X,KAAS4X,EAAM5X,GAAM,CACxD,IAAMgY,EAAqBhY,EAAIkF,MAAM,KAC/B4S,EAAeE,EAAS9O,QACxBhG,EAAQ0U,EAAM5X,IAAQgY,EAASvY,OAASuY,EAAS,GAAK,IAE5DlT,EAAK8S,MAAMK,YAAYH,EAAe5U,GAIzCD,KAAK4U,cAAgBD,GrBivDdD,EqB9wDYA,CAAuBrT,GAgCpCqT,EAAAA,KAAqB,CAC3BrS,SAAQ,YACRC,OAAQ,CAAC,UCrBX,IAAMuI,EAA8B,CACnCtJ,EACA0C,EACA2C,EACAqC,EACAG,EACAK,EACAG,EACA2K,EACAG,GAGK/J,EAAuB,CAC5BuE,GAGoB+F,EAAAA,SAAAA,GACpB,SAAAA,ItB4vDG,IAAIzT,EAIJ,OsB/vDFA,EAAA0T,EAAA1W,KAAAwB,OAAAA,KAEA2D,EAAQC,KACPgB,EAAAA,UAAUpD,EAAKlB,eACduE,YtB2vDOrD,EAGT,OAVAnE,EAAe4X,EAAYC,GAUpBD,EsBpwDYA,CAAmB5F,GAQhC4F,EAAAA,KAAO,CACb7J,aAAY,GAAAlJ,OACR2I,EACAF,GAEJU,QAAO,GAAAnJ,OACH2I,EACAF,IAPE,ICpCawK,EAAAA,SAAAA,GvBwyDnB,SAASA,IACP,OAAOC,EAAUpW,MAAMgB,KAAMZ,YAAcY,KAyD7C,OA5DA3C,EAAe8X,EAASC,GAMxBD,EuBtyDMhL,UAAP,SAAiBC,GAChB,IAAKqD,EACJ,MAAM,IAAIlL,EAAY,8CAEvB,IAAK6H,EACJ,MAAM,IAAI7H,EAAY,yBAEvB,IAAK6H,EAAcC,KAClB,MAAM,IAAI9H,EAAY,8BAEvB,IAAK6H,EAAcC,KAAKF,UACvB,MAAM,IAAI5H,EAAY,qBAEvB,IAAK6H,EAAcC,KAAKF,UAAUE,KACjC,MAAM,IAAI9H,EAAY,0BAEvB,IAAK6H,EAAcC,KAAKF,UAAUE,KAAKhI,SACtC,MAAM,IAAIE,EAAY,mCAEvB,IAAM8H,EAA0BrK,KAAKsK,YAAYF,GAC3ClJ,EAAiB,IAAIkJ,EAK3B,GAJAlJ,EAAOmJ,KAAOA,EACdA,EAAKE,QAAQxI,SAAQ,SAACqI,GACrBA,EAAchN,UAAUK,YAAYe,KAAK0C,MAEtCsM,OAAO6H,gBAAiB,CAAA,IAAAC,EACrBnN,EAAakC,EAAKxI,KAAKuG,YAC7BD,EAAWuB,UAAYW,EAAKK,cAAgB8C,OAAO6H,gBAAgB3L,UACnE,IAAMvI,EAAYD,EAAOoH,QAAQH,EAAYqF,QAC7CtM,EAAOC,UAAYA,EACNA,EAAU,GAElBH,cACL,OAAAsU,EAAAjL,EAAKxI,KAAKoF,aAAVqO,EAAsBpO,aAAaiB,EAAYkC,EAAKxI,UAE9C,CACN,IAAMV,EAAYD,EAAOoH,QAAQ+B,EAAKxI,KAAM2L,QAC5CtM,EAAOC,UAAYA,EACNA,EAAU,GAElBH,cAGN,OAAOE,GvBizDAiU,EuBl2DYA,CAAgBjL,GCH/BqL,GAAAA,SAAAA,GAAN,SAAAA,IxB02DI,IAAI/T,EAKJ,OAHAA,EAAQ6D,EAAWrG,MAAMgB,KAAMZ,YAAcY,MwB32DhDwV,KAAa,IAAIlX,KACjBkD,EAAAvB,MAAgB,ExB62DNuB,EAGT,OAXAnE,EAAekY,EAAelQ,GAWvBkQ,EwBl3DHA,CAAsBvQ,GAI5BuQ,GAAclL,KAAO,CACpBhI,SAAU,oBxBo3DX,IwBj3DMoT,GAAAA,SAAAA,GxBo3DJ,SAASA,IACP,OAAOtG,EAAMnQ,MAAMgB,KAAMZ,YAAcY,KASzC,OAZA3C,EAAeoY,EAAUtG,GAMzBsG,EwBv3DMzL,UAAP,SAAiB/J,EAAsByV,GACtC,IAAMC,EAAO,IAAIrX,KAAK2B,GACtB,OAAU0V,EAAKC,WAAf,IAA6BD,EAAKE,cxB23D3BJ,EwB93DHA,CAAiB1L,GAMvB0L,GAASpL,KAAO,CACfrH,KAAM,QxB83DP,IwB33DM8S,GAAAA,SAAAA,GxB83DJ,SAASA,IACP,OAAOC,EAAO/W,MAAMgB,KAAMZ,YAAcY,KAe1C,OAlBA3C,EAAeyY,EAAUC,GAMzBD,EwBj4DM9L,UAAP,SAAiB/J,EAAwB+V,EAAmBC,GAC3D,YADwCD,IAAAA,IAAAA,EAAgB,QAAGC,IAAAA,IAAAA,EAAgB,GACpEC,OAAOjW,GAASiW,OAAOF,GAASE,OAAOD,IxB44DvCH,EwB94DHA,CAAiB/L,GAKvB+L,GAASzL,KAAO,CACfrH,KAAM,QxB+4DP,IwB54DMmT,GAAAA,SAAAA,GxB+4DJ,SAASA,IACP,OAAOjB,EAAQlW,MAAMgB,KAAMZ,YAAcY,KAG3C,OANA3C,EAAe8Y,EAAWjB,GAMnBiB,EwBn5DHA,CAAkB9G,GACxB8G,GAAU9L,KAAO,CAChBE,QAAS,CACR0K,GAED7J,aAAc,CACbqK,GACAK,IAED3L,UAAWoL,IAGZJ,EAAQhL,UAAUgM,IxBnClB,CwBmCAja,KAAAA,KAAAC","file":"docs\\js\\test.pipes.min.js","sourcesContent":[null,"import { ReplaySubject, Subject } from 'rxjs';\nimport { IContext, IFactoryMeta } from './types';\n\nexport const CONTEXTS: { [key: number]: IContext } = {};\nexport const NODES: { [key: number]: IContext[] } = {};\n\nexport default class Factory {\n\tstatic meta: IFactoryMeta;\n\trxcompId: number = -1;\n\tunsubscribe$: Subject<void> = new Subject();\n\tchanges$: ReplaySubject<Factory> = new ReplaySubject(1);\n\tonInit(): void { }\n\tonChanges(changes: Factory | Window): void { }\n\tonView(): void { }\n\tonDestroy(): void { }\n\tpushChanges(): void {\n\t\tconst { module } = getContext(this);\n\t\tif (module.instances) {\n\t\t\tthis.changes$.next(this);\n\t\t\tthis.onView();\n\t\t}\n\t}\n\t[key: string]: any; // extensible object\n\tconstructor(...args: any[]) { }\n}\n\nexport function getContext(instance: Factory): IContext {\n\treturn CONTEXTS[instance.rxcompId];\n}\n","import Factory from './factory';\r\n\r\nexport default class Directive extends Factory {\r\n}\r\n","import Directive from '../core/directive';\nimport { getContext } from '../core/factory';\nimport { IFactoryMeta } from '../core/types';\n\nexport default class ClassDirective extends Directive {\n\tclass: { [key: string]: string } | string | null = '';\n\tkeys: string[] = [];\n\tonInit() {\n\t\tconst { node } = getContext(this);\n\t\tnode.classList.forEach((value: string) => {\n\t\t\tthis.keys.push(value);\n\t\t});\n\t}\n\tonChanges() {\n\t\tconst { node } = getContext(this);\n\t\tlet keys: string[] = [];\n\t\tconst object = this.class;\n\t\tif (typeof object === 'object') {\n\t\t\tfor (let key in object) {\n\t\t\t\tif (object[key]) {\n\t\t\t\t\tkeys.push(key);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (typeof object === 'string') {\n\t\t\tkeys = object.split(/\\s+/);\n\t\t}\n\t\tkeys = keys.concat(this.keys);\n\t\t// console.log(keys);\n\t\tnode.setAttribute('class', keys.join(' '));\n\t\t// console.log('ClassDirective.onChanges', keys);\n\t}\n\tstatic meta: IFactoryMeta = {\n\t\tselector: `[[class]]`,\n\t\tinputs: ['class']\n\t};\n}\n","import { Observable, of, ReplaySubject } from \"rxjs\";\r\nimport { switchMap, tap } from \"rxjs/operators\";\r\nimport Factory, { getContext } from \"../core/factory\";\r\nimport Module from \"../module/module\";\r\n\r\nexport class ModuleError extends Error { }\r\n\r\nexport class ExpressionError extends Error {\r\n\tmodule: Module;\r\n\tinstance: Factory;\r\n\texpression: string;\r\n\tparams: any[];\r\n\ttemplate: string;\r\n\r\n\tconstructor(error: Error, module: Module, instance: Factory, expression: string, params: any[]) {\r\n\t\tconst message: string = `ExpressionError in ${instance.constructor.name} \"${expression}\"\r\n\t\t${error.message}`;\r\n\t\tsuper(message);\r\n\t\tthis.name = error.name;\r\n\t\t// this.stack = error.stack;\r\n\t\tthis.module = module;\r\n\t\tthis.instance = instance;\r\n\t\tthis.expression = expression;\r\n\t\tthis.params = params;\r\n\t\tconst { node } = getContext(instance);\r\n\t\tthis.template = node.outerHTML;\r\n\t}\r\n}\r\n\r\nexport interface IErrorHandler {\r\n\thandle(error: Error): Observable<Error | void>\r\n}\r\n\r\nexport interface IErrorInterceptor {\r\n\tintercept(error: Error | void, next: IErrorHandler): Observable<Error | void>\r\n}\r\n\r\nexport class ErrorInterceptorHandler implements IErrorHandler {\r\n\tconstructor(\r\n\t\tprivate next: IErrorHandler,\r\n\t\tprivate interceptor: IErrorInterceptor,\r\n\t) { }\r\n\thandle(error: Error | void): Observable<Error | void> {\r\n\t\treturn this.interceptor.intercept(error, this.next);\r\n\t}\r\n}\r\n\r\n/*\r\nexport class NoopErrorInterceptor implements IErrorInterceptor {\r\n\tintercept(error: Error, next: ErrorHandler): Observable<Error> {\r\n\t\treturn of(error);\r\n\t}\r\n}\r\n\r\nconst noopInterceptor = new NoopErrorInterceptor();\r\n*/\r\n\r\nexport class DefaultErrorHandler implements IErrorHandler {\r\n\thandle(error: Error | void): Observable<Error | void> {\r\n\t\t/*\r\n\t\tif (error) {\r\n\t\t\tconsole.error(error);\r\n\t\t}\r\n\t\t*/\r\n\t\treturn of(error);\r\n\t}\r\n}\r\n\r\nexport const ErrorInterceptors: IErrorInterceptor[] = [];\r\n\r\nexport const nextError$: ReplaySubject<Error> = new ReplaySubject<Error>(1);\r\nexport const errors$: Observable<Error | void> = nextError$.pipe(\r\n\t/*\r\n\tswitchMap(error => {\r\n\t\tconst chain = ErrorInterceptors.reduceRight((next: ErrorHandler, interceptor: IErrorInterceptor) => {\r\n\t\t\treturn new ErrorInterceptorHandler(next, interceptor);\r\n\t\t}, new NoopErrorInterceptor());\r\n\t\treturn chain.handle(error);\r\n\t}),\r\n\t*/\r\n\t// switchMap(error => merge(ErrorInterceptors.map(x => x.intercept(error, next)))),\r\n\tswitchMap((error: Error) => {\r\n\t\tconst chain: IErrorHandler = ErrorInterceptors.reduceRight((next: IErrorHandler, interceptor: IErrorInterceptor) => {\r\n\t\t\treturn new ErrorInterceptorHandler(next, interceptor);\r\n\t\t}, new DefaultErrorHandler());\r\n\t\treturn chain.handle(error);\r\n\t}),\r\n\ttap((error: Error | void) => {\r\n\t\tif (error) {\r\n\t\t\tconsole.error(error);\r\n\t\t}\r\n\t}),\r\n);\r\n","import { fromEvent, Observable } from 'rxjs';\nimport { shareReplay, takeUntil } from 'rxjs/operators';\nimport Directive from '../core/directive';\nimport { getContext } from '../core/factory';\nimport { IFactoryMeta } from '../core/types';\n\nconst EVENTS = ['mousedown', 'mouseup', 'mousemove', 'click', 'dblclick', 'mouseover', 'mouseout', 'mouseenter', 'mouseleave', 'contextmenu', 'touchstart', 'touchmove', 'touchend', 'keydown', 'keyup', 'input', 'change', 'loaded'];\n\nexport default class EventDirective extends Directive {\n\tevent: string = '';\n\tonInit() {\n\t\tconst { module, node, parentInstance, selector } = getContext(this);\n\t\t// console.log('parentInstance', parentInstance);\n\t\tconst event = this.event = selector.replace(/\\[|\\]|\\(|\\)/g, '');\n\t\tconst event$: Observable<Event> = fromEvent<Event>(node, event).pipe(shareReplay(1));\n\t\tconst expression = node.getAttribute(`(${event})`);\n\t\tif (expression) {\n\t\t\tconst outputFunction = module.makeFunction(expression, ['$event']);\n\t\t\tevent$.pipe(\n\t\t\t\ttakeUntil(this.unsubscribe$)\n\t\t\t).subscribe(event => {\n\t\t\t\tmodule.resolve(outputFunction, parentInstance, event);\n\t\t\t});\n\t\t} else {\n\t\t\tparentInstance[`${event}$`] = event$;\n\t\t}\n\t\t// console.log('EventDirective.onInit', 'selector', selector, 'event', event);\n\t}\n\tstatic meta: IFactoryMeta = {\n\t\tselector: `[(${EVENTS.join(')],[(')})]`,\n\t};\n}\n","import Factory from './factory';\r\n\r\nexport default class Structure extends Factory {\r\n}\r\n","\r\nimport Factory, { getContext } from './factory';\r\n\r\nexport default class Component extends Factory {\r\n\r\n\tpushChanges(): void {\r\n\t\tconst { module, node } = getContext(this);\r\n\t\tif (module.instances) {\r\n\t\t\t// console.log(new Error(`pushChanges ${instance.constructor.name}`).stack);\r\n\t\t\tthis.changes$.next(this);\r\n\t\t\t// console.log('Module.parse', instance.constructor.name);\r\n\t\t\t// parse component text nodes\r\n\t\t\tmodule.parse(node, this);\r\n\t\t\t// calling onView event\r\n\t\t\tthis.onView();\r\n\t\t}\r\n\t}\r\n\r\n}\r\n","// import { BehaviorSubject, Subject } from 'rxjs';\r\nimport Component from './component';\r\nimport Factory, { getContext } from './factory';\r\n\r\nconst RESERVED_PROPERTIES = ['constructor', 'rxcompId', 'onInit', 'onChanges', 'onDestroy', 'pushChanges', 'changes$', 'unsubscribe$'];\r\n\r\nexport default class Context extends Component {\r\n\r\n\tconstructor(parentInstance: Factory, descriptors: { [key: string]: PropertyDescriptor } = {}) {\r\n\t\tsuper();\r\n\t\tdescriptors = Context.mergeDescriptors(parentInstance, parentInstance, descriptors);\r\n\t\tdescriptors = Context.mergeDescriptors(Object.getPrototypeOf(parentInstance), parentInstance, descriptors);\r\n\t\tObject.defineProperties(this, descriptors);\r\n\t}\r\n\r\n\tpushChanges(): void {\r\n\t\tconst context = getContext(this);\r\n\t\tif (!context.keys) {\r\n\t\t\tcontext.keys = Object.keys(context.parentInstance).filter(key => RESERVED_PROPERTIES.indexOf(key) === -1);\r\n\t\t\t// console.log(context.keys.join(','));\r\n\t\t}\r\n\t\tif (context.module.instances) {\r\n\t\t\tcontext.keys.forEach(key => {\r\n\t\t\t\tthis[key] = context.parentInstance[key];\r\n\t\t\t});\r\n\t\t}\r\n\t\tsuper.pushChanges();\r\n\t}\r\n\r\n\tstatic mergeDescriptors(source: Object, instance: Factory, descriptors: { [key: string]: PropertyDescriptor } = {}): { [key: string]: PropertyDescriptor } {\r\n\t\tconst properties: string[] = Object.getOwnPropertyNames(source);\r\n\t\twhile (properties.length) {\r\n\t\t\tconst key: string = properties.shift() as string;\r\n\t\t\tif (RESERVED_PROPERTIES.indexOf(key) === -1 && !descriptors.hasOwnProperty(key)) {\r\n\t\t\t\tconst descriptor: PropertyDescriptor = Object.getOwnPropertyDescriptor(source, key) as PropertyDescriptor;\r\n\t\t\t\tif (typeof descriptor.value == 'function') {\r\n\t\t\t\t\tdescriptor.value = (...args: any[]) => {\r\n\t\t\t\t\t\treturn instance[key].apply(instance, args);\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\tdescriptors[key] = descriptor;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn descriptors;\r\n\t}\r\n\r\n}\r\n","import Context from '../core/context';\nimport Factory from '../core/factory';\n\nexport default class ForItem extends Context {\n\tindex: number;\n\tcount: number;\n\t[key: string]: any;\n\t// !!! todo: payload options { key, $key, value, $value, index, count }\n\tconstructor(key: string, $key: number | string, value: string, $value: any, index: number, count: number, parentInstance: Factory) {\n\t\t// console.log('ForItem', arguments);\n\t\tsuper(parentInstance);\n\t\t/*\n\t\tsuper(parentInstance, {\n\t\t\t[key]: {\n\t\t\t\tget: function() {\n\t\t\t\t\treturn this.$key;\n\t\t\t\t},\n\t\t\t\tset: function(key) {\n\t\t\t\t\tthis.$key = key;\n\t\t\t\t}\n\t\t\t},\n\t\t\t[value]: {\n\t\t\t\tget: function() {\n\t\t\t\t\treturn this.$value;\n\t\t\t\t},\n\t\t\t\tset: function(value) {\n\t\t\t\t\tthis.$value = value;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\t*/\n\t\tthis[key] = $key;\n\t\tthis[value] = $value;\n\t\tthis.index = index;\n\t\tthis.count = count;\n\t}\n\tget first(): boolean { return this.index === 0; }\n\tget last(): boolean { return this.index === this.count - 1; }\n\tget even(): boolean { return this.index % 2 === 0; }\n\tget odd(): boolean { return !this.even; }\n}\n","import Factory, { getContext } from '../core/factory';\nimport Structure from '../core/structure';\nimport { ExpressionFunction, IComment, IContext, IElement, IExpressionToken, IFactoryMeta } from '../core/types';\nimport Module from '../module/module';\nimport ForItem from './for.item';\n\nexport default class ForStructure extends Structure {\n\tinstances: Factory[] = [];\n\tforend?: IComment;\n\ttoken?: IExpressionToken;\n\tforFunction?: ExpressionFunction;\n\tonInit() {\n\t\tconst { module, node } = getContext(this);\n\t\tconst forbegin: IComment = document.createComment(`*for begin`);\n\t\tforbegin.rxcompId = node.rxcompId;\n\t\tnode.parentNode!.replaceChild(forbegin, node);\n\t\tconst forend: IComment = this.forend = document.createComment(`*for end`);\n\t\tforbegin.parentNode!.insertBefore(forend, forbegin.nextSibling);\n\t\tconst expression: string = node.getAttribute('*for')!;\n\t\tnode.removeAttribute('*for');\n\t\tconst token = this.token = this.getExpressionToken(expression);\n\t\tthis.forFunction = module.makeFunction(token.iterable);\n\t}\n\tonChanges(changes: Factory | Window) {\n\t\tconst context: IContext = getContext(this);\n\t\tconst module: Module = context.module;\n\t\tconst node: IElement = context.node;\n\t\t// resolve\n\t\tconst token: IExpressionToken = this.token!;\n\t\tlet result = module.resolve(this.forFunction!, changes, this) || [];\n\t\tconst isArray = Array.isArray(result);\n\t\tconst array: any[] = isArray ? result : Object.keys(result);\n\t\tconst total: number = array.length;\n\t\tconst previous: number = this.instances.length;\n\t\tfor (let i: number = 0; i < Math.max(previous, total); i++) {\n\t\t\tif (i < total) {\n\t\t\t\tconst key: number | string = isArray ? i : array[i];\n\t\t\t\tconst value: any = isArray ? array[key as number] : result[key];\n\t\t\t\tif (i < previous) {\n\t\t\t\t\t// update\n\t\t\t\t\tconst instance: Factory = this.instances[i];\n\t\t\t\t\tinstance[token.key] = key;\n\t\t\t\t\tinstance[token.value] = value;\n\t\t\t\t\t/*\n\t\t\t\t\tif (!nextSibling) {\n\t\t\t\t\t\tconst context = getContext(instance);\n\t\t\t\t\t\tconst node = context.node;\n\t\t\t\t\t\tthis.forend.parentNode.insertBefore(node, this.forend);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnextSibling = nextSibling.nextSibling;\n\t\t\t\t\t}\n\t\t\t\t\t*/\n\t\t\t\t} else {\n\t\t\t\t\t// create\n\t\t\t\t\tconst clonedNode: IElement = node.cloneNode(true) as IElement;\n\t\t\t\t\tdelete clonedNode.rxcompId;\n\t\t\t\t\tthis.forend!.parentNode!.insertBefore(clonedNode, this.forend!);\n\t\t\t\t\t// !!! todo: check context.parentInstance\n\t\t\t\t\tconst args = [token.key, key, token.value, value, i, total, context.parentInstance];\n\t\t\t\t\tconst instance = module.makeInstance(clonedNode, ForItem, context.selector, context.parentInstance, args);\n\t\t\t\t\tif (instance) {\n\t\t\t\t\t\t// const forItemContext = getContext(instance);\n\t\t\t\t\t\t// console.log('ForStructure', clonedNode, forItemContext.instance.constructor.name);\n\t\t\t\t\t\t// module.compile(clonedNode, forItemContext.instance);\n\t\t\t\t\t\tmodule.compile(clonedNode, instance);\n\t\t\t\t\t\t// nextSibling = clonedNode.nextSibling;\n\t\t\t\t\t\tthis.instances.push(instance);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// remove\n\t\t\t\tconst instance: Factory = this.instances[i];\n\t\t\t\tconst { node } = getContext(instance);\n\t\t\t\tnode.parentNode!.removeChild(node);\n\t\t\t\tmodule.remove(node);\n\t\t\t}\n\t\t}\n\t\tthis.instances.length = array.length;\n\t\t// console.log('ForStructure', this.instances, token);\n\t}\n\tgetExpressionToken(expression: string): IExpressionToken {\n\t\tif (expression === null) {\n\t\t\tthrow new Error('invalid for');\n\t\t}\n\t\tif (expression.trim().indexOf('let ') === -1 || expression.trim().indexOf(' of ') === -1) {\n\t\t\tthrow new Error('invalid for');\n\t\t}\n\t\tconst expressions: string[] = expression.split(';').map(x => x.trim()).filter(x => x !== '');\n\t\tconst forExpressions: string[] = expressions[0].split(' of ').map(x => x.trim());\n\t\tlet value: string = forExpressions[0].replace(/\\s*let\\s*/, '');\n\t\tconst iterable: string = forExpressions[1];\n\t\tlet key: string = 'index';\n\t\tconst keyValueMatches: RegExpMatchArray | null = value.match(/\\[(.+)\\s*,\\s*(.+)\\]/);\n\t\tif (keyValueMatches) {\n\t\t\tkey = keyValueMatches[1];\n\t\t\tvalue = keyValueMatches[2];\n\t\t}\n\t\tif (expressions.length > 1) {\n\t\t\tconst indexExpressions: string[] = expressions[1].split(/\\s*let\\s*|\\s*=\\s*index/).map(x => x.trim());\n\t\t\tif (indexExpressions.length === 3) {\n\t\t\t\tkey = indexExpressions[1];\n\t\t\t}\n\t\t}\n\t\treturn { key, value, iterable };\n\t}\n\tstatic meta: IFactoryMeta = {\n\t\tselector: '[*for]',\n\t};\n}\n","import Directive from '../core/directive';\nimport { getContext } from '../core/factory';\nimport { IFactoryMeta } from '../core/types';\n\nexport default class HrefDirective extends Directive {\n\tset href(href: string) {\n\t\tif (this.href_ !== href) {\n\t\t\tthis.href_ = href;\n\t\t\tconst { node } = getContext(this);\n\t\t\thref ? node.setAttribute('href', href) : node.removeAttribute('href');\n\t\t}\n\t}\n\tget href(): string {\n\t\treturn this.href_;\n\t}\n\tstatic meta: IFactoryMeta = {\n\t\tselector: '[[href]]',\n\t\tinputs: ['href'],\n\t};\n}\n\n","import Factory, { getContext } from '../core/factory';\nimport Structure from '../core/structure';\nimport { ExpressionFunction, IComment, IElement, IFactoryMeta } from '../core/types';\n\nexport default class IfStructure extends Structure {\n\tifend?: IComment;\n\tifFunction?: ExpressionFunction;\n\tclonedNode?: IElement;\n\telement?: IElement;\n\tonInit() {\n\t\tconst { module, node } = getContext(this);\n\t\tconst ifbegin: IComment = this.ifbegin = document.createComment(`*if begin`);\n\t\tifbegin.rxcompId = node.rxcompId;\n\t\tnode.parentNode!.replaceChild(ifbegin, node);\n\t\tconst ifend = this.ifend = document.createComment(`*if end`);\n\t\tifbegin.parentNode!.insertBefore(ifend, ifbegin.nextSibling);\n\t\tconst expression = node.getAttribute('*if');\n\t\tthis.ifFunction = module.makeFunction(expression!);\n\t\tconst clonedNode = node.cloneNode(true) as IElement;\n\t\tclonedNode.removeAttribute('*if');\n\t\tthis.clonedNode = clonedNode;\n\t\tthis.element = clonedNode.cloneNode(true) as IElement;\n\t\t// console.log('IfStructure.expression', expression);\n\t}\n\tonChanges(changes: Factory | Window) {\n\t\tconst { module } = getContext(this);\n\t\t// console.log('IfStructure.onChanges', changes);\n\t\tconst value = module.resolve(this.ifFunction!, changes, this);\n\t\tconst element: IElement = this.element!;\n\t\tif (value) {\n\t\t\tif (!element.parentNode) {\n\t\t\t\tconst ifend = this.ifend!;\n\t\t\t\tifend.parentNode!.insertBefore(element, ifend);\n\t\t\t\tmodule.compile(element);\n\t\t\t}\n\t\t} else {\n\t\t\tif (element.parentNode) {\n\t\t\t\tmodule.remove(element, this);\n\t\t\t\telement.parentNode.removeChild(element);\n\t\t\t\tthis.element = this.clonedNode!.cloneNode(true) as IElement;\n\t\t\t}\n\t\t}\n\t}\n\tstatic meta: IFactoryMeta = {\n\t\tselector: '[*if]',\n\t};\n}\n","import Directive from '../core/directive';\nimport { getContext } from '../core/factory';\nimport { IFactoryMeta } from '../core/types';\n\nexport default class InnerHtmlDirective extends Directive {\n\tset innerHTML(innerHTML: string) {\n\t\tif (this.innerHTML_ !== innerHTML) {\n\t\t\tthis.innerHTML_ = innerHTML;\n\t\t\tconst { node } = getContext(this);\n\t\t\tnode.innerHTML = innerHTML == undefined ? '' : innerHTML; // !!! keep == loose equality\n\t\t}\n\t}\n\tget innerHTML(): string {\n\t\treturn this.innerHTML_;\n\t}\n\tstatic meta: IFactoryMeta = {\n\t\tselector: `[innerHTML]`,\n\t\tinputs: ['innerHTML'],\n\t};\n}\n","import Component from '../core/component';\nimport { IFactoryMeta } from '../core/types';\n\nexport default class JsonComponent extends Component {\n\tactive: boolean = false;\n\tonToggle() {\n\t\tthis.active = !this.active;\n\t\tthis.pushChanges();\n\t}\n\tstatic meta: IFactoryMeta = {\n\t\tselector: 'json-component',\n\t\tinputs: ['item'],\n\t\ttemplate: /* html */`\n\t\t<div class=\"rxc-block\">\n\t\t\t<div class=\"rxc-head\">\n\t\t\t\t<span class=\"rxc-head__title\" (click)=\"onToggle()\">\n\t\t\t\t\t<span *if=\"!active\">+ json </span>\n\t\t\t\t\t<span *if=\"active\">- json </span>\n\t\t\t\t\t<span [innerHTML]=\"item\"></span>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t<ul class=\"rxc-list\" *if=\"active\">\n\t\t\t\t<li class=\"rxc-list__item\">\n\t\t\t\t\t<span class=\"rxc-list__value\" [innerHTML]=\"item | json\"></span>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</div>`,\n\t};\n}\n","import { IPipeMeta } from \"./types\";\n\nexport default class Pipe {\n\tstatic transform(value: any): any {\n\t\treturn value;\n\t}\n\tstatic meta: IPipeMeta;\n}\n","import Component from '../core/component';\r\nimport Directive from '../core/directive';\r\nimport Factory from '../core/factory';\r\nimport Pipe from '../core/pipe';\r\nimport Structure from '../core/structure';\r\nimport { FactoryList, IElement, IModuleParsedImportedMeta, IModuleParsedMeta, ISelectorResult, MatchFunction, PipeList, PipeMap, SelectorFunction } from '../core/types';\r\nimport { ModuleError } from '../error/error';\r\nimport Module from '../module/module';\r\n\r\nconst ORDER: FactoryList = [Structure, Component, Directive];\r\n\r\nexport default class Platform {\r\n\r\n\t/**\r\n\t * @param moduleFactory\r\n\t * @description This method returns an uncompiled module\r\n\t */\r\n\tstatic bootstrap(moduleFactory?: typeof Module): Module {\r\n\t\tif (!moduleFactory) {\r\n\t\t\tthrow new ModuleError('missing moduleFactory');\r\n\t\t}\r\n\t\tif (!moduleFactory.meta) {\r\n\t\t\tthrow new ModuleError('missing moduleFactory meta');\r\n\t\t}\r\n\t\tif (!moduleFactory.meta.bootstrap) {\r\n\t\t\tthrow new ModuleError('missing bootstrap');\r\n\t\t}\r\n\t\tif (!moduleFactory.meta.bootstrap.meta) {\r\n\t\t\tthrow new ModuleError('missing bootstrap meta');\r\n\t\t}\r\n\t\tif (!moduleFactory.meta.bootstrap.meta.selector) {\r\n\t\t\tthrow new ModuleError('missing bootstrap meta selector');\r\n\t\t}\r\n\t\tconst meta: IModuleParsedMeta = this.resolveMeta(moduleFactory!);\r\n\t\tconst module: Module = new moduleFactory();\r\n\t\tmodule.meta = meta;\r\n\t\tmeta.imports.forEach((moduleFactory: typeof Module) => {\r\n\t\t\tmoduleFactory.prototype.constructor.call(module);\r\n\t\t});\r\n\t\t// const instances = module.compile(meta.node, window);\r\n\t\t// module.instances = instances;\r\n\t\t// const root = instances[0];\r\n\t\t// root.pushChanges();\r\n\t\treturn module;\r\n\t}\r\n\r\n\tprotected static querySelector(selector: string): IElement | null {\r\n\t\treturn document.querySelector(selector);\r\n\t}\r\n\r\n\tprotected static resolveMeta(moduleFactory: typeof Module): IModuleParsedMeta {\r\n\t\tconst meta: IModuleParsedImportedMeta = this.resolveImportedMeta(moduleFactory);\r\n\t\tconst bootstrap: typeof Factory = moduleFactory.meta.bootstrap!;\r\n\t\tconst node = this.querySelector(bootstrap.meta.selector!);\r\n\t\tif (!node) {\r\n\t\t\tthrow new ModuleError(`missing node ${bootstrap.meta.selector}`);\r\n\t\t}\r\n\t\tconst nodeInnerHTML = node.innerHTML;\r\n\t\tconst pipes = this.resolvePipes(meta);\r\n\t\tconst factories = this.resolveFactories(meta);\r\n\t\tthis.sortFactories(factories);\r\n\t\tfactories.unshift(bootstrap);\r\n\t\tconst selectors = this.unwrapSelectors(factories);\r\n\t\treturn { factories, pipes, selectors, bootstrap, node, nodeInnerHTML, imports: moduleFactory.meta.imports || [] };\r\n\t}\r\n\r\n\tprotected static resolveImportedMeta(moduleFactory: typeof Module): IModuleParsedImportedMeta {\r\n\t\tconst meta: IModuleParsedImportedMeta = Object.assign({\r\n\t\t\timports: [],\r\n\t\t\tdeclarations: [],\r\n\t\t\tpipes: [],\r\n\t\t\texports: []\r\n\t\t}, moduleFactory.meta);\r\n\t\tmeta.imports = (moduleFactory.meta.imports || []).map(moduleFactory => this.resolveImportedMeta(moduleFactory));\r\n\t\treturn meta;\r\n\t}\r\n\r\n\tprotected static resolvePipes(meta: IModuleParsedImportedMeta, exported?: boolean): PipeMap {\r\n\t\tconst importedPipes: PipeMap[] = meta.imports.map((importMeta: IModuleParsedImportedMeta) => this.resolvePipes(importMeta, true));\r\n\t\tconst pipes: PipeMap = {};\r\n\t\tconst pipeList: PipeList = (exported ? meta.exports : meta.declarations).filter((x): x is typeof Pipe => x.prototype instanceof Pipe);\r\n\t\tpipeList.forEach(pipeFactory => pipes[pipeFactory.meta.name] = pipeFactory);\r\n\t\treturn Object.assign({}, ...importedPipes, pipes);\r\n\t}\r\n\r\n\tprotected static resolveFactories(meta: IModuleParsedImportedMeta, exported?: boolean): FactoryList {\r\n\t\tconst importedFactories: FactoryList[] = meta.imports.map((importMeta: any) => this.resolveFactories(importMeta, true));\r\n\t\tconst factoryList: FactoryList = (exported ? meta.exports : meta.declarations).filter((x): x is typeof Factory => x.prototype instanceof Factory);\r\n\t\treturn Array.prototype.concat.call(factoryList, ...importedFactories);\r\n\t}\r\n\r\n\tprotected static sortFactories(factories: FactoryList): void {\r\n\t\tfactories.sort((a, b) => {\r\n\t\t\tconst ai = ORDER.reduce((p, c, i) => a.prototype instanceof c ? i : p, -1);\r\n\t\t\tconst bi = ORDER.reduce((p, c, i) => b.prototype instanceof c ? i : p, -1);\r\n\t\t\t// return ai - bi;\r\n\t\t\tconst o = ai - bi;\r\n\t\t\tif (o === 0) {\r\n\t\t\t\treturn (a.meta.hosts ? 1 : 0) - (b.meta.hosts ? 1 : 0);\r\n\t\t\t}\r\n\t\t\treturn o;\r\n\t\t});\r\n\t}\r\n\r\n\tprotected static getExpressions(selector: string): MatchFunction[] {\r\n\t\tlet matchers: ((node: HTMLElement) => boolean)[] = [];\r\n\t\tselector.replace(/\\.([\\w\\-\\_]+)|\\[(.+?\\]*)(\\=)(.*?)\\]|\\[(.+?\\]*)\\]|([\\w\\-\\_]+)/g, function (value: string, c1, a2, u3, v4, a5, e6) {\r\n\t\t\tif (c1) {\r\n\t\t\t\tmatchers.push(function (node) {\r\n\t\t\t\t\treturn node.classList.contains(c1);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif (a2) {\r\n\t\t\t\tmatchers.push(function (node) {\r\n\t\t\t\t\treturn (node.hasAttribute(a2) && node.getAttribute(a2) === v4) ||\r\n\t\t\t\t\t\t(node.hasAttribute(`[${a2}]`) && node.getAttribute(`[${a2}]`) === v4);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif (a5) {\r\n\t\t\t\tmatchers.push(function (node) {\r\n\t\t\t\t\treturn node.hasAttribute(a5) || node.hasAttribute(`[${a5}]`);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif (e6) {\r\n\t\t\t\tmatchers.push(function (node) {\r\n\t\t\t\t\treturn node.nodeName.toLowerCase() === e6.toLowerCase();\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn '';\r\n\t\t});\r\n\t\treturn matchers;\r\n\t}\r\n\r\n\tprotected static unwrapSelectors(factories: FactoryList): SelectorFunction[] {\r\n\t\tconst selectors: SelectorFunction[] = [];\r\n\t\tfactories.forEach((factory: typeof Factory) => {\r\n\t\t\tif (factory.meta && factory.meta.selector) {\r\n\t\t\t\tfactory.meta.selector.split(',').forEach((selector: string) => {\r\n\t\t\t\t\tselector = selector.trim();\r\n\t\t\t\t\tlet excludes: MatchFunction[] = [];\r\n\t\t\t\t\tconst matchSelector = selector.replace(/\\:not\\((.+?)\\)/g, (value, unmatchSelector) => {\r\n\t\t\t\t\t\texcludes = this.getExpressions(unmatchSelector);\r\n\t\t\t\t\t\treturn '';\r\n\t\t\t\t\t});\r\n\t\t\t\t\tconst includes: MatchFunction[] = this.getExpressions(matchSelector);\r\n\t\t\t\t\tselectors.push((node) => {\r\n\t\t\t\t\t\tconst included = includes.reduce((p, match) => {\r\n\t\t\t\t\t\t\treturn p && match(node);\r\n\t\t\t\t\t\t}, true);\r\n\t\t\t\t\t\tconst excluded = excludes.reduce((p, match) => {\r\n\t\t\t\t\t\t\treturn p || match(node);\r\n\t\t\t\t\t\t}, false);\r\n\t\t\t\t\t\tif (included && !excluded) {\r\n\t\t\t\t\t\t\treturn { node, factory, selector } as ISelectorResult;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn selectors;\r\n\t}\r\n\r\n}\r\n\r\n/* global window self */\r\nexport const PLATFORM_BROWSER = typeof window !== 'undefined' && typeof window.document !== 'undefined';\r\n\r\n/* eslint-disable no-undef */\r\nexport const PLATFORM_JS_DOM = (typeof window !== 'undefined' && window.name === 'nodejs') || (typeof navigator !== 'undefined' && navigator.userAgent.includes('Node.js')) || (typeof navigator !== 'undefined' && navigator.userAgent.includes('jsdom'));\r\n/* eslint-enable no-undef */\r\n\r\nexport const PLATFORM_NODE = typeof process !== 'undefined' && process.versions != null && process.versions.node != null;\r\n\r\n/* eslint-disable no-restricted-globals */\r\nexport const PLATFORM_WEB_WORKER = typeof self === 'object' && self.constructor && self.constructor.name === 'DedicatedWorkerGlobalScope';\r\n\r\nexport const isPlatformServer = PLATFORM_NODE;\r\nexport const isPlatformBrowser = !PLATFORM_NODE && PLATFORM_BROWSER;\r\nexport const isPlatformWorker = PLATFORM_WEB_WORKER;\r\n","import { isPlatformBrowser } from \"../../platform\";\r\n\r\n/**\r\n * @example Serializer.encode(value, [encodeJson, encodeUriComponent, encodeBase64]);\r\n * @example Serializer.decode(value, [decodeBase64, decodeUriComponent, decodeJson]);\r\n */\r\nexport default class Serializer {\r\n\tstatic encode<T>(value: any, encoders: ((from: any) => any)[]): T;\r\n\tstatic encode(value: any, encoders: ((from: any) => any)[] = [encodeJson]): any {\r\n\t\treturn encoders.reduce((p, c) => c(p), value);\r\n\t}\r\n\r\n\tstatic decode<T>(value: any, decoders: ((from: any) => any)[]): T;\r\n\tstatic decode(value: any, decoders: ((from: any) => any)[] = [decodeJson]): any {\r\n\t\treturn decoders.reduce((p, c) => c(p), value);\r\n\t}\r\n\r\n\tstatic encodeJson<T>(value: any): T;\r\n\tstatic encodeJson(value: any): any {\r\n\t\treturn this.encode(value, [encodeJson]);\r\n\t}\r\n\r\n\tstatic decodeJson<T>(value: any): T;\r\n\tstatic decodeJson(value: any): any {\r\n\t\treturn this.decode(value, [decodeJson]);\r\n\t}\r\n\r\n\tstatic encodeBase64<T>(value: any): T;\r\n\tstatic encodeBase64(value: any): any {\r\n\t\treturn this.encode(value, [encodeJson, encodeBase64]);\r\n\t}\r\n\r\n\tstatic decodeBase64<T>(value: any): T;\r\n\tstatic decodeBase64(value: any): any {\r\n\t\treturn this.decode(value, [decodeBase64, decodeJson]);\r\n\t}\r\n}\r\n\r\nexport function encodeJson(value: any, circularRef?: any, space?: string | number): string {\r\n\tlet decoded: any;\r\n\ttry {\r\n\t\t// const pool: Map<any, boolean> = new Map();\r\n\t\tconst pool: any[] = [];\r\n\t\tconst json: string = JSON.stringify(value, function (key, value) {\r\n\t\t\tif (typeof value === 'object' && value != null) {\r\n\t\t\t\t// if (pool.has(value)) {\r\n\t\t\t\tif (pool.indexOf(value) !== -1) {\r\n\t\t\t\t\t// console.warn(`Serializer.encodeJson.error`, `circular reference found, discard key \"${key}\"`);\r\n\t\t\t\t\treturn circularRef;\r\n\t\t\t\t}\r\n\t\t\t\tpool.push(value);\r\n\t\t\t\t// pool.set(value, true);\r\n\t\t\t}\r\n\t\t\treturn value;\r\n\t\t}, space);\r\n\t\tdecoded = json;\r\n\t} catch (error) {\r\n\t\t// console.warn(`Serializer.encodeJson.error`, value, error);\r\n\t}\r\n\treturn decoded;\r\n}\r\n\r\nexport function encodeJsonWithOptions(circularRef?: any, space?: string | number): (value: any) => string {\r\n\treturn (value: any) => encodeJson(value, circularRef, space);\r\n}\r\n\r\nexport function decodeJson(value: string): any {\r\n\tlet decoded: any;\r\n\tif (value) {\r\n\t\ttry {\r\n\t\t\tdecoded = JSON.parse(value);\r\n\t\t} catch (error) {\r\n\t\t\t// console.warn(`Serializer.decodeJson.error`, value, error);\r\n\t\t}\r\n\t}\r\n\treturn decoded;\r\n}\r\n\r\nexport function encodeBase64(value: string): string {\r\n\tlet encoded: string;\r\n\ttry {\r\n\t\tencoded = isPlatformBrowser ? btoa(value) : Buffer.from(value).toString('base64');\r\n\t} catch (error) {\r\n\t\tencoded = value;\r\n\t}\r\n\treturn encoded;\r\n}\r\n\r\nexport function decodeBase64(value: string): string {\r\n\tlet decoded: string;\r\n\ttry {\r\n\t\tdecoded = isPlatformBrowser ? atob(value) : Buffer.from(value, 'base64').toString();\r\n\t} catch (error) {\r\n\t\tdecoded = value;\r\n\t}\r\n\treturn decoded;\r\n}\r\n","import Pipe from '../core/pipe';\nimport { IPipeMeta } from '../core/types';\nimport Serializer, { encodeJsonWithOptions } from '../platform/common/serializer/serializer';\n\nexport default class JsonPipe extends Pipe {\n\tstatic transform(value: any): string | undefined {\n\t\treturn Serializer.encode(value, [encodeJsonWithOptions('#ref', 2)]);\n\t}\n\tstatic meta: IPipeMeta = {\n\t\tname: 'json',\n\t};\n}\n","import { Observable, Subject } from 'rxjs';\nimport { takeUntil, tap } from 'rxjs/operators';\nimport Component from '../core/component';\nimport Context from '../core/context';\nimport Factory, { CONTEXTS, getContext, NODES } from '../core/factory';\nimport Structure from '../core/structure';\nimport { ExpressionFunction, IContext, IElement, IFactoryMeta, IModuleMeta, IModuleParsedMeta, ISelectorResult, IText, SelectorFunction } from '../core/types';\nimport { ExpressionError, nextError$ } from '../error/error';\nimport { isPlatformBrowser } from '../platform/platform';\n\nlet ID: number = 0;\n\nexport default class Module {\n\tmeta?: IModuleParsedMeta;\n\tinstances?: Factory[];\n\tunsubscribe$: Subject<void> = new Subject();\n\tstatic forRoot?: (...args: any[]) => typeof Module;\n\tpublic compile(node: IElement, parentInstance?: Factory | Window): Factory[] {\n\t\tlet componentNode: IElement;\n\t\tconst instances: Factory[] = Module.querySelectorsAll(node, this.meta!.selectors, []).map((match: ISelectorResult) => {\n\t\t\tif (componentNode && componentNode !== match.node) {\n\t\t\t\tparentInstance = undefined;\n\t\t\t}\n\t\t\tconst instance: Factory | undefined = this.makeInstance(match.node, match.factory, match.selector, parentInstance);\n\t\t\tif (match.factory.prototype instanceof Component) {\n\t\t\t\tcomponentNode = match.node;\n\t\t\t}\n\t\t\treturn instance;\n\t\t}).filter((x): x is Factory => x !== undefined);\n\t\t// instances.forEach(x => x.onInit());\n\t\t// console.log('compile', instances, node, parentInstance);\n\t\treturn instances;\n\t}\n\tpublic makeInstance(node: IElement, factory: typeof Factory, selector: string, parentInstance?: Factory | Window, args?: any[], inject?: { [key: string]: any }): Factory | undefined {\n\t\tif (parentInstance || node.parentNode) {\n\t\t\tconst meta: IFactoryMeta = factory.meta;\n\t\t\t// collect parentInstance scope\n\t\t\tparentInstance = parentInstance || this.getParentInstance(node.parentNode);\n\t\t\tif (!parentInstance) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\t// creating factory instance\n\t\t\tconst instance = new factory(...(args || []));\n\t\t\t// injecting custom properties\n\t\t\tif (inject) {\n\t\t\t\tObject.keys(inject).forEach(key => {\n\t\t\t\t\t// console.log('Module.makeInstance', key, inject[key]);\n\t\t\t\t\tObject.defineProperty(instance, key, {\n\t\t\t\t\t\tvalue: inject[key],\n\t\t\t\t\t\tconfigurable: false,\n\t\t\t\t\t\tenumerable: false,\n\t\t\t\t\t\twritable: true,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t\t// creating instance context\n\t\t\tconst context = Module.makeContext(this, instance, parentInstance, node, factory, selector);\n\t\t\t// creating component input and outputs\n\t\t\tif (meta) {\n\t\t\t\tthis.makeHosts(meta, instance, node);\n\t\t\t\tcontext.inputs = this.makeInputs(meta, instance);\n\t\t\t\tcontext.outputs = this.makeOutputs(meta, instance);\n\t\t\t\tif (parentInstance instanceof Factory) {\n\t\t\t\t\tthis.resolveInputsOutputs(instance, parentInstance);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// calling onInit event\n\t\t\tinstance.onInit();\n\t\t\t// subscribe to parent changes\n\t\t\tif (parentInstance instanceof Factory) {\n\t\t\t\tparentInstance.changes$.pipe(\n\t\t\t\t\t// filter(() => node.parentNode),\n\t\t\t\t\t// debounceTime(1),\n\t\t\t\t\t/*\n\t\t\t\t\tdistinctUntilChanged(function(prev, curr) {\n\t\t\t\t\t\t// console.log(isComponent, context.inputs);\n\t\t\t\t\t\tif (isComponent && meta && Object.keys(context.inputs).length === 0) {\n\t\t\t\t\t\t\treturn true; // same\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t\t*/\n\t\t\t\t\ttakeUntil(instance.unsubscribe$)\n\t\t\t\t).subscribe((changes: Factory | Window) => {\n\t\t\t\t\t// resolve component input outputs\n\t\t\t\t\tif (meta) {\n\t\t\t\t\t\tthis.resolveInputsOutputs(instance, changes);\n\t\t\t\t\t}\n\t\t\t\t\t// calling onChanges event with changes\n\t\t\t\t\tinstance.onChanges(changes);\n\t\t\t\t\t// push instance changes for subscribers\n\t\t\t\t\tinstance.pushChanges();\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn instance;\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t}\n\tpublic makeFunction(expression: string, params: string[] = ['$instance']): ExpressionFunction {\n\t\tif (expression) {\n\t\t\texpression = Module.parseExpression(expression);\n\t\t\t// console.log(expression);\n\t\t\tconst args: string = params.join(',');\n\t\t\tconst expression_func: ExpressionFunction = new Function(`with(this) {\n\t\t\t\treturn (function (${args}, $$module) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst $$pipes = $$module.meta.pipes;\n\t\t\t\t\t\treturn ${expression};\n\t\t\t\t\t} catch(error) {\n\t\t\t\t\t\t$$module.nextError(error, this, ${JSON.stringify(expression)}, arguments);\n\t\t\t\t\t}\n\t\t\t\t}.bind(this)).apply(this, arguments);\n\t\t\t}`) as ExpressionFunction;\n\t\t\t// console.log(this, $$module, $$pipes, \"${expression}\");\n\t\t\t// console.log(expression_func);\n\t\t\treturn expression_func;\n\t\t} else {\n\t\t\treturn () => { return null; };\n\t\t}\n\t}\n\tpublic nextError(error: Error, instance: Factory, expression: string, params: any[]): void {\n\t\tconst expressionError: ExpressionError = new ExpressionError(error, this, instance, expression, params);\n\t\tnextError$.next(expressionError);\n\t}\n\tpublic resolve(expression: ExpressionFunction, parentInstance: Factory | Window, payload: any): any {\n\t\t// console.log(expression, parentInstance, payload);\n\t\treturn expression.apply(parentInstance, [payload, this]);\n\t}\n\tpublic parse(node: IElement, instance: Factory): void {\n\t\tfor (let i: number = 0; i < node.childNodes.length; i++) {\n\t\t\tconst child: ChildNode = node.childNodes[i];\n\t\t\tif (child.nodeType === 1) {\n\t\t\t\tconst element: HTMLElement = child as HTMLElement;\n\t\t\t\tconst context: IContext | void = getParsableContextByNode(element);\n\t\t\t\tif (!context) {\n\t\t\t\t\tthis.parse(element, instance);\n\t\t\t\t}\n\t\t\t} else if (child.nodeType === 3) {\n\t\t\t\tconst text: IText = child as IText;\n\t\t\t\tthis.parseTextNode(text, instance);\n\t\t\t}\n\t\t}\n\t}\n\tpublic remove(node: Node, keepInstance?: Factory): Node {\n\t\tconst keepContext: IContext | undefined = keepInstance ? getContext(keepInstance) : undefined;\n\t\tModule.traverseDown(node, (node: Node) => {\n\t\t\tconst rxcompId: number | undefined = (node as IElement).rxcompId;\n\t\t\tif (rxcompId) {\n\t\t\t\tconst keepContexts: IContext[] = Module.deleteContext(rxcompId, keepContext);\n\t\t\t\tif (keepContexts.length === 0) {\n\t\t\t\t\tdelete (node as IElement).rxcompId;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn node;\n\t}\n\tpublic destroy(): void {\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t\tthis.remove(this.meta!.node);\n\t\tthis.meta!.node.innerHTML = this.meta!.nodeInnerHTML;\n\t}\n\tprotected makeContext(instance: Factory, parentInstance: Factory | Window, node: IElement, selector: string): IContext {\n\t\tconst context: IContext = Module.makeContext(this, instance, parentInstance, node, instance.constructor as typeof Factory, selector);\n\t\t// console.log('Module.makeContext', context, context.instance, context.node);\n\t\treturn context;\n\t}\n\tprotected getInstance(node: HTMLElement | Document): Factory | Window | undefined {\n\t\tif (node === document) {\n\t\t\treturn (isPlatformBrowser ? window : global) as Window;\n\t\t}\n\t\tconst context: IContext | undefined = getContextByNode(node);\n\t\tif (context) {\n\t\t\treturn context.instance;\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t}\n\tprotected getParentInstance(node: Node | null): Factory | Window {\n\t\treturn Module.traverseUp(node, (node: Node) => {\n\t\t\treturn this.getInstance(node as HTMLElement);\n\t\t});\n\t}\n\tprotected parseTextNode(node: IText, instance: Factory): void {\n\t\tlet expressions: (ExpressionFunction | string)[] | undefined = node.nodeExpressions;\n\t\tif (!expressions) {\n\t\t\texpressions = this.parseTextNodeExpression(node.wholeText);\n\t\t}\n\t\tif (expressions.length) {\n\t\t\tconst replacedText: string = expressions.reduce((p: string, c: ExpressionFunction | string) => {\n\t\t\t\tlet text: string;\n\t\t\t\tif (typeof c === 'function') { // instanceOf ExpressionFunction ?;\n\t\t\t\t\ttext = this.resolve(c as ExpressionFunction, instance, instance);\n\t\t\t\t\tif (text == undefined) { // !!! keep == loose equality\n\t\t\t\t\t\ttext = '';\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\ttext = c;\n\t\t\t\t}\n\t\t\t\treturn p + text;\n\t\t\t}, '');\n\t\t\tif (node.nodeValue !== replacedText) {\n\t\t\t\tconst textNode: IText = document.createTextNode(replacedText) as IText;\n\t\t\t\ttextNode.nodeExpressions = expressions;\n\t\t\t\tnode.parentNode!.replaceChild(textNode, node);\n\t\t\t}\n\t\t} else {\n\t\t\tnode.nodeExpressions = expressions;\n\t\t}\n\t}\n\tprotected pushFragment(nodeValue: string, from: number, to: number, expressions: (ExpressionFunction | string)[]): void {\n\t\tconst fragment: string = nodeValue.substring(from, to);\n\t\texpressions.push(fragment);\n\t}\n\tprotected parseTextNodeExpression(nodeValue: string): (ExpressionFunction | string)[] {\n\t\tconst expressions: (ExpressionFunction | string)[] = [];\n\t\tconst regex: RegExp = /\\{{2}((([^{}])|(\\{([^{}]|(\\{.*?\\}))+?\\}))*?)\\}{2}/g;\n\t\tlet lastIndex: number = 0,\n\t\t\tmatches: RegExpExecArray | null;\n\t\twhile ((matches = regex.exec(nodeValue)) !== null) {\n\t\t\tconst index: number = regex.lastIndex - matches[0].length;\n\t\t\tif (index > lastIndex) {\n\t\t\t\tthis.pushFragment(nodeValue, index, lastIndex, expressions);\n\t\t\t}\n\t\t\tlastIndex = regex.lastIndex;\n\t\t\tconst expression: ExpressionFunction = this.makeFunction(matches[1]);\n\t\t\texpressions.push(expression);\n\t\t}\n\t\tconst length: number = nodeValue.length;\n\t\tif (length > lastIndex) {\n\t\t\tthis.pushFragment(nodeValue, lastIndex, length, expressions);\n\t\t}\n\t\tif (expressions.find(x => typeof x === 'function')) {\n\t\t\treturn expressions;\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\tprotected makeHosts(meta: IFactoryMeta, instance: Factory, node: IElement): void {\n\t\tif (meta.hosts) {\n\t\t\tObject.keys(meta.hosts).forEach((key: string) => {\n\t\t\t\tconst factory: typeof Factory = meta.hosts![key];\n\t\t\t\tinstance[key] = getHost(instance, factory, node);\n\t\t\t});\n\t\t}\n\t}\n\tprotected makeInput(instance: Factory, key: string): ExpressionFunction | null {\n\t\tconst { node } = getContext(instance);\n\t\tlet input: ExpressionFunction | null = null,\n\t\t\texpression: string | null = null;\n\t\tif (node.hasAttribute(`[${key}]`)) {\n\t\t\texpression = node.getAttribute(`[${key}]`)!;\n\t\t} else if (node.hasAttribute(key)) {\n\t\t\t// const attribute = node.getAttribute(key).replace(/{{/g, '\"+').replace(/}}/g, '+\"');\n\t\t\tconst attribute: string = node.getAttribute(key)!.replace(/({{)|(}})|(\")/g, function (substring: string, a, b, c) {\n\t\t\t\tif (a) {\n\t\t\t\t\treturn '\"+';\n\t\t\t\t}\n\t\t\t\tif (b) {\n\t\t\t\t\treturn '+\"';\n\t\t\t\t}\n\t\t\t\tif (c) {\n\t\t\t\t\treturn '\\\"';\n\t\t\t\t}\n\t\t\t\treturn '';\n\t\t\t});\n\t\t\texpression = `\"${attribute}\"`;\n\t\t}\n\t\tif (expression) {\n\t\t\tinput = this.makeFunction(expression);\n\t\t}\n\t\treturn input;\n\t}\n\tprotected makeInputs(meta: IFactoryMeta, instance: Factory): { [key: string]: ExpressionFunction } {\n\t\tconst inputs: { [key: string]: ExpressionFunction } = {};\n\t\tif (meta.inputs) {\n\t\t\tmeta.inputs.forEach((key: string, i: number) => {\n\t\t\t\tconst input = this.makeInput(instance, key);\n\t\t\t\tif (input) {\n\t\t\t\t\tinputs[key] = input;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn inputs;\n\t}\n\tprotected makeOutput(instance: Factory, key: string): Observable<any> {\n\t\tconst context: IContext = getContext(instance);\n\t\tconst node: IElement = context.node;\n\t\tconst parentInstance: Factory | Window = context.parentInstance;\n\t\tconst expression: string | null = node.getAttribute(`(${key})`);\n\t\tconst outputFunction: ExpressionFunction | null = expression ? this.makeFunction(expression, ['$event']) : null;\n\t\tconst output$: Observable<any> = new Subject<any>().pipe(\n\t\t\ttap((event) => {\n\t\t\t\tif (outputFunction) {\n\t\t\t\t\t// console.log(expression, parentInstance);\n\t\t\t\t\tthis.resolve(outputFunction, parentInstance, event);\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t\toutput$.pipe(\n\t\t\ttakeUntil(instance.unsubscribe$)\n\t\t).subscribe();\n\t\tinstance[key] = output$;\n\t\treturn output$;\n\t}\n\tprotected makeOutputs(meta: IFactoryMeta, instance: Factory): { [key: string]: Observable<any> } {\n\t\tconst outputs: { [key: string]: Observable<any> } = {};\n\t\tif (meta.outputs) {\n\t\t\tmeta.outputs.forEach((key: string) => {\n\t\t\t\tconst output = this.makeOutput(instance, key);\n\t\t\t\tif (output) {\n\t\t\t\t\toutputs[key] = output;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn outputs;\n\t}\n\tprotected resolveInputsOutputs(instance: Factory, changes: Factory | Window): void {\n\t\tconst context: IContext = getContext(instance);\n\t\tconst parentInstance: Factory | Window = context.parentInstance;\n\t\tconst inputs: { [key: string]: ExpressionFunction } = context.inputs!;\n\t\tfor (let key in inputs) {\n\t\t\tconst inputFunction: ExpressionFunction = inputs[key];\n\t\t\tconst value: any = this.resolve(inputFunction, parentInstance, instance);\n\t\t\tinstance[key] = value;\n\t\t}\n\t}\n\tprotected static parseExpression(expression: string): string {\n\t\tconst l: string = '┌';\n\t\tconst r: string = '┘';\n\t\tconst rx1: RegExp = /(\\()([^\\(\\)]*)(\\))/;\n\t\twhile (expression.match(rx1)) {\n\t\t\texpression = expression.replace(rx1, function (substring: string, ...args: any[]) {\n\t\t\t\treturn `${l}${Module.parsePipes(args[1])}${r}`;\n\t\t\t});\n\t\t}\n\t\texpression = Module.parsePipes(expression);\n\t\texpression = expression.replace(/(┌)|(┘)/g, function (substring: string, ...args) {\n\t\t\treturn args[0] ? '(' : ')';\n\t\t});\n\t\treturn Module.parseOptionalChaining(expression);\n\t}\n\tprotected static parsePipes(expression: string): string {\n\t\tconst l: string = '┌';\n\t\tconst r: string = '┘';\n\t\tconst rx1: RegExp = /(.*?[^\\|])\\|([^\\|]+)/;\n\t\twhile (expression.match(rx1)) {\n\t\t\texpression = expression.replace(rx1, function (substring: string, ...args: any[]) {\n\t\t\t\tconst value: string = args[0].trim();\n\t\t\t\tconst params: string[] = Module.parsePipeParams(args[1]);\n\t\t\t\tconst func: string = params.shift()!.trim();\n\t\t\t\treturn `$$pipes.${func}.transform${l}${[value, ...params]}${r}`;\n\t\t\t});\n\t\t}\n\t\treturn expression;\n\t}\n\tprotected static parsePipeParams(expression: string): string[] {\n\t\tconst segments: string[] = [];\n\t\tlet i: number = 0,\n\t\t\tword: string = '',\n\t\t\tblock: number = 0;\n\t\tconst t: number = expression.length;\n\t\twhile (i < t) {\n\t\t\tconst c: string = expression.substr(i, 1);\n\t\t\tif (c === '{' || c === '(' || c === '[') {\n\t\t\t\tblock++;\n\t\t\t}\n\t\t\tif (c === '}' || c === ')' || c === ']') {\n\t\t\t\tblock--;\n\t\t\t}\n\t\t\tif (c === ':' && block === 0) {\n\t\t\t\tif (word.length) {\n\t\t\t\t\tsegments.push(word.trim());\n\t\t\t\t}\n\t\t\t\tword = '';\n\t\t\t} else {\n\t\t\t\tword += c;\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\t\tif (word.length) {\n\t\t\tsegments.push(word.trim());\n\t\t}\n\t\treturn segments;\n\t}\n\tprotected static parseOptionalChaining(expression: string): string {\n\t\tconst regex: RegExp = /(\\w+(\\?\\.))+([\\.|\\w]+)/g;\n\t\tlet previous: string;\n\t\texpression = expression.replace(regex, function (substring: string, ...args: any[]) {\n\t\t\tconst tokens: string[] = substring.split('?.');\n\t\t\tfor (let i: number = 0; i < tokens.length - 1; i++) {\n\t\t\t\tconst a: string = i > 0 ? `(${tokens[i]} = ${previous})` : tokens[i];\n\t\t\t\tconst b: string = tokens[i + 1];\n\t\t\t\tprevious = i > 0 ? `${a}.${b}` : `(${a} ? ${a}.${b} : void 0)`;\n\t\t\t}\n\t\t\treturn previous || '';\n\t\t});\n\t\treturn expression;\n\t}\n\tprotected static makeContext(module: Module, instance: Factory, parentInstance: Factory | Window, node: IElement, factory: typeof Factory, selector: string): IContext {\n\t\tinstance.rxcompId = ++ID;\n\t\tconst context: IContext = { module, instance, parentInstance, node, factory, selector };\n\t\tconst rxcompNodeId = node.rxcompId = (node.rxcompId || instance.rxcompId);\n\t\tconst nodeContexts = NODES[rxcompNodeId] || (NODES[rxcompNodeId] = []);\n\t\tnodeContexts.push(context);\n\t\tCONTEXTS[instance.rxcompId] = context;\n\t\treturn context;\n\t}\n\tprotected static deleteContext(id: number, keepContext: IContext | undefined): IContext[] {\n\t\tconst keepContexts: IContext[] = [];\n\t\tconst nodeContexts: IContext[] = NODES[id];\n\t\tif (nodeContexts) {\n\t\t\tnodeContexts.forEach((context: IContext) => {\n\t\t\t\tif (context === keepContext) {\n\t\t\t\t\tkeepContexts.push(keepContext);\n\t\t\t\t} else {\n\t\t\t\t\tconst instance: Factory = context.instance;\n\t\t\t\t\tinstance.unsubscribe$.next();\n\t\t\t\t\tinstance.unsubscribe$.complete();\n\t\t\t\t\tinstance.onDestroy();\n\t\t\t\t\tdelete CONTEXTS[instance.rxcompId];\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (keepContexts.length) {\n\t\t\t\tNODES[id] = keepContexts;\n\t\t\t} else {\n\t\t\t\tdelete NODES[id];\n\t\t\t}\n\t\t}\n\t\treturn keepContexts;\n\t}\n\tprotected static matchSelectors(node: HTMLElement, selectors: SelectorFunction[], results: ISelectorResult[]): ISelectorResult[] {\n\t\tfor (let i: number = 0; i < selectors.length; i++) {\n\t\t\tconst selectorResult: ISelectorResult | false = selectors[i](node);\n\t\t\tif (selectorResult) {\n\t\t\t\tconst factory: typeof Factory = selectorResult.factory;\n\t\t\t\tif (factory.prototype instanceof Component && factory.meta.template) {\n\t\t\t\t\tnode.innerHTML = factory.meta.template;\n\t\t\t\t}\n\t\t\t\tresults.push(selectorResult);\n\t\t\t\tif (factory.prototype instanceof Structure) {\n\t\t\t\t\t// console.log('Structure', node);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn results;\n\t}\n\tprotected static querySelectorsAll(node: Node, selectors: SelectorFunction[], results: ISelectorResult[]): ISelectorResult[] {\n\t\tif (node.nodeType === 1) {\n\t\t\tconst selectorResults: ISelectorResult[] = this.matchSelectors(node as HTMLElement, selectors, []);\n\t\t\tresults = results.concat(selectorResults);\n\t\t\tconst structure: ISelectorResult | undefined = selectorResults.find(x => x.factory.prototype instanceof Structure);\n\t\t\tif (structure) {\n\t\t\t\treturn results;\n\t\t\t}\n\t\t\tconst childNodes: NodeListOf<ChildNode> = node.childNodes;\n\t\t\tfor (let i: number = 0; i < childNodes.length; i++) {\n\t\t\t\tresults = this.querySelectorsAll(childNodes[i], selectors, results);\n\t\t\t}\n\t\t}\n\t\treturn results;\n\t}\n\tprotected static traverseUp(node: Node | null, callback: (node: Node, i: number) => any, i: number = 0): any {\n\t\tif (!node) {\n\t\t\treturn;\n\t\t}\n\t\tconst result = callback(node, i);\n\t\tif (result) {\n\t\t\treturn result;\n\t\t}\n\t\treturn this.traverseUp(node.parentNode, callback, i + 1);\n\t}\n\tprotected static traverseDown(node: Node | null, callback: (node: Node, i: number) => any, i: number = 0): any {\n\t\tif (!node) {\n\t\t\treturn;\n\t\t}\n\t\tlet result = callback(node, i);\n\t\tif (result) {\n\t\t\treturn result;\n\t\t}\n\t\tif (node.nodeType === 1) {\n\t\t\tlet j = 0,\n\t\t\t\tt = node.childNodes.length;\n\t\t\twhile (j < t && !result) {\n\t\t\t\tresult = this.traverseDown(node.childNodes[j], callback, i + 1);\n\t\t\t\tj++;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\tprotected static traversePrevious(node: Node | null, callback: (node: Node, i: number) => any, i: number = 0): any {\n\t\tif (!node) {\n\t\t\treturn;\n\t\t}\n\t\tconst result = callback(node, i);\n\t\tif (result) {\n\t\t\treturn result;\n\t\t}\n\t\treturn this.traversePrevious(node.previousSibling, callback, i + 1);\n\t}\n\tprotected static traverseNext(node: Node | null, callback: (node: Node, i: number) => any, i: number = 0): any {\n\t\tif (!node) {\n\t\t\treturn;\n\t\t}\n\t\tconst result = callback(node, i);\n\t\tif (result) {\n\t\t\treturn result;\n\t\t}\n\t\treturn this.traverseNext(node.nextSibling, callback, i + 1);\n\t}\n\tstatic meta: IModuleMeta;\n}\n\nexport function getParsableContextByNode(node: Node): IContext | undefined {\n\tlet context: IContext | undefined;\n\tconst rxcompId: number | undefined = (node as IElement).rxcompId;\n\tif (rxcompId) {\n\t\tconst nodeContexts: IContext[] = NODES[rxcompId];\n\t\tif (nodeContexts) {\n\t\t\tcontext = nodeContexts.reduce((previous: IContext | undefined, current: IContext) => {\n\t\t\t\tif (current.factory.prototype instanceof Component) {\n\t\t\t\t\treturn current;\n\t\t\t\t} else if (current.factory.prototype instanceof Context) {\n\t\t\t\t\treturn previous ? previous : current;\n\t\t\t\t\t/*\n\t\t\t\t\t} else if (current.factory.prototype instanceof Structure) {\n\t\t\t\t\t\treturn previous ? previous : current;\n\t\t\t\t\t*/\n\t\t\t\t} else {\n\t\t\t\t\treturn previous;\n\t\t\t\t}\n\t\t\t}, undefined);\n\t\t\t// console.log(node.rxcompId, context);\n\t\t}\n\t}\n\treturn context;\n}\nexport function getContextByNode(node: Node): IContext | undefined {\n\tlet context: IContext | undefined = getParsableContextByNode(node);\n\tif (context && context.factory.prototype instanceof Structure) {\n\t\tcontext = undefined;\n\t}\n\treturn context;\n}\nexport function getHost(instance: Factory, factory: typeof Factory, node: IElement): Factory | undefined {\n\tif (!node) {\n\t\tnode = getContext(instance).node;\n\t}\n\tif (node.rxcompId) {\n\t\tconst nodeContexts: IContext[] = NODES[node.rxcompId];\n\t\tif (nodeContexts) {\n\t\t\t// console.log(nodeContexts);\n\t\t\tfor (let i: number = 0; i < nodeContexts.length; i++) {\n\t\t\t\tconst context: IContext = nodeContexts[i];\n\t\t\t\tif (context.instance !== instance) {\n\t\t\t\t\t// console.log(context.instance, instance);\n\t\t\t\t\tif (context.instance instanceof factory) {\n\t\t\t\t\t\treturn context.instance;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif (node.parentNode) {\n\t\treturn getHost(instance, factory, node.parentNode as IElement);\n\t} else {\n\t\treturn undefined;\n\t}\n}\n","import Directive from '../core/directive';\nimport { getContext } from '../core/factory';\nimport { IFactoryMeta } from '../core/types';\n\nexport default class SrcDirective extends Directive {\n\tset src(src: string) {\n\t\tif (this.src_ !== src) {\n\t\t\tthis.src_ = src;\n\t\t\tconst { node } = getContext(this);\n\t\t\tsrc ? node.setAttribute('src', src) : node.removeAttribute('src');\n\t\t}\n\t}\n\tget src(): string {\n\t\treturn this.src_;\n\t}\n\tstatic meta: IFactoryMeta = {\n\t\tselector: '[[src]]',\n\t\tinputs: ['src'],\n\t};\n}\n","import Directive from '../core/directive';\nimport { getContext } from '../core/factory';\nimport { IFactoryMeta } from '../core/types';\n\nexport default class StyleDirective extends Directive {\n\n\tstyle?: { [key: string]: string } | null;\n\tpreviousStyle?: { [key: string]: string } | null;\n\n\tonChanges() {\n\t\tconst { node } = getContext(this);\n\t\tconst style = this.style;\n\t\tconst previousStyle = this.previousStyle;\n\t\tif (previousStyle) {\n\t\t\tfor (let key in previousStyle) {\n\t\t\t\tif (!style || !style[key]) {\n\t\t\t\t\tconst splitted: string[] = key.split('.');\n\t\t\t\t\tconst propertyName = splitted.shift();\n\t\t\t\t\tnode.style.removeProperty(propertyName!);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (style) {\n\t\t\tfor (let key in style) {\n\t\t\t\tif (!previousStyle || previousStyle[key] !== style[key]) {\n\t\t\t\t\tconst splitted: string[] = key.split('.');\n\t\t\t\t\tconst propertyName = splitted.shift();\n\t\t\t\t\tconst value = style[key] + (splitted.length ? splitted[0] : '');\n\t\t\t\t\t// console.log(propertyName, value, style, key, style[key]);\n\t\t\t\t\tnode.style.setProperty(propertyName!, value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.previousStyle = style;\n\t\t// console.log('StyleDirective.onChanges', style);\n\t}\n\tstatic meta: IFactoryMeta = {\n\t\tselector: `[[style]]`,\n\t\tinputs: ['style']\n\t};\n}\n","\nimport { takeUntil } from 'rxjs/operators';\nimport ClassDirective from './class/class.directive';\nimport Factory from './core/factory';\nimport Pipe from './core/pipe';\nimport { errors$ } from './error/error';\nimport EventDirective from './event/event.directive';\nimport ForStructure from './for/for.structure';\nimport HrefDirective from './href/href.directive';\nimport IfStructure from './if/if.structure';\nimport InnerHtmlDirective from './inner-html/inner-html.directive';\nimport JsonComponent from './json/json.component';\nimport JsonPipe from './json/json.pipe';\nimport Module from './module/module';\nimport SrcDirective from './src/src.directive';\nimport StyleDirective from './style/style.directive';\n\nconst factories: typeof Factory[] = [\n\tClassDirective,\n\tEventDirective,\n\tForStructure,\n\tHrefDirective,\n\tIfStructure,\n\tInnerHtmlDirective,\n\tJsonComponent,\n\tSrcDirective,\n\tStyleDirective,\n];\n\nconst pipes: typeof Pipe[] = [\n\tJsonPipe,\n];\n\nexport default class CoreModule extends Module {\n\tconstructor() {\n\t\tsuper();\n\t\t// console.log('CoreModule');\n\t\terrors$.pipe(\n\t\t\ttakeUntil(this.unsubscribe$),\n\t\t).subscribe();\n\t}\n\tstatic meta = {\n\t\tdeclarations: [\n\t\t\t...factories,\n\t\t\t...pipes,\n\t\t],\n\t\texports: [\n\t\t\t...factories,\n\t\t\t...pipes,\n\t\t]\n\t};\n}\n","import { IElement, IModuleParsedMeta } from '../core/types';\r\nimport { ModuleError } from '../error/error';\r\nimport Module from '../module/module';\r\nimport Platform, { isPlatformBrowser } from './platform';\r\n\r\nexport default class Browser extends Platform {\r\n\r\n\t/**\r\n\t * @param moduleFactory\r\n\t * @description This method returns a Browser compiled module\r\n\t */\r\n\tstatic bootstrap(moduleFactory?: typeof Module): Module {\r\n\t\tif (!isPlatformBrowser) {\r\n\t\t\tthrow new ModuleError('missing platform browser, window not found');\r\n\t\t}\r\n\t\tif (!moduleFactory) {\r\n\t\t\tthrow new ModuleError('missing moduleFactory');\r\n\t\t}\r\n\t\tif (!moduleFactory.meta) {\r\n\t\t\tthrow new ModuleError('missing moduleFactory meta');\r\n\t\t}\r\n\t\tif (!moduleFactory.meta.bootstrap) {\r\n\t\t\tthrow new ModuleError('missing bootstrap');\r\n\t\t}\r\n\t\tif (!moduleFactory.meta.bootstrap.meta) {\r\n\t\t\tthrow new ModuleError('missing bootstrap meta');\r\n\t\t}\r\n\t\tif (!moduleFactory.meta.bootstrap.meta.selector) {\r\n\t\t\tthrow new ModuleError('missing bootstrap meta selector');\r\n\t\t}\r\n\t\tconst meta: IModuleParsedMeta = this.resolveMeta(moduleFactory!);\r\n\t\tconst module: Module = new moduleFactory();\r\n\t\tmodule.meta = meta;\r\n\t\tmeta.imports.forEach((moduleFactory: typeof Module) => {\r\n\t\t\tmoduleFactory.prototype.constructor.call(module);\r\n\t\t});\r\n\t\tif (window.rxcomp_hydrate_) {\r\n\t\t\tconst clonedNode = meta.node.cloneNode() as IElement;\r\n\t\t\tclonedNode.innerHTML = meta.nodeInnerHTML = window.rxcomp_hydrate_.innerHTML;\r\n\t\t\tconst instances = module.compile(clonedNode, window);\r\n\t\t\tmodule.instances = instances;\r\n\t\t\tconst root = instances[0];\r\n\t\t\t// if (root instanceof module.meta.bootstrap) {\r\n\t\t\troot.pushChanges();\r\n\t\t\tmeta.node.parentNode?.replaceChild(clonedNode, meta.node);\r\n\t\t\t// }\r\n\t\t} else {\r\n\t\t\tconst instances = module.compile(meta.node, window);\r\n\t\t\tmodule.instances = instances;\r\n\t\t\tconst root = instances[0];\r\n\t\t\t// if (root instanceof module.meta.bootstrap) {\r\n\t\t\troot.pushChanges();\r\n\t\t\t// }\r\n\t\t}\r\n\t\treturn module;\r\n\t}\r\n\r\n}\r\n","import { Browser, Component, CoreModule, Module, Pipe } from '../../../src/rxcomp';\n\nclass RootComponent extends Component {\n\ttime: Date = new Date();\n\tvalue: number = 2;\n}\nRootComponent.meta = {\n\tselector: '[root-component]',\n};\n\nclass TimePipe extends Pipe {\n\tstatic transform(value: Date | string, options: number = 1): string {\n\t\tconst date = new Date(value);\n\t\treturn `${date.getHours()}:${date.getMinutes()}`;\n\t}\n}\nTimePipe.meta = {\n\tname: 'time',\n};\n\nclass MultPipe extends Pipe {\n\tstatic transform(value: string | number, mult1: number = 2, mult2: number = 1): number {\n\t\treturn Number(value) * Number(mult1) * Number(mult2);\n\t}\n}\nMultPipe.meta = {\n\tname: 'mult',\n};\n\nclass AppModule extends Module { }\nAppModule.meta = {\n\timports: [\n\t\tCoreModule\n\t],\n\tdeclarations: [\n\t\tTimePipe,\n\t\tMultPipe\n\t],\n\tbootstrap: RootComponent,\n};\n\nBrowser.bootstrap(AppModule);\n"]}