{"version":3,"sources":["src/rxcomp.ts","../../src/core/factory.ts","../../src/core/directive.ts","../../src/class/class.directive.ts","../../src/event/event.directive.ts","../../src/core/structure.ts","../../src/core/component.ts","../../src/core/context.ts","../../src/for/for.item.ts","../../src/for/for.structure.ts","../../src/href/href.directive.ts","../../src/if/if.structure.ts","../../src/inner-html/inner-html.directive.ts","../../src/json/json.component.ts","../../src/core/pipe.ts","../../src/json/json.pipe.ts","../../src/module/module.ts","../../src/src/src.directive.ts","../../src/style/style.directive.ts","../../src/core.module.ts","../../src/platform/platform.ts","../../src/platform/browser.ts"],"names":["global","factory","exports","module","require","define","amd","self","rxcomp","rxjs","operators","this","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","Constructor","protoProps","staticProps","prototype","_inheritsLoose","subClass","superClass","create","constructor","__proto__","_setPrototypeOf","o","p","setPrototypeOf","isNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","toString","call","e","_construct","Parent","args","Class","a","push","apply","instance","Function","bind","arguments","CONTEXTS","NODES","Factory","rxcompId","unsubscribe$","Subject","changes$","ReplaySubject","_proto","onInit","onChanges","changes","onView","onDestroy","pushChanges","getContext","instances","next","Directive","_Factory","ClassDirective","_this","_Directive","class","keys","_this2","node","Array","slice","classList","forEach","x","object","split","concat","setAttribute","join","meta","selector","inputs","EventDirective","event","_getContext","parentInstance","replace","event$","fromEvent","pipe","shareReplay","expression","getAttribute","outputFunction","makeFunction","takeUntil","subscribe","resolve","Structure","Component","parse","RESERVED_PROPERTIES","Context","descriptors","_Component","mergeDescriptors","getPrototypeOf","defineProperties","ReferenceError","_assertThisInitialized","context","filter","indexOf","source","properties","getOwnPropertyNames","_loop","shift","hasOwnProperty","getOwnPropertyDescriptor","value","_len","ForItem","$key","$value","index","count","_Context","get","even","ForStructure","_Structure","forbegin","document","createComment","parentNode","replaceChild","forend","insertBefore","nextSibling","removeAttribute","token","getExpressionToken","forFunction","iterable","result","isArray","array","total","previous","Math","max","clonedNode","cloneNode","makeInstance","compile","removeChild","remove","trim","expressions","map","forExpressions","keyValueMatches","match","indexExpressions","HrefDirective","set","href","href_","IfStructure","ifbegin","ifend","ifFunction","element","InnerHtmlDirective","innerHTML","innerHTML_","undefined","JsonComponent","active","onToggle","template","Pipe","transform","JsonPipe","_Pipe","cache","Map","JSON","stringify","has","name","ID","Module","componentNode","querySelectorsAll","selectors","getParentInstance","makeContext","makeHosts","makeInputs","outputs","makeOutputs","resolveInputsOutputs","params","parseExpression","payload","childNodes","child","nodeType","getParsableContextByNode","text","parseTextNode","keepInstance","keepContext","traverseDown","deleteContext","destroy","nodeInnerHTML","getInstance","Document","window","getContextByNode","_this3","traverseUp","_this4","nodeExpressions","parseTextNodeExpression","wholeText","replacedText","reduce","c","nodeValue","textNode","createTextNode","pushFragment","from","to","fragment","substring","matches","regex","lastIndex","exec","find","hosts","getHost","makeInput","input","hasAttribute","b","_this5","makeOutput","_this6","output$","tap","_this7","output","inputFunction","rx1","parsePipes","parseOptionalChaining","parsePipeParams","func","segments","word","block","t","substr","tokens","rxcompNodeId","id","keepContexts","nodeContexts","complete","matchSelectors","results","selectorResult","selectorResults","callback","j","traversePrevious","previousSibling","traverseNext","current","SrcDirective","src","src_","StyleDirective","style","previousStyle","propertyName","removeProperty","splitted","setProperty","factories","pipes","CoreModule","_Module","declarations","ORDER","Platform","bootstrap","moduleFactory","resolveMeta","isBrowser","Boolean","querySelector","resolveImportedMeta","resolvePipes","resolveFactories","sortFactories","unshift","unwrapSelectors","assign","imports","exported","importedPipes","importMeta","pipeFactory","_Array$prototype$conc","importedFactories","factoryList","sort","getExpressions","matchers","c1","a2","u3","v4","a5","e6","contains","nodeName","toLowerCase","excludes","matchSelector","unmatchSelector","includes","included","excluded","PLATFORM_BROWSER","PLATFORM_JS_DOM","navigator","userAgent","PLATFORM_NODE","process","versions","PLATFORM_WEB_WORKER","Browser","_Platform"],"mappings":"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","file":"dist\\umd\\rxcomp.min.js","sourcesContent":[null,"import { ReplaySubject, Subject } from 'rxjs';\nimport { IContext, IFactoryMeta } from './types';\n\nexport const CONTEXTS: { [key: number]: IContext } = {};\nexport const NODES: { [key: number]: IContext[] } = {};\n\nexport default class Factory {\n\n\tstatic meta: IFactoryMeta;\n\n\trxcompId: number = -1;\n\n\tunsubscribe$: Subject<void> = new Subject();\n\tchanges$: ReplaySubject<Factory> = new ReplaySubject(1);\n\n\tonInit(): void { }\n\tonChanges(changes: Factory | Window): void { }\n\tonView(): void { }\n\tonDestroy(): void { }\n\n\tpushChanges(): void {\n\t\tconst { module } = getContext(this);\n\t\tif (module.instances) {\n\t\t\tthis.changes$.next(this);\n\t\t\tthis.onView();\n\t\t}\n\t}\n\n\t[key: string]: any; // extensible object\n\n\tconstructor(...args: any[]) { }\n}\n\nexport function getContext(instance: Factory): IContext {\n\treturn CONTEXTS[instance.rxcompId];\n}\n","import Factory from './factory';\r\n\r\nexport default class Directive extends Factory {\r\n}\r\n","// import Factory, { ExpressionFunction } from '../core/factory';\nimport Directive from '../core/directive';\nimport { getContext } from '../core/factory';\n\nexport default class ClassDirective extends Directive {\n\n\tclass: { [key: string]: string } | string | null = '';\n\tkeys: string[] = [];\n\n\tonInit() {\n\t\tconst { node } = getContext(this);\n\t\tArray.prototype.slice.call(node.classList).forEach(x => this.keys.push(x));\n\t}\n\n\tonChanges() {\n\t\tconst { node } = getContext(this);\n\t\tlet keys: string[] = [];\n\t\tconst object = this.class;\n\t\tif (typeof object === 'object') {\n\t\t\tfor (let key in object) {\n\t\t\t\tif (object[key]) {\n\t\t\t\t\tkeys.push(key);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (typeof object === 'string') {\n\t\t\tkeys = object.split(/\\s+/);\n\t\t}\n\t\tkeys = keys.concat(this.keys);\n\t\t// console.log(keys);\n\t\tnode.setAttribute('class', keys.join(' '));\n\t\t// console.log('ClassDirective.onChanges', keys);\n\t}\n\n}\n\nClassDirective.meta = {\n\tselector: `[[class]]`,\n\tinputs: ['class']\n};\n","import { fromEvent, Observable } from 'rxjs';\r\nimport { shareReplay, takeUntil } from 'rxjs/operators';\r\nimport Directive from '../core/directive';\r\nimport { getContext } from '../core/factory';\r\n\r\nconst EVENTS = ['mousedown', 'mouseup', 'mousemove', 'click', 'dblclick', 'mouseover', 'mouseout', 'mouseenter', 'mouseleave', 'contextmenu', 'touchstart', 'touchmove', 'touchend', 'keydown', 'keyup', 'input', 'change', 'loaded'];\r\n\r\nexport default class EventDirective extends Directive {\r\n\r\n\tevent: string = '';\r\n\r\n\tonInit() {\r\n\t\tconst { module, node, parentInstance, selector } = getContext(this);\r\n\t\t// console.log('parentInstance', parentInstance);\r\n\t\tconst event = this.event = selector.replace(/\\[|\\]|\\(|\\)/g, '');\r\n\t\tconst event$: Observable<Event> = fromEvent<Event>(node, event).pipe(shareReplay(1));\r\n\t\tconst expression = node.getAttribute(`(${event})`);\r\n\t\tif (expression) {\r\n\t\t\tconst outputFunction = module.makeFunction(expression, ['$event']);\r\n\t\t\tevent$.pipe(\r\n\t\t\t\ttakeUntil(this.unsubscribe$)\r\n\t\t\t).subscribe(event => {\r\n\t\t\t\tmodule.resolve(outputFunction, parentInstance, event);\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tparentInstance[`${event}$`] = event$;\r\n\t\t}\r\n\t\t// console.log('EventDirective.onInit', 'selector', selector, 'event', event);\r\n\t}\r\n\r\n}\r\n\r\nEventDirective.meta = {\r\n\tselector: `[(${EVENTS.join(')],[(')})]`,\r\n};\r\n","import Factory from './factory';\r\n\r\nexport default class Structure extends Factory {\r\n}\r\n","\nimport Factory, { getContext } from './factory';\n\nexport default class Component extends Factory {\n\n\tpushChanges(): void {\n\t\tconst { module, node } = getContext(this);\n\t\tif (module.instances) {\n\t\t\t// console.log(new Error(`pushChanges ${instance.constructor.name}`).stack);\n\t\t\tthis.changes$.next(this);\n\t\t\t// console.log('Module.parse', instance.constructor.name);\n\t\t\t// parse component text nodes\n\t\t\tmodule.parse(node, this);\n\t\t\t// calling onView event\n\t\t\tthis.onView();\n\t\t}\n\t}\n\n}\n","// import { BehaviorSubject, Subject } from 'rxjs';\nimport Component from './component';\nimport Factory, { getContext } from './factory';\n\nconst RESERVED_PROPERTIES = ['constructor', 'rxcompId', 'onInit', 'onChanges', 'onDestroy', 'pushChanges', 'changes$', 'unsubscribe$'];\n\nexport default class Context extends Component {\n\n\tconstructor(parentInstance: Factory, descriptors: { [key: string]: PropertyDescriptor } = {}) {\n\t\tsuper();\n\t\tdescriptors = Context.mergeDescriptors(parentInstance, parentInstance, descriptors);\n\t\tdescriptors = Context.mergeDescriptors(Object.getPrototypeOf(parentInstance), parentInstance, descriptors);\n\t\tObject.defineProperties(this, descriptors);\n\t}\n\n\tpushChanges(): void {\n\t\tconst context = getContext(this);\n\t\tif (!context.keys) {\n\t\t\tcontext.keys = Object.keys(context.parentInstance).filter(key => RESERVED_PROPERTIES.indexOf(key) === -1);\n\t\t\t// console.log(context.keys.join(','));\n\t\t}\n\t\tif (context.module.instances) {\n\t\t\tcontext.keys.forEach(key => {\n\t\t\t\tthis[key] = context.parentInstance[key];\n\t\t\t});\n\t\t}\n\t\tsuper.pushChanges();\n\t}\n\n\tstatic mergeDescriptors(source: Object, instance: Factory, descriptors: { [key: string]: PropertyDescriptor } = {}): { [key: string]: PropertyDescriptor } {\n\t\tconst properties: string[] = Object.getOwnPropertyNames(source);\n\t\twhile (properties.length) {\n\t\t\tconst key: string = properties.shift() as string;\n\t\t\tif (RESERVED_PROPERTIES.indexOf(key) === -1 && !descriptors.hasOwnProperty(key)) {\n\t\t\t\tconst descriptor: PropertyDescriptor = Object.getOwnPropertyDescriptor(source, key) as PropertyDescriptor;\n\t\t\t\tif (typeof descriptor.value == 'function') {\n\t\t\t\t\tdescriptor.value = (...args: any[]) => {\n\t\t\t\t\t\treturn instance[key].apply(instance, args);\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tdescriptors[key] = descriptor;\n\t\t\t}\n\t\t}\n\t\treturn descriptors;\n\t}\n\n}\n","import Context from '../core/context';\r\nimport Factory from '../core/factory';\r\n\r\nexport default class ForItem extends Context {\r\n\r\n\tindex: number;\r\n\tcount: number;\r\n\t[key: string]: any;\r\n\r\n\t// !!! todo: payload options { key, $key, value, $value, index, count }\r\n\r\n\tconstructor(key: string, $key: number | string, value: string, $value: any, index: number, count: number, parentInstance: Factory) {\r\n\t\t// console.log('ForItem', arguments);\r\n\t\tsuper(parentInstance);\r\n\t\t/*\r\n\t\tsuper(parentInstance, {\r\n\t\t\t[key]: {\r\n\t\t\t\tget: function() {\r\n\t\t\t\t\treturn this.$key;\r\n\t\t\t\t},\r\n\t\t\t\tset: function(key) {\r\n\t\t\t\t\tthis.$key = key;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t[value]: {\r\n\t\t\t\tget: function() {\r\n\t\t\t\t\treturn this.$value;\r\n\t\t\t\t},\r\n\t\t\t\tset: function(value) {\r\n\t\t\t\t\tthis.$value = value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\t*/\r\n\t\tthis[key] = $key;\r\n\t\tthis[value] = $value;\r\n\t\tthis.index = index;\r\n\t\tthis.count = count;\r\n\t}\r\n\r\n\tget first(): boolean { return this.index === 0; }\r\n\r\n\tget last(): boolean { return this.index === this.count - 1; }\r\n\r\n\tget even(): boolean { return this.index % 2 === 0; }\r\n\r\n\tget odd(): boolean { return !this.even; }\r\n\r\n}\r\n","import Factory, { getContext } from '../core/factory';\nimport Structure from '../core/structure';\nimport { ExpressionFunction, IComment, IContext, IElement, IExpressionToken } from '../core/types';\nimport Module from '../module/module';\nimport ForItem from './for.item';\n\nexport default class ForStructure extends Structure {\n\n\tinstances: Factory[] = [];\n\tforend?: IComment;\n\ttoken?: IExpressionToken;\n\tforFunction?: ExpressionFunction;\n\n\tonInit() {\n\t\tconst { module, node } = getContext(this);\n\t\tconst forbegin: IComment = document.createComment(`*for begin`);\n\t\tforbegin.rxcompId = node.rxcompId;\n\t\tnode.parentNode!.replaceChild(forbegin, node);\n\t\tconst forend: IComment = this.forend = document.createComment(`*for end`);\n\t\tforbegin.parentNode!.insertBefore(forend, forbegin.nextSibling);\n\t\tconst expression: string = node.getAttribute('*for')!;\n\t\tnode.removeAttribute('*for');\n\t\tconst token = this.token = this.getExpressionToken(expression);\n\t\tthis.forFunction = module.makeFunction(token.iterable);\n\t}\n\n\tonChanges(changes: Factory | Window) {\n\t\tconst context: IContext = getContext(this);\n\t\tconst module: Module = context.module;\n\t\tconst node: IElement = context.node;\n\t\t// resolve\n\t\tconst token: IExpressionToken = this.token!;\n\t\tlet result = module.resolve(this.forFunction!, changes, this) || [];\n\t\tconst isArray = Array.isArray(result);\n\t\tconst array: any[] = isArray ? result : Object.keys(result);\n\t\tconst total: number = array.length;\n\t\tconst previous: number = this.instances.length;\n\t\tfor (let i: number = 0; i < Math.max(previous, total); i++) {\n\t\t\tif (i < total) {\n\t\t\t\tconst key: number | string = isArray ? i : array[i];\n\t\t\t\tconst value: any = isArray ? array[key as number] : result[key];\n\t\t\t\tif (i < previous) {\n\t\t\t\t\t// update\n\t\t\t\t\tconst instance: Factory = this.instances[i];\n\t\t\t\t\tinstance[token.key] = key;\n\t\t\t\t\tinstance[token.value] = value;\n\t\t\t\t\t/*\n\t\t\t\t\tif (!nextSibling) {\n\t\t\t\t\t\tconst context = getContext(instance);\n\t\t\t\t\t\tconst node = context.node;\n\t\t\t\t\t\tthis.forend.parentNode.insertBefore(node, this.forend);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnextSibling = nextSibling.nextSibling;\n\t\t\t\t\t}\n\t\t\t\t\t*/\n\t\t\t\t} else {\n\t\t\t\t\t// create\n\t\t\t\t\tconst clonedNode: IElement = node.cloneNode(true) as IElement;\n\t\t\t\t\tdelete clonedNode.rxcompId;\n\t\t\t\t\tthis.forend!.parentNode!.insertBefore(clonedNode, this.forend!);\n\t\t\t\t\t// !!! todo: check context.parentInstance\n\t\t\t\t\tconst args = [token.key, key, token.value, value, i, total, context.parentInstance];\n\t\t\t\t\tconst instance = module.makeInstance(clonedNode, ForItem, context.selector, context.parentInstance, args);\n\t\t\t\t\tif (instance) {\n\t\t\t\t\t\t// const forItemContext = getContext(instance);\n\t\t\t\t\t\t// console.log('ForStructure', clonedNode, forItemContext.instance.constructor.name);\n\t\t\t\t\t\t// module.compile(clonedNode, forItemContext.instance);\n\t\t\t\t\t\tmodule.compile(clonedNode, instance);\n\t\t\t\t\t\t// nextSibling = clonedNode.nextSibling;\n\t\t\t\t\t\tthis.instances.push(instance);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// remove\n\t\t\t\tconst instance: Factory = this.instances[i];\n\t\t\t\tconst { node } = getContext(instance);\n\t\t\t\tnode.parentNode!.removeChild(node);\n\t\t\t\tmodule.remove(node);\n\t\t\t}\n\t\t}\n\t\tthis.instances.length = array.length;\n\t\t// console.log('ForStructure', this.instances, token);\n\t}\n\n\tgetExpressionToken(expression: string): IExpressionToken {\n\t\tif (expression === null) {\n\t\t\tthrow ('invalid for');\n\t\t}\n\t\tif (expression.trim().indexOf('let ') === -1 || expression.trim().indexOf(' of ') === -1) {\n\t\t\tthrow ('invalid for');\n\t\t}\n\t\tconst expressions: string[] = expression.split(';').map(x => x.trim()).filter(x => x !== '');\n\t\tconst forExpressions: string[] = expressions[0].split(' of ').map(x => x.trim());\n\t\tlet value: string = forExpressions[0].replace(/\\s*let\\s*/, '');\n\t\tconst iterable: string = forExpressions[1];\n\t\tlet key: string = 'index';\n\t\tconst keyValueMatches: RegExpMatchArray | null = value.match(/\\[(.+)\\s*,\\s*(.+)\\]/);\n\t\tif (keyValueMatches) {\n\t\t\tkey = keyValueMatches[1];\n\t\t\tvalue = keyValueMatches[2];\n\t\t}\n\t\tif (expressions.length > 1) {\n\t\t\tconst indexExpressions: string[] = expressions[1].split(/\\s*let\\s*|\\s*=\\s*index/).map(x => x.trim());\n\t\t\tif (indexExpressions.length === 3) {\n\t\t\t\tkey = indexExpressions[1];\n\t\t\t}\n\t\t}\n\t\treturn { key, value, iterable };\n\t}\n\n}\n\nForStructure.meta = {\n\tselector: '[*for]',\n};\n","import Directive from '../core/directive';\nimport { getContext } from '../core/factory';\n\nexport default class HrefDirective extends Directive {\n\n\tset href(href: string) {\n\t\tif (this.href_ !== href) {\n\t\t\tthis.href_ = href;\n\t\t\tconst { node } = getContext(this);\n\t\t\thref ? node.setAttribute('href', href) : node.removeAttribute('href');\n\t\t}\n\t}\n\n\tget href(): string {\n\t\treturn this.href_;\n\t}\n\n\t/*\n\tonChanges() {\n\t\tconst { node } = getContext(this);\n\t\tnode.setAttribute('href', this.href || '');\n\t}\n\t*/\n\n}\n\nHrefDirective.meta = {\n\tselector: '[[href]]',\n\tinputs: ['href'],\n};\n","import Factory, { getContext } from '../core/factory';\r\nimport Structure from '../core/structure';\r\nimport { ExpressionFunction, IComment, IElement } from '../core/types';\r\n\r\nexport default class IfStructure extends Structure {\r\n\r\n\tifend?: IComment;\r\n\tifFunction?: ExpressionFunction;\r\n\tclonedNode?: IElement;\r\n\telement?: IElement;\r\n\r\n\tonInit() {\r\n\t\tconst { module, node } = getContext(this);\r\n\t\tconst ifbegin: IComment = this.ifbegin = document.createComment(`*if begin`);\r\n\t\tifbegin.rxcompId = node.rxcompId;\r\n\t\tnode.parentNode!.replaceChild(ifbegin, node);\r\n\t\tconst ifend = this.ifend = document.createComment(`*if end`);\r\n\t\tifbegin.parentNode!.insertBefore(ifend, ifbegin.nextSibling);\r\n\t\tconst expression = node.getAttribute('*if');\r\n\t\tthis.ifFunction = module.makeFunction(expression!);\r\n\t\tconst clonedNode = node.cloneNode(true) as IElement;\r\n\t\tclonedNode.removeAttribute('*if');\r\n\t\tthis.clonedNode = clonedNode;\r\n\t\tthis.element = clonedNode.cloneNode(true) as IElement;\r\n\t\t// console.log('IfStructure.expression', expression);\r\n\t}\r\n\r\n\tonChanges(changes: Factory | Window) {\r\n\t\tconst { module } = getContext(this);\r\n\t\t// console.log('IfStructure.onChanges', changes);\r\n\t\tconst value = module.resolve(this.ifFunction!, changes, this);\r\n\t\tconst element: IElement = this.element!;\r\n\t\tif (value) {\r\n\t\t\tif (!element.parentNode) {\r\n\t\t\t\tconst ifend = this.ifend!;\r\n\t\t\t\tifend.parentNode!.insertBefore(element, ifend);\r\n\t\t\t\tmodule.compile(element);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (element.parentNode) {\r\n\t\t\t\tmodule.remove(element, this);\r\n\t\t\t\telement.parentNode.removeChild(element);\r\n\t\t\t\tthis.element = this.clonedNode!.cloneNode(true) as IElement;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tstatic meta = {\r\n\t\tselector: '[*if]',\r\n\t};\r\n\r\n}\r\n","import Directive from '../core/directive';\nimport { getContext } from '../core/factory';\n\nexport default class InnerHtmlDirective extends Directive {\n\n\tset innerHTML(innerHTML: string) {\n\t\tif (this.innerHTML_ !== innerHTML) {\n\t\t\tthis.innerHTML_ = innerHTML;\n\t\t\tconst { node } = getContext(this);\n\t\t\tnode.innerHTML = innerHTML == undefined ? '' : innerHTML; // !!! keep == loose equality\n\t\t}\n\t}\n\n\tget innerHTML(): string {\n\t\treturn this.innerHTML_;\n\t}\n\n\t/*\n\tonChanges() {\n\t\tconst { node } = getContext(this);\n\t\tnode.innerHTML = this.innerHTML == undefined ? '' : this.innerHTML; // !!! keep == loose equality\n\t}\n\t*/\n\n}\n\nInnerHtmlDirective.meta = {\n\tselector: `[innerHTML]`,\n\tinputs: ['innerHTML'],\n};\n","import Component from '../core/component';\nimport { IFactoryMeta } from '../core/types';\n\nexport default class JsonComponent extends Component {\n\n\tactive: boolean = false;\n\n\tonToggle() {\n\t\tthis.active = !this.active;\n\t\tthis.pushChanges();\n\t}\n\n\tstatic meta: IFactoryMeta = {\n\t\tselector: 'json-component',\n\t\tinputs: ['item'],\n\t\ttemplate: `\n\t\t<div class=\"rxc-block\">\n\t\t\t<div class=\"rxc-head\">\n\t\t\t\t<span class=\"rxc-head__title\" (click)=\"onToggle()\">\n\t\t\t\t\t<span *if=\"!active\">+ json </span>\n\t\t\t\t\t<span *if=\"active\">- json </span>\n\t\t\t\t\t<span [innerHTML]=\"item\"></span>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t<ul class=\"rxc-list\" *if=\"active\">\n\t\t\t\t<li class=\"rxc-list__item\">\n\t\t\t\t\t<span class=\"rxc-list__value\" [innerHTML]=\"item | json\"></span>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</div>`,\n\t};\n}\n","import { IPipeMeta } from \"./types\";\r\n\r\nexport default class Pipe {\r\n\r\n\tstatic transform(value: any): any {\r\n\t\treturn value;\r\n\t}\r\n\r\n\tstatic meta: IPipeMeta;\r\n}\r\n","import Pipe from '../core/pipe';\n\nexport default class JsonPipe extends Pipe {\n\n\tstatic transform(value: any): string {\n\t\tconst cache: Map<any, boolean> = new Map();\n\t\tconst json: string = JSON.stringify(value, function (key, value) {\n\t\t\tif (typeof value === 'object' && value != null) {\n\t\t\t\tif (cache.has(value)) {\n\t\t\t\t\t// Circular reference found, discard key\n\t\t\t\t\treturn '#ref';\n\t\t\t\t}\n\t\t\t\tcache.set(value, true);\n\t\t\t}\n\t\t\treturn value;\n\t\t}, 2);\n\t\treturn json;\n\t}\n\n}\n\nJsonPipe.meta = {\n\tname: 'json',\n};\n","import { Observable, Subject } from 'rxjs';\nimport { takeUntil, tap } from 'rxjs/operators';\nimport Component from '../core/component';\nimport Context from '../core/context';\nimport Factory, { CONTEXTS, getContext, NODES } from '../core/factory';\nimport Structure from '../core/structure';\nimport { ExpressionFunction, IContext, IElement, IFactoryMeta, IModuleMeta, IModuleParsedMeta, ISelectorResult, IText, SelectorFunction } from '../core/types';\n\nlet ID: number = 0;\n\nexport default class Module {\n\n\tmeta?: IModuleParsedMeta;\n\tinstances?: Factory[];\n\n\tpublic compile(node: IElement, parentInstance?: Factory | Window): Factory[] {\n\t\tlet componentNode: IElement;\n\t\tconst instances: Factory[] = Module.querySelectorsAll(node, this.meta!.selectors, []).map((match: ISelectorResult) => {\n\t\t\tif (componentNode && componentNode !== match.node) {\n\t\t\t\tparentInstance = undefined;\n\t\t\t}\n\t\t\tconst instance: Factory | undefined = this.makeInstance(match.node, match.factory, match.selector, parentInstance);\n\t\t\tif (match.factory.prototype instanceof Component) {\n\t\t\t\tcomponentNode = match.node;\n\t\t\t}\n\t\t\treturn instance;\n\t\t}).filter((x): x is Factory => x !== undefined);\n\t\t// instances.forEach(x => x.onInit());\n\t\t// console.log('compile', instances, node, parentInstance);\n\t\treturn instances;\n\t}\n\n\tpublic makeInstance(node: IElement, factory: typeof Factory, selector: string, parentInstance?: Factory | Window, args?: any[]): Factory | undefined {\n\t\tif (parentInstance || node.parentNode) {\n\t\t\tconst meta: IFactoryMeta = factory.meta;\n\t\t\t// collect parentInstance scope\n\t\t\tparentInstance = parentInstance || this.getParentInstance(node.parentNode);\n\t\t\tif (!parentInstance) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\t// creating factory instance\n\t\t\tconst instance = new factory(...(args || []));\n\t\t\t// creating instance context\n\t\t\tconst context = Module.makeContext(this, instance, parentInstance, node, factory, selector);\n\t\t\t// creating component input and outputs\n\t\t\tif (meta) {\n\t\t\t\tthis.makeHosts(meta, instance, node);\n\t\t\t\tcontext.inputs = this.makeInputs(meta, instance);\n\t\t\t\tcontext.outputs = this.makeOutputs(meta, instance);\n\t\t\t\tif (parentInstance instanceof Factory) {\n\t\t\t\t\tthis.resolveInputsOutputs(instance, parentInstance);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// calling onInit event\n\t\t\tinstance.onInit();\n\t\t\t// subscribe to parent changes\n\t\t\tif (parentInstance instanceof Factory) {\n\t\t\t\tparentInstance.changes$.pipe(\n\t\t\t\t\t// filter(() => node.parentNode),\n\t\t\t\t\t// debounceTime(1),\n\t\t\t\t\t/*\n\t\t\t\t\tdistinctUntilChanged(function(prev, curr) {\n\t\t\t\t\t\t// console.log(isComponent, context.inputs);\n\t\t\t\t\t\tif (isComponent && meta && Object.keys(context.inputs).length === 0) {\n\t\t\t\t\t\t\treturn true; // same\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t\t*/\n\t\t\t\t\ttakeUntil(instance.unsubscribe$)\n\t\t\t\t).subscribe((changes: Factory | Window) => {\n\t\t\t\t\t// resolve component input outputs\n\t\t\t\t\tif (meta) {\n\t\t\t\t\t\tthis.resolveInputsOutputs(instance, changes);\n\t\t\t\t\t}\n\t\t\t\t\t// calling onChanges event with changes\n\t\t\t\t\tinstance.onChanges(changes);\n\t\t\t\t\t// push instance changes for subscribers\n\t\t\t\t\tinstance.pushChanges();\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn instance;\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n\tpublic makeFunction(expression: string, params: string[] = ['$instance']): ExpressionFunction {\n\t\tif (expression) {\n\t\t\texpression = Module.parseExpression(expression);\n\t\t\t// console.log(expression);\n\t\t\tconst args: string = params.join(',');\n\t\t\tconst expression_func: ExpressionFunction = new Function(`with(this) {\n\t\t\t\treturn (function (${args}, $$module) {\n\t\t\t\t\tconst $$pipes = $$module.meta.pipes;\n\t\t\t\t\treturn ${expression};\n\t\t\t\t}.bind(this)).apply(this, arguments);\n\t\t\t}`) as ExpressionFunction;\n\t\t\t// console.log(this, $$module, $$pipes, \"${expression}\");\n\t\t\t// console.log(expression_func);\n\t\t\treturn expression_func;\n\t\t} else {\n\t\t\treturn () => { return null; };\n\t\t}\n\t}\n\n\tpublic resolve(expression: ExpressionFunction, parentInstance: Factory | Window, payload: any): any {\n\t\t// console.log(expression, parentInstance, payload);\n\t\treturn expression.apply(parentInstance, [payload, this]);\n\t}\n\n\tpublic parse(node: IElement, instance: Factory): void {\n\t\tfor (let i: number = 0; i < node.childNodes.length; i++) {\n\t\t\tconst child: ChildNode = node.childNodes[i];\n\t\t\tif (child.nodeType === 1) {\n\t\t\t\tconst element: HTMLElement = child as HTMLElement;\n\t\t\t\tconst context: IContext | void = getParsableContextByNode(element);\n\t\t\t\tif (!context) {\n\t\t\t\t\tthis.parse(element, instance);\n\t\t\t\t}\n\t\t\t} else if (child.nodeType === 3) {\n\t\t\t\tconst text: IText = child as IText;\n\t\t\t\tthis.parseTextNode(text, instance);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic remove(node: Node, keepInstance?: Factory): Node {\n\t\tconst keepContext: IContext | undefined = keepInstance ? getContext(keepInstance) : undefined;\n\t\tModule.traverseDown(node, (node: Node) => {\n\t\t\tconst rxcompId: number | undefined = (node as IElement).rxcompId;\n\t\t\tif (rxcompId) {\n\t\t\t\tconst keepContexts: IContext[] = Module.deleteContext(rxcompId, keepContext);\n\t\t\t\tif (keepContexts.length === 0) {\n\t\t\t\t\tdelete (node as IElement).rxcompId;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn node;\n\t}\n\n\tpublic destroy(): void {\n\t\tthis.remove(this.meta!.node);\n\t\tthis.meta!.node.innerHTML = this.meta!.nodeInnerHTML;\n\t}\n\n\tprotected makeContext(instance: Factory, parentInstance: Factory | Window, node: IElement, selector: string): IContext {\n\t\tconst context: IContext = Module.makeContext(this, instance, parentInstance, node, instance.constructor as typeof Factory, selector);\n\t\t// console.log('Module.makeContext', context, context.instance, context.node);\n\t\treturn context;\n\t}\n\n\tprotected getInstance(node: HTMLElement | Document): Factory | Window | undefined {\n\t\tif (node instanceof Document) {\n\t\t\treturn window; // !!! window or global\n\t\t}\n\t\tconst context: IContext | undefined = getContextByNode(node);\n\t\tif (context) {\n\t\t\treturn context.instance;\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n\tprotected getParentInstance(node: Node | null): Factory | Window {\n\t\treturn Module.traverseUp(node, (node: Node) => {\n\t\t\treturn this.getInstance(node as HTMLElement);\n\t\t});\n\t}\n\n\t// reduce(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: T[]) => T, initialValue: T): T;\n\n\tprotected parseTextNode(node: IText, instance: Factory): void {\n\t\tlet expressions: (ExpressionFunction | string)[] | undefined = node.nodeExpressions;\n\t\tif (!expressions) {\n\t\t\texpressions = this.parseTextNodeExpression(node.wholeText);\n\t\t}\n\t\tif (expressions.length) {\n\t\t\tconst replacedText: string = expressions.reduce((p: string, c: ExpressionFunction | string) => {\n\t\t\t\tlet text: string;\n\t\t\t\tif (typeof c === 'function') { // instanceOf ExpressionFunction ?;\n\t\t\t\t\ttext = this.resolve(c as ExpressionFunction, instance, instance);\n\t\t\t\t\tif (text == undefined) { // !!! keep == loose equality\n\t\t\t\t\t\ttext = '';\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\ttext = c;\n\t\t\t\t}\n\t\t\t\treturn p + text;\n\t\t\t}, '');\n\t\t\tif (node.nodeValue !== replacedText) {\n\t\t\t\tconst textNode: IText = document.createTextNode(replacedText) as IText;\n\t\t\t\ttextNode.nodeExpressions = expressions;\n\t\t\t\tnode.parentNode!.replaceChild(textNode, node);\n\t\t\t}\n\t\t} else {\n\t\t\tnode.nodeExpressions = expressions;\n\t\t}\n\t}\n\n\tprotected pushFragment(nodeValue: string, from: number, to: number, expressions: (ExpressionFunction | string)[]): void {\n\t\tconst fragment: string = nodeValue.substring(from, to);\n\t\texpressions.push(fragment);\n\t}\n\n\tprotected parseTextNodeExpression(nodeValue: string): (ExpressionFunction | string)[] {\n\t\tconst expressions: (ExpressionFunction | string)[] = [];\n\t\tconst regex: RegExp = /\\{{2}((([^{}])|(\\{([^{}]|(\\{.*?\\}))+?\\}))*?)\\}{2}/g;\n\t\tlet lastIndex: number = 0,\n\t\t\tmatches: RegExpExecArray | null;\n\t\twhile ((matches = regex.exec(nodeValue)) !== null) {\n\t\t\tconst index: number = regex.lastIndex - matches[0].length;\n\t\t\tif (index > lastIndex) {\n\t\t\t\tthis.pushFragment(nodeValue, index, lastIndex, expressions);\n\t\t\t}\n\t\t\tlastIndex = regex.lastIndex;\n\t\t\tconst expression: ExpressionFunction = this.makeFunction(matches[1]);\n\t\t\texpressions.push(expression);\n\t\t}\n\t\tconst length: number = nodeValue.length;\n\t\tif (length > lastIndex) {\n\t\t\tthis.pushFragment(nodeValue, lastIndex, length, expressions);\n\t\t}\n\t\tif (expressions.find(x => typeof x === 'function')) {\n\t\t\treturn expressions;\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tprotected makeHosts(meta: IFactoryMeta, instance: Factory, node: IElement): void {\n\t\tif (meta.hosts) {\n\t\t\tObject.keys(meta.hosts).forEach((key: string) => {\n\t\t\t\tconst factory: typeof Factory = meta.hosts![key];\n\t\t\t\tinstance[key] = getHost(instance, factory, node);\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected makeInput(instance: Factory, key: string): ExpressionFunction | null {\n\t\tconst { node } = getContext(instance);\n\t\tlet input: ExpressionFunction | null = null,\n\t\t\texpression: string | null = null;\n\t\tif (node.hasAttribute(`[${key}]`)) {\n\t\t\texpression = node.getAttribute(`[${key}]`)!;\n\t\t} else if (node.hasAttribute(key)) {\n\t\t\t// const attribute = node.getAttribute(key).replace(/{{/g, '\"+').replace(/}}/g, '+\"');\n\t\t\tconst attribute: string = node.getAttribute(key)!.replace(/({{)|(}})|(\")/g, function (substring: string, a, b, c) {\n\t\t\t\tif (a) {\n\t\t\t\t\treturn '\"+';\n\t\t\t\t}\n\t\t\t\tif (b) {\n\t\t\t\t\treturn '+\"';\n\t\t\t\t}\n\t\t\t\tif (c) {\n\t\t\t\t\treturn '\\\"';\n\t\t\t\t}\n\t\t\t\treturn '';\n\t\t\t});\n\t\t\texpression = `\"${attribute}\"`;\n\t\t}\n\t\tif (expression) {\n\t\t\tinput = this.makeFunction(expression);\n\t\t}\n\t\treturn input;\n\t}\n\n\tprotected makeInputs(meta: IFactoryMeta, instance: Factory): { [key: string]: ExpressionFunction } {\n\t\tconst inputs: { [key: string]: ExpressionFunction } = {};\n\t\tif (meta.inputs) {\n\t\t\tmeta.inputs.forEach((key: string, i: number) => {\n\t\t\t\tconst input = this.makeInput(instance, key);\n\t\t\t\tif (input) {\n\t\t\t\t\tinputs[key] = input;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn inputs;\n\t}\n\n\tprotected makeOutput(instance: Factory, key: string): Observable<any> {\n\t\tconst context: IContext = getContext(instance);\n\t\tconst node: IElement = context.node;\n\t\tconst parentInstance: Factory | Window = context.parentInstance;\n\t\tconst expression: string | null = node.getAttribute(`(${key})`);\n\t\tconst outputFunction: ExpressionFunction | null = expression ? this.makeFunction(expression, ['$event']) : null;\n\t\tconst output$: Observable<any> = new Subject<any>().pipe(\n\t\t\ttap((event) => {\n\t\t\t\tif (outputFunction) {\n\t\t\t\t\t// console.log(expression, parentInstance);\n\t\t\t\t\tthis.resolve(outputFunction, parentInstance, event);\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t\toutput$.pipe(\n\t\t\ttakeUntil(instance.unsubscribe$)\n\t\t).subscribe();\n\t\tinstance[key] = output$;\n\t\treturn output$;\n\t}\n\n\tprotected makeOutputs(meta: IFactoryMeta, instance: Factory): { [key: string]: Observable<any> } {\n\t\tconst outputs: { [key: string]: Observable<any> } = {};\n\t\tif (meta.outputs) {\n\t\t\tmeta.outputs.forEach((key: string) => {\n\t\t\t\tconst output = this.makeOutput(instance, key);\n\t\t\t\tif (output) {\n\t\t\t\t\toutputs[key] = output;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn outputs;\n\t}\n\n\tprotected resolveInputsOutputs(instance: Factory, changes: Factory | Window): void {\n\t\tconst context: IContext = getContext(instance);\n\t\tconst parentInstance: Factory | Window = context.parentInstance;\n\t\tconst inputs: { [key: string]: ExpressionFunction } = context.inputs!;\n\t\tfor (let key in inputs) {\n\t\t\tconst inputFunction: ExpressionFunction = inputs[key];\n\t\t\tconst value: any = this.resolve(inputFunction, parentInstance, instance);\n\t\t\tinstance[key] = value;\n\t\t}\n\t}\n\n\tprotected static parseExpression(expression: string): string {\n\t\tconst l: string = '┌';\n\t\tconst r: string = '┘';\n\t\tconst rx1: RegExp = /(\\()([^\\(\\)]*)(\\))/;\n\t\twhile (expression.match(rx1)) {\n\t\t\texpression = expression.replace(rx1, function (substring: string, ...args: any[]) {\n\t\t\t\treturn `${l}${Module.parsePipes(args[1])}${r}`;\n\t\t\t});\n\t\t}\n\t\texpression = Module.parsePipes(expression);\n\t\texpression = expression.replace(/(┌)|(┘)/g, function (substring: string, ...args) {\n\t\t\treturn args[0] ? '(' : ')';\n\t\t});\n\t\treturn Module.parseOptionalChaining(expression);\n\t}\n\n\tprotected static parsePipes(expression: string): string {\n\t\tconst l: string = '┌';\n\t\tconst r: string = '┘';\n\t\tconst rx1: RegExp = /(.*?[^\\|])\\|([^\\|]+)/;\n\t\twhile (expression.match(rx1)) {\n\t\t\texpression = expression.replace(rx1, function (substring: string, ...args: any[]) {\n\t\t\t\tconst value: string = args[0].trim();\n\t\t\t\tconst params: string[] = Module.parsePipeParams(args[1]);\n\t\t\t\tconst func: string = params.shift()!.trim();\n\t\t\t\treturn `$$pipes.${func}.transform${l}${[value, ...params]}${r}`;\n\t\t\t});\n\t\t}\n\t\treturn expression;\n\t}\n\n\tprotected static parsePipeParams(expression: string): string[] {\n\t\tconst segments: string[] = [];\n\t\tlet i: number = 0,\n\t\t\tword: string = '',\n\t\t\tblock: number = 0;\n\t\tconst t: number = expression.length;\n\t\twhile (i < t) {\n\t\t\tconst c: string = expression.substr(i, 1);\n\t\t\tif (c === '{' || c === '(' || c === '[') {\n\t\t\t\tblock++;\n\t\t\t}\n\t\t\tif (c === '}' || c === ')' || c === ']') {\n\t\t\t\tblock--;\n\t\t\t}\n\t\t\tif (c === ':' && block === 0) {\n\t\t\t\tif (word.length) {\n\t\t\t\t\tsegments.push(word.trim());\n\t\t\t\t}\n\t\t\t\tword = '';\n\t\t\t} else {\n\t\t\t\tword += c;\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\t\tif (word.length) {\n\t\t\tsegments.push(word.trim());\n\t\t}\n\t\treturn segments;\n\t}\n\n\tprotected static parseOptionalChaining(expression: string): string {\n\t\tconst regex: RegExp = /(\\w+(\\?\\.))+([\\.|\\w]+)/g;\n\t\tlet previous: string;\n\t\texpression = expression.replace(regex, function (substring: string, ...args: any[]) {\n\t\t\tconst tokens: string[] = substring.split('?.');\n\t\t\tfor (let i: number = 0; i < tokens.length - 1; i++) {\n\t\t\t\tconst a: string = i > 0 ? `(${tokens[i]} = ${previous})` : tokens[i];\n\t\t\t\tconst b: string = tokens[i + 1];\n\t\t\t\tprevious = i > 0 ? `${a}.${b}` : `(${a} ? ${a}.${b} : void 0)`;\n\t\t\t}\n\t\t\treturn previous || '';\n\t\t});\n\t\treturn expression;\n\t}\n\n\tprotected static makeContext(module: Module, instance: Factory, parentInstance: Factory | Window, node: IElement, factory: typeof Factory, selector: string): IContext {\n\t\tinstance.rxcompId = ++ID;\n\t\tconst context: IContext = { module, instance, parentInstance, node, factory, selector };\n\t\tconst rxcompNodeId = node.rxcompId = (node.rxcompId || instance.rxcompId);\n\t\tconst nodeContexts = NODES[rxcompNodeId] || (NODES[rxcompNodeId] = []);\n\t\tnodeContexts.push(context);\n\t\tCONTEXTS[instance.rxcompId] = context;\n\t\treturn context;\n\t}\n\n\tprotected static deleteContext(id: number, keepContext: IContext | undefined): IContext[] {\n\t\tconst keepContexts: IContext[] = [];\n\t\tconst nodeContexts: IContext[] = NODES[id];\n\t\tif (nodeContexts) {\n\t\t\tnodeContexts.forEach((context: IContext) => {\n\t\t\t\tif (context === keepContext) {\n\t\t\t\t\tkeepContexts.push(keepContext);\n\t\t\t\t} else {\n\t\t\t\t\tconst instance: Factory = context.instance;\n\t\t\t\t\tinstance.unsubscribe$.next();\n\t\t\t\t\tinstance.unsubscribe$.complete();\n\t\t\t\t\tinstance.onDestroy();\n\t\t\t\t\tdelete CONTEXTS[instance.rxcompId];\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (keepContexts.length) {\n\t\t\t\tNODES[id] = keepContexts;\n\t\t\t} else {\n\t\t\t\tdelete NODES[id];\n\t\t\t}\n\t\t}\n\t\treturn keepContexts;\n\t}\n\n\tprotected static matchSelectors(node: HTMLElement, selectors: SelectorFunction[], results: ISelectorResult[]): ISelectorResult[] {\n\t\tfor (let i: number = 0; i < selectors.length; i++) {\n\t\t\tconst selectorResult: ISelectorResult | false = selectors[i](node);\n\t\t\tif (selectorResult) {\n\t\t\t\tconst factory: typeof Factory = selectorResult.factory;\n\t\t\t\tif (factory.prototype instanceof Component && factory.meta.template) {\n\t\t\t\t\tnode.innerHTML = factory.meta.template;\n\t\t\t\t}\n\t\t\t\tresults.push(selectorResult);\n\t\t\t\tif (factory.prototype instanceof Structure) {\n\t\t\t\t\t// console.log('Structure', node);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn results;\n\t}\n\n\tprotected static querySelectorsAll(node: Node, selectors: SelectorFunction[], results: ISelectorResult[]): ISelectorResult[] {\n\t\tif (node.nodeType === 1) {\n\t\t\tconst selectorResults: ISelectorResult[] = this.matchSelectors(node as HTMLElement, selectors, []);\n\t\t\tresults = results.concat(selectorResults);\n\t\t\tconst structure: ISelectorResult | undefined = selectorResults.find(x => x.factory.prototype instanceof Structure);\n\t\t\tif (structure) {\n\t\t\t\treturn results;\n\t\t\t}\n\t\t\tconst childNodes: NodeListOf<ChildNode> = node.childNodes;\n\t\t\tfor (let i: number = 0; i < childNodes.length; i++) {\n\t\t\t\tresults = this.querySelectorsAll(childNodes[i], selectors, results);\n\t\t\t}\n\t\t}\n\t\treturn results;\n\t}\n\n\tprotected static traverseUp(node: Node | null, callback: (node: Node, i: number) => any, i: number = 0): any {\n\t\tif (!node) {\n\t\t\treturn;\n\t\t}\n\t\tconst result = callback(node, i);\n\t\tif (result) {\n\t\t\treturn result;\n\t\t}\n\t\treturn this.traverseUp(node.parentNode, callback, i + 1);\n\t}\n\n\tprotected static traverseDown(node: Node | null, callback: (node: Node, i: number) => any, i: number = 0): any {\n\t\tif (!node) {\n\t\t\treturn;\n\t\t}\n\t\tlet result = callback(node, i);\n\t\tif (result) {\n\t\t\treturn result;\n\t\t}\n\t\tif (node.nodeType === 1) {\n\t\t\tlet j = 0,\n\t\t\t\tt = node.childNodes.length;\n\t\t\twhile (j < t && !result) {\n\t\t\t\tresult = this.traverseDown(node.childNodes[j], callback, i + 1);\n\t\t\t\tj++;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tprotected static traversePrevious(node: Node | null, callback: (node: Node, i: number) => any, i: number = 0): any {\n\t\tif (!node) {\n\t\t\treturn;\n\t\t}\n\t\tconst result = callback(node, i);\n\t\tif (result) {\n\t\t\treturn result;\n\t\t}\n\t\treturn this.traversePrevious(node.previousSibling, callback, i + 1);\n\t}\n\n\tprotected static traverseNext(node: Node | null, callback: (node: Node, i: number) => any, i: number = 0): any {\n\t\tif (!node) {\n\t\t\treturn;\n\t\t}\n\t\tconst result = callback(node, i);\n\t\tif (result) {\n\t\t\treturn result;\n\t\t}\n\t\treturn this.traverseNext(node.nextSibling, callback, i + 1);\n\t}\n\n\tstatic meta: IModuleMeta;\n\n}\n\nexport function getParsableContextByNode(node: Node): IContext | undefined {\n\tlet context: IContext | undefined;\n\tconst rxcompId: number | undefined = (node as IElement).rxcompId;\n\tif (rxcompId) {\n\t\tconst nodeContexts: IContext[] = NODES[rxcompId];\n\t\tif (nodeContexts) {\n\t\t\tcontext = nodeContexts.reduce((previous: IContext | undefined, current: IContext) => {\n\t\t\t\tif (current.factory.prototype instanceof Component) {\n\t\t\t\t\treturn current;\n\t\t\t\t} else if (current.factory.prototype instanceof Context) {\n\t\t\t\t\treturn previous ? previous : current;\n\t\t\t\t\t/*\n\t\t\t\t\t} else if (current.factory.prototype instanceof Structure) {\n\t\t\t\t\t\treturn previous ? previous : current;\n\t\t\t\t\t*/\n\t\t\t\t} else {\n\t\t\t\t\treturn previous;\n\t\t\t\t}\n\t\t\t}, undefined);\n\t\t\t// console.log(node.rxcompId, context);\n\t\t}\n\t}\n\treturn context;\n}\n\nexport function getContextByNode(node: Node): IContext | undefined {\n\tlet context: IContext | undefined = getParsableContextByNode(node);\n\tif (context && context.factory.prototype instanceof Structure) {\n\t\tcontext = undefined;\n\t}\n\treturn context;\n}\n\nexport function getHost(instance: Factory, factory: typeof Factory, node: IElement): Factory | undefined {\n\tif (!node) {\n\t\tnode = getContext(instance).node;\n\t}\n\tif (node.rxcompId) {\n\t\tconst nodeContexts: IContext[] = NODES[node.rxcompId];\n\t\tif (nodeContexts) {\n\t\t\t// console.log(nodeContexts);\n\t\t\tfor (let i: number = 0; i < nodeContexts.length; i++) {\n\t\t\t\tconst context: IContext = nodeContexts[i];\n\t\t\t\tif (context.instance !== instance) {\n\t\t\t\t\t// console.log(context.instance, instance);\n\t\t\t\t\tif (context.instance instanceof factory) {\n\t\t\t\t\t\treturn context.instance;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif (node.parentNode) {\n\t\treturn getHost(instance, factory, node.parentNode as IElement);\n\t} else {\n\t\treturn undefined;\n\t}\n}\n","import Directive from '../core/directive';\nimport { getContext } from '../core/factory';\n\nexport default class SrcDirective extends Directive {\n\n\tset src(src: string) {\n\t\tif (this.src_ !== src) {\n\t\t\tthis.src_ = src;\n\t\t\tconst { node } = getContext(this);\n\t\t\tsrc ? node.setAttribute('src', src) : node.removeAttribute('src');\n\t\t}\n\t}\n\n\tget src(): string {\n\t\treturn this.src_;\n\t}\n\n\t/*\n\tonChanges() {\n\t\tconst { node } = getContext(this);\n\t\tif (this.src) {\n\t\t\tif (node.getAttribute('src') !== this.src) {\n\t\t\t\tnode.setAttribute('src', this.src);\n\t\t\t}\n\t\t} else {\n\t\t\tnode.removeAttribute('src');\n\t\t}\n\t}\n\t*/\n\n}\n\nSrcDirective.meta = {\n\tselector: '[[src]]',\n\tinputs: ['src'],\n};\n","import Directive from '../core/directive';\nimport { getContext } from '../core/factory';\n\nexport default class StyleDirective extends Directive {\n\n\tstyle?: { [key: string]: string } | null;\n\tpreviousStyle?: { [key: string]: string } | null;\n\n\tonChanges() {\n\t\tconst { node } = getContext(this);\n\t\tconst style = this.style;\n\t\tconst previousStyle = this.previousStyle;\n\t\tif (previousStyle) {\n\t\t\tfor (let key in previousStyle) {\n\t\t\t\tif (!style || !style[key]) {\n\t\t\t\t\tconst splitted: string[] = key.split('.');\n\t\t\t\t\tconst propertyName = splitted.shift();\n\t\t\t\t\tnode.style.removeProperty(propertyName!);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (style) {\n\t\t\tfor (let key in style) {\n\t\t\t\tif (!previousStyle || previousStyle[key] !== style[key]) {\n\t\t\t\t\tconst splitted: string[] = key.split('.');\n\t\t\t\t\tconst propertyName = splitted.shift();\n\t\t\t\t\tconst value = style[key] + (splitted.length ? splitted[0] : '');\n\t\t\t\t\t// console.log(propertyName, value, style, key, style[key]);\n\t\t\t\t\tnode.style.setProperty(propertyName!, value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.previousStyle = style;\n\t\t// console.log('StyleDirective.onChanges', style);\n\t}\n\n}\n\nStyleDirective.meta = {\n\tselector: `[[style]]`,\n\tinputs: ['style']\n};\n","\nimport ClassDirective from './class/class.directive';\nimport Factory from './core/factory';\nimport Pipe from './core/pipe';\nimport EventDirective from './event/event.directive';\nimport ForStructure from './for/for.structure';\nimport HrefDirective from './href/href.directive';\nimport IfStructure from './if/if.structure';\nimport InnerHtmlDirective from './inner-html/inner-html.directive';\nimport JsonComponent from './json/json.component';\nimport JsonPipe from './json/json.pipe';\nimport Module from './module/module';\nimport SrcDirective from './src/src.directive';\nimport StyleDirective from './style/style.directive';\n\nconst factories: typeof Factory[] = [\n\tClassDirective,\n\tEventDirective,\n\tForStructure,\n\tHrefDirective,\n\tIfStructure,\n\tInnerHtmlDirective,\n\tJsonComponent,\n\tSrcDirective,\n\tStyleDirective,\n];\n\nconst pipes: typeof Pipe[] = [\n\tJsonPipe,\n];\n\nexport default class CoreModule extends Module {\n\n\tstatic meta = {\n\t\tdeclarations: [\n\t\t\t...factories,\n\t\t\t...pipes,\n\t\t],\n\t\texports: [\n\t\t\t...factories,\n\t\t\t...pipes,\n\t\t]\n\t};\n\n}\n","import Component from '../core/component';\nimport Directive from '../core/directive';\nimport Factory from '../core/factory';\nimport Pipe from '../core/pipe';\nimport Structure from '../core/structure';\nimport { FactoryList, IElement, IModuleParsedImportedMeta, IModuleParsedMeta, ISelectorResult, MatchFunction, PipeList, PipeMap, SelectorFunction } from '../core/types';\nimport Module from '../module/module';\n\nconst ORDER: FactoryList = [Structure, Component, Directive];\n\nexport default class Platform {\n\n\tstatic bootstrap(moduleFactory?: typeof Module): Module {\n\t\tif (!moduleFactory) {\n\t\t\tthrow ('missing moduleFactory');\n\t\t}\n\t\tif (!moduleFactory.meta) {\n\t\t\tthrow ('missing moduleFactory meta');\n\t\t}\n\t\tif (!moduleFactory.meta.bootstrap) {\n\t\t\tthrow ('missing bootstrap');\n\t\t}\n\t\tif (!moduleFactory.meta.bootstrap.meta) {\n\t\t\tthrow ('missing bootstrap meta');\n\t\t}\n\t\tif (!moduleFactory.meta.bootstrap.meta.selector) {\n\t\t\tthrow ('missing bootstrap meta selector');\n\t\t}\n\t\tconst meta: IModuleParsedMeta = this.resolveMeta(moduleFactory!);\n\t\tconst module: Module = new moduleFactory();\n\t\tmodule.meta = meta;\n\t\tconst instances = module.compile(meta.node, window);\n\t\tmodule.instances = instances;\n\t\tconst root = instances[0];\n\t\t// if (root instanceof module.meta.bootstrap) {\n\t\troot.pushChanges();\n\t\t// }\n\t\treturn module;\n\t}\n\n\tstatic isBrowser(): boolean {\n\t\treturn Boolean(window);\n\t}\n\n\t// static isServer() {}\n\n\tprotected static querySelector(selector: string): IElement | null {\n\t\treturn document.querySelector(selector);\n\t}\n\n\tprotected static resolveMeta(moduleFactory: typeof Module): IModuleParsedMeta {\n\t\tconst meta: IModuleParsedImportedMeta = this.resolveImportedMeta(moduleFactory);\n\t\tconst bootstrap: typeof Factory = moduleFactory.meta.bootstrap!;\n\t\tconst node = this.querySelector(bootstrap.meta.selector!);\n\t\tif (!node) {\n\t\t\tthrow (`missing node ${bootstrap.meta.selector}`);\n\t\t}\n\t\tconst nodeInnerHTML = node.innerHTML;\n\t\tconst pipes = this.resolvePipes(meta);\n\t\tconst factories = this.resolveFactories(meta);\n\t\tthis.sortFactories(factories);\n\t\tfactories.unshift(bootstrap);\n\t\tconst selectors = this.unwrapSelectors(factories);\n\t\treturn { factories, pipes, selectors, bootstrap, node, nodeInnerHTML };\n\t}\n\n\tprotected static resolveImportedMeta(moduleFactory: typeof Module): IModuleParsedImportedMeta {\n\t\tconst meta: IModuleParsedImportedMeta = Object.assign({\n\t\t\timports: [],\n\t\t\tdeclarations: [],\n\t\t\tpipes: [],\n\t\t\texports: []\n\t\t}, moduleFactory.meta);\n\t\tmeta.imports = (moduleFactory.meta.imports || []).map(moduleFactory => this.resolveImportedMeta(moduleFactory));\n\t\treturn meta;\n\t}\n\n\tprotected static resolvePipes(meta: IModuleParsedImportedMeta, exported?: boolean): PipeMap {\n\t\tconst importedPipes: PipeMap[] = meta.imports.map((importMeta: IModuleParsedImportedMeta) => this.resolvePipes(importMeta, true));\n\t\tconst pipes: PipeMap = {};\n\t\tconst pipeList: PipeList = (exported ? meta.exports : meta.declarations).filter((x): x is typeof Pipe => x.prototype instanceof Pipe);\n\t\tpipeList.forEach(pipeFactory => pipes[pipeFactory.meta.name] = pipeFactory);\n\t\treturn Object.assign({}, ...importedPipes, pipes);\n\t}\n\n\tprotected static resolveFactories(meta: IModuleParsedImportedMeta, exported?: boolean): FactoryList {\n\t\tconst importedFactories: FactoryList[] = meta.imports.map((importMeta: any) => this.resolveFactories(importMeta, true));\n\t\tconst factoryList: FactoryList = (exported ? meta.exports : meta.declarations).filter((x): x is typeof Factory => x.prototype instanceof Factory);\n\t\treturn Array.prototype.concat.call(factoryList, ...importedFactories);\n\t}\n\n\tprotected static sortFactories(factories: FactoryList): void {\n\t\tfactories.sort((a, b) => {\n\t\t\tconst ai = ORDER.reduce((p, c, i) => a.prototype instanceof c ? i : p, -1);\n\t\t\tconst bi = ORDER.reduce((p, c, i) => b.prototype instanceof c ? i : p, -1);\n\t\t\t// return ai - bi;\n\t\t\tconst o = ai - bi;\n\t\t\tif (o === 0) {\n\t\t\t\treturn (a.meta.hosts ? 1 : 0) - (b.meta.hosts ? 1 : 0);\n\t\t\t}\n\t\t\treturn o;\n\t\t});\n\t}\n\n\tprotected static getExpressions(selector: string): MatchFunction[] {\n\t\tlet matchers: ((node: HTMLElement) => boolean)[] = [];\n\t\tselector.replace(/\\.([\\w\\-\\_]+)|\\[(.+?\\]*)(\\=)(.*?)\\]|\\[(.+?\\]*)\\]|([\\w\\-\\_]+)/g, function (value: string, c1, a2, u3, v4, a5, e6) {\n\t\t\tif (c1) {\n\t\t\t\tmatchers.push(function (node) {\n\t\t\t\t\treturn node.classList.contains(c1);\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (a2) {\n\t\t\t\tmatchers.push(function (node) {\n\t\t\t\t\treturn (node.hasAttribute(a2) && node.getAttribute(a2) === v4) ||\n\t\t\t\t\t\t(node.hasAttribute(`[${a2}]`) && node.getAttribute(`[${a2}]`) === v4);\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (a5) {\n\t\t\t\tmatchers.push(function (node) {\n\t\t\t\t\treturn node.hasAttribute(a5) || node.hasAttribute(`[${a5}]`);\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (e6) {\n\t\t\t\tmatchers.push(function (node) {\n\t\t\t\t\treturn node.nodeName.toLowerCase() === e6.toLowerCase();\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn '';\n\t\t});\n\t\treturn matchers;\n\t}\n\n\tprotected static unwrapSelectors(factories: FactoryList): SelectorFunction[] {\n\t\tconst selectors: SelectorFunction[] = [];\n\t\tfactories.forEach((factory: typeof Factory) => {\n\t\t\tif (factory.meta && factory.meta.selector) {\n\t\t\t\tfactory.meta.selector.split(',').forEach((selector: string) => {\n\t\t\t\t\tselector = selector.trim();\n\t\t\t\t\tlet excludes: MatchFunction[] = [];\n\t\t\t\t\tconst matchSelector = selector.replace(/\\:not\\((.+?)\\)/g, (value, unmatchSelector) => {\n\t\t\t\t\t\texcludes = this.getExpressions(unmatchSelector);\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t});\n\t\t\t\t\tconst includes: MatchFunction[] = this.getExpressions(matchSelector);\n\t\t\t\t\tselectors.push((node) => {\n\t\t\t\t\t\tconst included = includes.reduce((p, match) => {\n\t\t\t\t\t\t\treturn p && match(node);\n\t\t\t\t\t\t}, true);\n\t\t\t\t\t\tconst excluded = excludes.reduce((p, match) => {\n\t\t\t\t\t\t\treturn p || match(node);\n\t\t\t\t\t\t}, false);\n\t\t\t\t\t\tif (included && !excluded) {\n\t\t\t\t\t\t\treturn { node, factory, selector } as ISelectorResult;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\treturn selectors;\n\t}\n\n}\n\n/* global window self */\nexport const PLATFORM_BROWSER = typeof window !== 'undefined' && typeof window.document !== 'undefined';\n\n/* eslint-disable no-undef */\nexport const PLATFORM_JS_DOM = (typeof window !== 'undefined' && window.name === 'nodejs') || navigator.userAgent.includes('Node.js') || navigator.userAgent.includes('jsdom');\n/* eslint-enable no-undef */\n\nexport const PLATFORM_NODE = typeof process !== 'undefined' && process.versions != null && process.versions.node != null;\n\n/* eslint-disable no-restricted-globals */\nexport const PLATFORM_WEB_WORKER = typeof self === 'object' && self.constructor && self.constructor.name === 'DedicatedWorkerGlobalScope';\n","import Platform from './platform';\r\n\r\nexport default class Browser extends Platform { }\r\n"]}