{"version":3,"sources":["src/rxcomp.ts","../../src/core/factory.ts","../../src/core/directive.ts","../../src/class/class.directive.ts","../../src/error/error.ts","../../src/event/event.directive.ts","../../src/core/structure.ts","../../src/core/component.ts","../../src/core/context.ts","../../src/for/for.item.ts","../../src/for/for.structure.ts","../../src/href/href-target.directive.ts","../../src/href/href.directive.ts","../../src/if/if.structure.ts","../../src/inner-html/inner-html.directive.ts","../../src/json/json.component.ts","../../src/core/pipe.ts","../../src/platform/platform.ts","../../src/platform/common/serializer/serializer.ts","../../src/json/json.pipe.ts","../../src/module/module.ts","../../src/src/src.directive.ts","../../src/style/style.directive.ts","../../src/core.module.ts","../../src/platform/common/window/window.ts","../../src/platform/browser.ts","../../src/platform/common/location/location.ts","../../src/platform/common/transfer/transfer.service.ts"],"names":["g","f","exports","module","require","define","amd","globalThis","self","rxcomp","rxjs","operators","this","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","Constructor","protoProps","staticProps","prototype","_inheritsLoose","subClass","superClass","create","constructor","__proto__","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","_setPrototypeOf","p","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","toString","call","e","_construct","Parent","args","Class","a","push","apply","instance","Function","bind","arguments","_wrapNativeSuper","_cache","Map","undefined","fn","indexOf","TypeError","has","get","set","Wrapper","value","CONTEXT_MAP","NODE_MAP","EXPRESSION_MAP","Factory","_proto","onInit","onChanges","changes","onView","onDestroy","pushChanges","childInstances","getContext","instances","slice","len","onParentDidChange","resolveInputsOutputs","mapExpression","expression","unsubscribe$_","Subject","Directive","_Factory","ClassDirective","_this","_Directive","class","keys","_this2","node","Array","classList","forEach","object","split","concat","setAttribute","join","selector","inputs","ModuleError","_Error","Error","ExpressionError","_Error2","error","params","message","name","template","outerHTML","ErrorInterceptorHandler","next","interceptor","handle","intercept","DefaultErrorHandler","of","ErrorInterceptors","nextError$","ReplaySubject","errors$","pipe","switchMap","reduceRight","tap","console","EventDirective","event","_getContext","parentInstance","replace","event$","fromEvent","shareReplay","getAttribute","outputFunction","makeFunction","takeUntil","unsubscribe$","subscribe","resolve","Structure","Component","parse","Context","_Component","ForItem","$key","$value","index","count","_Context","even","ForStructure","_Structure","tokens","getForExpressionTokens","nodeRef","document","createComment","parentNode","replaceChild","removeAttribute","context","data","for","isArray","items","total","previous","Math","max","clonedNode","cloneNode","insertBefore","makeInstance","compile","removeChild","remove","iterable","trim","expressions","map","x","filter","forExpressions","keyValueMatches","match","indexExpressions","HrefTargetDirective","target_","HrefDirective","href","href_","IfStructure","element","_getContext2","Boolean","if","InnerHtmlDirective","innerHTML","innerHTML_","JsonComponent","active","onToggle","Pipe","transform","ORDER","Platform","bootstrap","moduleFactory","meta","resolveMeta","imports","querySelector","resolveImportedMeta","nodeInnerHTML","pipes","resolvePipes","factories","resolveFactories","sortFactories","unshift","selectors","unwrapSelectors","assign","declarations","exported","importedPipes","importMeta","pipeFactory","_Array$prototype$conc","_this3","importedFactories","factoryList","sort","b","reduce","c","hosts","getExpressions","matchers","c1","a2","u3","v4","a5","e6","contains","hasAttribute","nodeName","toLowerCase","_this4","factory","excludes","matchSelector","unmatchSelector","includes","PLATFORM_BROWSER","window","PLATFORM_JS_DOM","navigator","userAgent","PLATFORM_NODE","process","versions","PLATFORM_WEB_WORKER","isPlatformServer","isPlatformBrowser","isPlatformWorker","Serializer","encode","encoders","encodeJson","decode","decoders","decodeJson","encodeBase64","decodeBase64","circularRef","space","decoded","pool","JSON","stringify","encodeJsonWithOptions","encoded","btoa","Buffer","from","atob","JsonPipe","_Pipe","Module","nodeType","matches","childNodes","foundStructure","selectorResult","nextParentInstance","inject","makeContext","makeHosts","makeInputs","outputs","makeOutputs","cachedExpressionFunction","parseExpression","text","expressionFunction","getInputAttributeExpression","attribute","substring","payload","child","getParsableContextByElement","parseTextNode","keepInstance","keepContext","traverseDown","deleteContext","destroy","complete","nextError","expressionError","getHost","makeOutput","outputExpression","output$","output","nodeExpressions","parseTextNodeExpression","wholeText","replacedText","nodeValue","textNode","createTextNode","pushFragment","to","fragment","regex","lastIndex","exec","find","nodeContexts","parseGroup","parseOptionalChaining","rx1","test","m","parsePipes","rx","parsePipeParams","parseThis","g1","g2","g3","g4","removeFromParentInstance","parentContext","splice","keepContexts","delete","traverseUp","callback","result","j","t","traversePrevious","previousSibling","traverseNext","nextSibling","contexts","current","SrcDirective","src","src_","StyleDirective","style","previousStyle","propertyName","shift","removeProperty","splitted","setProperty","CoreModule","_Module","WINDOW","global","Browser","_Platform","rxcomp_hydrate_","_meta$node$parentNode","TransferService","makeKey","base","optionsToKey","firstChild","json","createElement","append","head","v","s","substr","k","_decodeBase","_decodeJson","_encodeBase","_encodeJson","getContextByNode","getLocationComponents","protocol","host","hostname","port","pathname","search","hash","regExp","_i","_matches"],"mappings":"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","file":"dist\\umd\\rxcomp.min.js","sourcesContent":[null,"import { Subject } from 'rxjs';\nimport { ExpressionFunction, IContext, IElement, IFactoryMeta } from './types';\n\nexport const CONTEXTS: { [key: number]: IContext } = {};\nexport const NODES: { [key: number]: IContext[] } = {};\n\nexport const CONTEXT_MAP: Map<Factory, IContext> = new Map<Factory, IContext>();\nexport const NODE_MAP: Map<IElement, IContext[]> = new Map<IElement, IContext[]>();\nexport const EXPRESSION_MAP: Map<string, ExpressionFunction> = new Map<string, ExpressionFunction>();\n\n// console.log(CONTEXT_MAP, NODE_MAP, EXPRESSION_MAP);\n\nexport default class Factory {\n\tstatic meta: IFactoryMeta;\n\tunsubscribe$_: Subject<void> | undefined;\n\tget unsubscribe$(): Subject<void> {\n\t\tif (!this.unsubscribe$_) {\n\t\t\tthis.unsubscribe$_ = new Subject();\n\t\t}\n\t\treturn this.unsubscribe$_;\n\t}\n\t// unsubscribe$: Subject<void> = new Subject();\n\t// changes$: Subject<Factory> = new Subject();\n\t// changes$: ReplaySubject<Factory> = new ReplaySubject(1);\n\tonInit(): void { }\n\tonChanges(changes: Factory | Window): void { }\n\tonView(): void { }\n\tonDestroy(): void { }\n\tpushChanges(): void {\n\t\tconst { childInstances } = getContext(this);\n\t\tconst instances = childInstances.slice();\n\t\tlet instance;\n\t\tfor (let i: number = 0, len: number = instances.length; i < len; i++) {\n\t\t\tinstance = instances[i];\n\t\t\tif (childInstances.indexOf(instance) !== -1) {\n\t\t\t\tinstances[i].onParentDidChange(this);\n\t\t\t}\n\t\t}\n\t\t// \tthis.changes$.next(this);\n\t\tthis.onView();\n\t}\n\tonParentDidChange(changes: Factory | Window): void {\n\t\tconst { module } = getContext(this);\n\t\t// console.log('Component.onParentDidChange', changes);\n\t\tmodule.resolveInputsOutputs(this, changes);\n\t\tthis.onChanges(changes);\n\t\tthis.pushChanges();\n\t}\n\t[key: string]: any; // extensible object\n\tconstructor(...args: any[]) {\n\t\t/*\n\t\t// !!! PROXY\n\t\tconst store: { [key: string]: any } = {};\n\t\tconst handler: ProxyHandler<Factory> = {\n\t\t\tget: function (target: Factory, prop: string, receiver: any) {\n\t\t\t\treturn target[prop];\n\t\t\t},\n\t\t\tset: function (target: Factory, prop: string | number | Symbol, value: any, receiver: any) {\n\t\t\t\tstore[prop as string] = value;\n\t\t\t\tconsole.log('Factory updating store', prop, value, store);\n\t\t\t\ttarget[prop as string] = value;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\tconst proxy = new Proxy(this, handler);\n\t\tconsole.log('proxy', proxy);\n\t\t*/\n\t}\n\tstatic mapExpression(key: string, expression: string) {\n\t\treturn expression;\n\t}\n}\nexport function getContext(instance: Factory): IContext {\n\treturn CONTEXT_MAP.get(instance) as IContext;\n}\n","import Factory from './factory';\n\nexport default class Directive extends Factory { }\n","import Directive from '../core/directive';\nimport { getContext } from '../core/factory';\nimport { IFactoryMeta } from '../core/types';\n\nexport default class ClassDirective extends Directive {\n\tclass: { [key: string]: string } | string | null = '';\n\tkeys: string[] = [];\n\tonInit() {\n\t\tconst { node } = getContext(this);\n\t\tArray.prototype.slice.call(node.classList).forEach((value: string) => {\n\t\t\tthis.keys.push(value);\n\t\t});\n\t\t// console.log('ClassDirective.onInit');\n\t}\n\tonChanges() {\n\t\tconst { node } = getContext(this);\n\t\tlet keys: string[] = [];\n\t\tconst object = this.class;\n\t\tif (typeof object === 'object') {\n\t\t\tfor (let key in object) {\n\t\t\t\tif (object[key]) {\n\t\t\t\t\tkeys.push(key);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (typeof object === 'string') {\n\t\t\tkeys = object.split(/\\s+/);\n\t\t}\n\t\tkeys = keys.concat(this.keys);\n\t\t// console.log(keys);\n\t\tnode.setAttribute('class', keys.join(' '));\n\t\t// console.log('ClassDirective.onChanges', keys);\n\t}\n\tstatic meta: IFactoryMeta = {\n\t\tselector: `[[class]]`,\n\t\tinputs: ['class']\n\t};\n}\n","import { Observable, of, ReplaySubject } from \"rxjs\";\nimport { switchMap, tap } from \"rxjs/operators\";\nimport Factory, { getContext } from \"../core/factory\";\nimport Module from \"../module/module\";\n\nexport class ModuleError extends Error { }\n\nexport class ExpressionError extends Error {\n\tmodule: Module;\n\tinstance: Factory;\n\texpression: string;\n\tparams: any[];\n\ttemplate: string;\n\tconstructor(error: Error, module: Module, instance: Factory, expression: string, params: any[]) {\n\t\tconst message: string = `ExpressionError in ${instance.constructor.name} \"${expression}\"\n\t\t${error.message}`;\n\t\tsuper(message);\n\t\tthis.name = error.name;\n\t\t// this.stack = error.stack;\n\t\tthis.module = module;\n\t\tthis.instance = instance;\n\t\tthis.expression = expression;\n\t\tthis.params = params;\n\t\tconst { node } = getContext(instance);\n\t\tthis.template = node.outerHTML;\n\t}\n}\nexport interface IErrorHandler {\n\thandle(error: Error): Observable<Error | void>\n}\nexport interface IErrorInterceptor {\n\tintercept(error: Error | void, next: IErrorHandler): Observable<Error | void>\n}\nexport class ErrorInterceptorHandler implements IErrorHandler {\n\tconstructor(\n\t\tprivate next: IErrorHandler,\n\t\tprivate interceptor: IErrorInterceptor,\n\t) { }\n\thandle(error: Error | void): Observable<Error | void> {\n\t\treturn this.interceptor.intercept(error, this.next);\n\t}\n}\nexport class DefaultErrorHandler implements IErrorHandler {\n\thandle(error: Error | void): Observable<Error | void> {\n\t\treturn of(error);\n\t}\n}\nexport const ErrorInterceptors: IErrorInterceptor[] = [];\nexport const nextError$: ReplaySubject<Error> = new ReplaySubject<Error>(1);\nexport const errors$: Observable<Error | void> = nextError$.pipe(\n\tswitchMap((error: Error) => {\n\t\tconst chain: IErrorHandler = ErrorInterceptors.reduceRight((next: IErrorHandler, interceptor: IErrorInterceptor) => {\n\t\t\treturn new ErrorInterceptorHandler(next, interceptor);\n\t\t}, new DefaultErrorHandler());\n\t\treturn chain.handle(error);\n\t}),\n\ttap((error: Error | void) => {\n\t\tif (error) {\n\t\t\tconsole.error(error);\n\t\t}\n\t}),\n);\n","import { fromEvent, Observable } from 'rxjs';\nimport { shareReplay, takeUntil } from 'rxjs/operators';\nimport Directive from '../core/directive';\nimport { getContext } from '../core/factory';\nimport { IFactoryMeta } from '../core/types';\n\nconst EVENTS = ['mousedown', 'mouseup', 'mousemove', 'click', 'dblclick', 'mouseover', 'mouseout', 'mouseenter', 'mouseleave', 'contextmenu', 'touchstart', 'touchmove', 'touchend', 'keydown', 'keyup', 'input', 'change', 'loaded'];\n\nexport default class EventDirective extends Directive {\n\tevent: string = '';\n\tonInit() {\n\t\tconst { module, node, parentInstance, selector } = getContext(this);\n\t\tconst event = this.event = selector.replace(/\\[|\\]|\\(|\\)/g, '');\n\t\tconst event$: Observable<Event> = fromEvent<Event>(node, event).pipe(shareReplay(1));\n\t\tconst expression = node.getAttribute(`(${event})`);\n\t\tif (expression) {\n\t\t\tconst outputFunction = module.makeFunction(expression, ['$event']);\n\t\t\tevent$.pipe(\n\t\t\t\ttakeUntil(this.unsubscribe$)\n\t\t\t).subscribe(event => {\n\t\t\t\tmodule.resolve(outputFunction, parentInstance, event);\n\t\t\t});\n\t\t} else {\n\t\t\tparentInstance[`${event}$`] = event$;\n\t\t}\n\t\t// console.log('EventDirective.onInit', 'selector', selector, 'event', event);\n\t}\n\tstatic meta: IFactoryMeta = {\n\t\tselector: `[(${EVENTS.join(')],[(')})]`,\n\t};\n}\n","import Factory from './factory';\n\nexport default class Structure extends Factory { }\n","\nimport Factory, { getContext } from './factory';\n\nexport default class Component extends Factory {\n\tpushChanges(): void {\n\t\tconst { module, node, childInstances } = getContext(this);\n\t\tconst instances = childInstances.slice();\n\t\t// try {\n\t\tlet instance;\n\t\tfor (let i: number = 0, len: number = instances.length; i < len; i++) {\n\t\t\tinstance = instances[i];\n\t\t\tif (childInstances.indexOf(instance) !== -1) {\n\t\t\t\tinstances[i].onParentDidChange(this);\n\t\t\t}\n\t\t}\n\t\t// this.changes$.next(this);\n\t\tmodule.parse(node, this);\n\t\tthis.onView();\n\t\t// } catch (error) {\n\t\t//\tconsole.log('Component.error', error, this);\n\t\t//\tthrow error;\n\t\t// }\n\t}\n}\n","// import { BehaviorSubject, Subject } from 'rxjs';\nimport Component from './component';\nimport Factory from './factory';\n\n// const RESERVED_PROPERTIES = ['constructor', 'onInit', 'onChanges', 'onDestroy', 'pushChanges', 'changes$', 'unsubscribe$'];\n\nexport default class Context extends Component {\n\tparentInstance: Factory;\n\t// constructor(parentInstance: Factory, descriptors: { [key: string]: PropertyDescriptor } = {}) {\n\tconstructor(parentInstance: Factory) {\n\t\tsuper();\n\t\tthis.parentInstance = parentInstance;\n\t\t/*\n\t\tdescriptors = Context.mergeDescriptors(parentInstance, parentInstance, descriptors);\n\t\tdescriptors = Context.mergeDescriptors(Object.getPrototypeOf(parentInstance), parentInstance, descriptors);\n\t\tObject.defineProperties(this, descriptors);\n\t\t*/\n\t}\n\t/*\n\tpushChanges(): void {\n\t\tconst context = getContext(this);\n\t\tif (!context.keys) {\n\t\t\tcontext.keys = [];\n\t\t\t// context.keys = Object.keys(context.parentInstance).filter(key => RESERVED_PROPERTIES.indexOf(key) === -1);\n\t\t\tfor (let i:number = 0, keys = Object.keys(context.parentInstance), len = keys.length; i < len; i++) {\n\t\t\t\tconst key = keys[i];\n\t\t\t\tif (RESERVED_PROPERTIES.indexOf(key) === -1) {\n\t\t\t\t\tcontext.keys.push(key);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// console.log(context.keys.join(','));\n\t\t}\n\t\tif (context.module.instances) {\n\t\t\tcontext.keys.forEach(key => {\n\t\t\t\t// console.log('Context', key, context.parentInstance);\n\t\t\t\tthis[key] = context.parentInstance[key];\n\t\t\t});\n\t\t}\n\t\tsuper.pushChanges();\n\t}\n\t*/\n\tonParentDidChange(changes: Factory | Window): void {\n\t\tthis.onChanges(changes);\n\t\tthis.pushChanges();\n\t}\n\t/*\n\tstatic mergeDescriptors(source: Object, instance: Factory, descriptors: { [key: string]: PropertyDescriptor } = {}): { [key: string]: PropertyDescriptor } {\n\t\tconst properties: string[] = Object.getOwnPropertyNames(source);\n\t\twhile (properties.length) {\n\t\t\tconst key: string = properties.shift() as string;\n\t\t\tif (RESERVED_PROPERTIES.indexOf(key) === -1 && !descriptors.hasOwnProperty(key)) {\n\t\t\t\tconst descriptor: PropertyDescriptor = Object.getOwnPropertyDescriptor(source, key) as PropertyDescriptor;\n\t\t\t\tif (typeof descriptor.value == 'function') {\n\t\t\t\t\tdescriptor.value = (...args: any[]) => {\n\t\t\t\t\t\treturn instance[key].apply(instance, args);\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tdescriptors[key] = descriptor;\n\t\t\t}\n\t\t}\n\t\treturn descriptors;\n\t}\n\t*/\n}\n","import Context from '../core/context';\nimport Factory from '../core/factory';\n\nexport default class ForItem extends Context {\n\tindex: number;\n\tcount: number;\n\t[key: string]: any;\n\t// !!! todo: payload options { key, $key, value, $value, index, count }\n\tconstructor(key: string, $key: number | string, value: string, $value: any, index: number, count: number, parentInstance: Factory) {\n\t\tsuper(parentInstance);\n\t\tthis[key] = $key;\n\t\tthis[value] = $value;\n\t\tthis.index = index;\n\t\tthis.count = count;\n\t}\n\tget first(): boolean { return this.index === 0; }\n\tget last(): boolean { return this.index === this.count - 1; }\n\tget even(): boolean { return this.index % 2 === 0; }\n\tget odd(): boolean { return !this.even; }\n}\n","import Factory, { getContext } from '../core/factory';\nimport Structure from '../core/structure';\nimport { IComment, IContext, IElement, IFactoryMeta, IForExpressionTokens } from '../core/types';\nimport Module from '../module/module';\nimport ForItem from './for.item';\n\nexport default class ForStructure extends Structure {\n\tinstances: Factory[] = [];\n\tnodeRef!: IComment;\n\ttokens!: IForExpressionTokens;\n\tonInit() {\n\t\tconst { node } = getContext(this);\n        const expression = node.getAttribute('*for');\n        this.tokens = ForStructure.getForExpressionTokens(expression);\n\t\tconst nodeRef: IComment = this.nodeRef = document.createComment(`*for`);\n\t\tnode.parentNode!.replaceChild(nodeRef, node);\n\t\tnode.removeAttribute('*for');\n\t}\n\tonChanges() {\n\t\tconst context: IContext = getContext(this);\n\t\tconst module: Module = context.module;\n\t\tconst node: IElement = context.node;\n\t\tconst selector: string = context.selector;\n\t\tconst parentInstance: Factory | Window = context.parentInstance;\n\t\tconst nodeRef = this.nodeRef;\n\t\tconst tokens: IForExpressionTokens = this.tokens!;\n\t\tlet data = this.for || [];\n\t\tconst isArray = Array.isArray(data);\n\t\tconst items: any[] = isArray ? data : Object.keys(data);\n\t\tconst total: number = items.length;\n\t\tconst instances = this.instances;\n\t\tconst previous: number = instances.length;\n\t\tfor (let i: number = 0, len:number = Math.max(previous, total); i < len; i++) {\n\t\t\tif (i < total) {\n\t\t\t\tconst key: number | string = isArray ? i : items[i];\n\t\t\t\tconst value: any = isArray ? items[key as number] : data[key];\n\t\t\t\tif (i < previous) {\n\t\t\t\t\t// update\n\t\t\t\t\tconst instance: Factory = instances[i];\n\t\t\t\t\tinstance[tokens.key] = key;\n\t\t\t\t\tinstance[tokens.value] = value;\n\t\t\t\t} else {\n\t\t\t\t\t// create\n\t\t\t\t\tconst clonedNode: IElement = node.cloneNode(true) as IElement;\n\t\t\t\t\tnodeRef.parentNode!.insertBefore(clonedNode, nodeRef);\n\t\t\t\t\tconst args = [tokens.key, key, tokens.value, value, i, total, parentInstance];\n\t\t\t\t\tconst instance = module.makeInstance(clonedNode, ForItem, selector, parentInstance, args);\n\t\t\t\t\tif (instance) {\n\t\t\t\t\t\tmodule.compile(clonedNode, instance);\n\t\t\t\t\t\tinstances.push(instance);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// remove\n\t\t\t\tconst instance: Factory = instances[i];\n\t\t\t\tconst { node } = getContext(instance);\n\t\t\t\tnode.parentNode!.removeChild(node);\n\t\t\t\tmodule.remove(node);\n\t\t\t}\n\t\t}\n\t\tinstances.length = total;\n\t}\n    static mapExpression(key:string, expression:string) {\n        const tokens = this.getForExpressionTokens(expression);\n        return tokens.iterable;\n    }\n\tstatic getForExpressionTokens(expression: string | null = null): IForExpressionTokens {\n\t\tif (expression == null) {\n\t\t\tthrow new Error('invalid for');\n\t\t}\n\t\tif (expression.trim().indexOf('let ') === -1 || expression.trim().indexOf(' of ') === -1) {\n\t\t\tthrow new Error('invalid for');\n\t\t}\n\t\tconst expressions: string[] = expression.split(';').map(x => x.trim()).filter(x => x !== '');\n\t\tconst forExpressions: string[] = expressions[0].split(' of ').map(x => x.trim());\n\t\tlet value: string = forExpressions[0].replace(/\\s*let\\s*/, '');\n\t\tconst iterable: string = forExpressions[1];\n\t\tlet key: string = 'index';\n\t\tconst keyValueMatches: RegExpMatchArray | null = value.match(/\\[(.+)\\s*,\\s*(.+)\\]/);\n\t\tif (keyValueMatches) {\n\t\t\tkey = keyValueMatches[1];\n\t\t\tvalue = keyValueMatches[2];\n\t\t}\n\t\tif (expressions.length > 1) {\n\t\t\tconst indexExpressions: string[] = expressions[1].split(/\\s*let\\s*|\\s*=\\s*index/).map(x => x.trim());\n\t\t\tif (indexExpressions.length === 3) {\n\t\t\t\tkey = indexExpressions[1];\n\t\t\t}\n\t\t}\n\t\treturn { key, value, iterable };\n\t}\n\tstatic meta: IFactoryMeta = {\n\t\tselector: '[*for]',\n\t\tinputs: ['for'],\n\t};\n}\n","import Directive from '../core/directive';\nimport { getContext } from '../core/factory';\nimport { IFactoryMeta } from '../core/types';\n\nexport default class HrefTargetDirective extends Directive {\n\tset target(target: string) {\n\t\tif (this.target_ !== target) {\n\t\t\tthis.target_ = target;\n\t\t\tconst { node } = getContext(this);\n\t\t\ttarget ? node.setAttribute('target', target) : node.removeAttribute('target');\n\t\t}\n\t}\n\tget target(): string {\n\t\treturn this.target_;\n\t}\n\tstatic meta: IFactoryMeta = {\n\t\tselector: '[[target]]',\n\t\tinputs: ['target'],\n\t};\n}\n","import Directive from '../core/directive';\nimport { getContext } from '../core/factory';\nimport { IFactoryMeta } from '../core/types';\n\nexport default class HrefDirective extends Directive {\n\tset href(href: string) {\n\t\tif (this.href_ !== href) {\n\t\t\tthis.href_ = href;\n\t\t\tconst { node } = getContext(this);\n\t\t\thref ? node.setAttribute('href', href) : node.removeAttribute('href');\n\t\t}\n\t}\n\tget href(): string {\n\t\treturn this.href_;\n\t}\n\tstatic meta: IFactoryMeta = {\n\t\tselector: '[[href]]',\n\t\tinputs: ['href'],\n\t};\n}\n\n","import { getContext } from '../core/factory';\nimport Structure from '../core/structure';\nimport { IComment, IElement, IFactoryMeta } from '../core/types';\n\nexport default class IfStructure extends Structure {\n\tnodeRef?: IComment;\n\tclonedNode?: IElement;\n\telement?: IElement;\n\tonInit() {\n\t\tconst { node } = getContext(this);\n\t\tconst nodeRef: IComment = this.nodeRef = document.createComment(`*if`);\n\t\tnode.parentNode!.replaceChild(nodeRef, node);\n\t\tconst clonedNode = node.cloneNode(true) as IElement;\n\t\tclonedNode.removeAttribute('*if');\n\t\tthis.clonedNode = clonedNode;\n\t\tthis.element = clonedNode.cloneNode(true) as IElement;\n\t}\n\tonChanges() {\n\t\tconst { module, parentInstance } = getContext(this);\n\t\tconst element: IElement = this.element!;\n\t\t// console.log('IfStructure.onChanges.if', this.if);\n\t\tif (Boolean(this.if)) { // !!! keep == loose equality\n\t\t\tif (!element.parentNode) {\n\t\t\t\tconst nodeRef = this.nodeRef!;\n\t\t\t\tnodeRef.parentNode!.insertBefore(element, nodeRef);\n\t\t\t\tmodule.compile(element, parentInstance);\n\t\t\t\t// console.log('IfStructure.onChanges.add', element);\n\t\t\t}\n\t\t} else {\n\t\t\tif (element.parentNode) {\n\t\t\t\tmodule.remove(element, this);\n\t\t\t\telement.parentNode.removeChild(element);\n\t\t\t\tthis.element = this.clonedNode!.cloneNode(true) as IElement;\n\t\t\t\t// console.log('IfStructure.onChanges.remove', element);\n\t\t\t}\n\t\t}\n\t}\n\tstatic meta: IFactoryMeta = {\n\t\tselector: '[*if]',\n\t\tinputs: ['if'],\n\t};\n}\n","import Directive from '../core/directive';\nimport { getContext } from '../core/factory';\nimport { IFactoryMeta } from '../core/types';\n\nexport default class InnerHtmlDirective extends Directive {\n\tset innerHTML(innerHTML: string) {\n\t\tif (this.innerHTML_ !== innerHTML) {\n\t\t\tthis.innerHTML_ = innerHTML;\n\t\t\tconst { node } = getContext(this);\n\t\t\tnode.innerHTML = innerHTML == undefined ? '' : innerHTML; // !!! keep == loose equality\n\t\t}\n\t}\n\tget innerHTML(): string {\n\t\treturn this.innerHTML_;\n\t}\n\tstatic meta: IFactoryMeta = {\n\t\tselector: `[innerHTML]`,\n\t\tinputs: ['innerHTML'],\n\t};\n}\n","import Component from '../core/component';\nimport { IFactoryMeta } from '../core/types';\n\nexport default class JsonComponent extends Component {\n\tactive: boolean = false;\n\tonToggle() {\n\t\tthis.active = !this.active;\n\t\tthis.pushChanges();\n\t}\n\tstatic meta: IFactoryMeta = {\n\t\tselector: 'json-component',\n\t\tinputs: ['item'],\n\t\ttemplate: /* html */`\n\t\t<div class=\"rxc-block\">\n\t\t\t<div class=\"rxc-head\">\n\t\t\t\t<span class=\"rxc-head__title\" (click)=\"onToggle()\">\n\t\t\t\t\t<span *if=\"!active\">+ json </span>\n\t\t\t\t\t<span *if=\"active\">- json </span>\n\t\t\t\t\t<span [innerHTML]=\"item\"></span>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t<ul class=\"rxc-list\" *if=\"active\">\n\t\t\t\t<li class=\"rxc-list__item\">\n\t\t\t\t\t<span class=\"rxc-list__value\" [innerHTML]=\"item | json\"></span>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</div>`,\n\t};\n}\n","import { IPipeMeta } from \"./types\";\n\nexport default class Pipe {\n\tstatic transform(value: any): any {\n\t\treturn value;\n\t}\n\tstatic meta: IPipeMeta;\n}\n","import Component from '../core/component';\nimport Directive from '../core/directive';\nimport Factory from '../core/factory';\nimport Pipe from '../core/pipe';\nimport Structure from '../core/structure';\nimport { FactoryList, IElement, IModuleParsedImportedMeta, IModuleParsedMeta, ISelectorResult, MatchFunction, PipeList, PipeMap, SelectorFunction } from '../core/types';\nimport { ModuleError } from '../error/error';\nimport Module from '../module/module';\n\nconst ORDER: FactoryList = [Structure, Component, Directive];\n\nexport default class Platform {\n\t/**\n\t * @param moduleFactory\n\t * @description This method returns an uncompiled module\n\t */\n\tstatic bootstrap(moduleFactory?: typeof Module): Module {\n\t\tif (!moduleFactory) {\n\t\t\tthrow new ModuleError('missing moduleFactory');\n\t\t}\n\t\tif (!moduleFactory.meta) {\n\t\t\tthrow new ModuleError('missing moduleFactory meta');\n\t\t}\n\t\tif (!moduleFactory.meta.bootstrap) {\n\t\t\tthrow new ModuleError('missing bootstrap');\n\t\t}\n\t\tif (!moduleFactory.meta.bootstrap.meta) {\n\t\t\tthrow new ModuleError('missing bootstrap meta');\n\t\t}\n\t\tif (!moduleFactory.meta.bootstrap.meta.selector) {\n\t\t\tthrow new ModuleError('missing bootstrap meta selector');\n\t\t}\n\t\tconst meta: IModuleParsedMeta = this.resolveMeta(moduleFactory!);\n\t\tconst module: Module = new moduleFactory();\n\t\tmodule.meta = meta;\n\t\tmeta.imports.forEach((moduleFactory: typeof Module) => {\n\t\t\tmoduleFactory.prototype.constructor.call(module);\n\t\t});\n\t\treturn module;\n\t}\n\tprotected static querySelector(selector: string): IElement | null {\n\t\treturn document.querySelector(selector);\n\t}\n\tprotected static resolveMeta(moduleFactory: typeof Module): IModuleParsedMeta {\n\t\tconst meta: IModuleParsedImportedMeta = this.resolveImportedMeta(moduleFactory);\n\t\tconst bootstrap: typeof Factory = moduleFactory.meta.bootstrap!;\n\t\tconst node = this.querySelector(bootstrap.meta.selector!);\n\t\tif (!node) {\n\t\t\tthrow new ModuleError(`missing node ${bootstrap.meta.selector}`);\n\t\t}\n\t\tconst nodeInnerHTML = node.innerHTML;\n\t\tconst pipes = this.resolvePipes(meta);\n\t\tconst factories = this.resolveFactories(meta);\n\t\tthis.sortFactories(factories);\n\t\tfactories.unshift(bootstrap);\n\t\tconst selectors = this.unwrapSelectors(factories);\n\t\treturn { factories, pipes, selectors, bootstrap, node, nodeInnerHTML, imports: moduleFactory.meta.imports || [] };\n\t}\n\tprotected static resolveImportedMeta(moduleFactory: typeof Module): IModuleParsedImportedMeta {\n\t\tconst meta: IModuleParsedImportedMeta = Object.assign({\n\t\t\timports: [],\n\t\t\tdeclarations: [],\n\t\t\tpipes: [],\n\t\t\texports: []\n\t\t}, moduleFactory.meta);\n\t\tmeta.imports = (moduleFactory.meta.imports || []).map(moduleFactory => this.resolveImportedMeta(moduleFactory));\n\t\treturn meta;\n\t}\n\tprotected static resolvePipes(meta: IModuleParsedImportedMeta, exported?: boolean): PipeMap {\n\t\tconst importedPipes: PipeMap[] = meta.imports.map((importMeta: IModuleParsedImportedMeta) => this.resolvePipes(importMeta, true));\n\t\tconst pipes: PipeMap = {};\n\t\tconst pipeList: PipeList = (exported ? meta.exports : meta.declarations).filter((x): x is typeof Pipe => x.prototype instanceof Pipe);\n\t\tpipeList.forEach(pipeFactory => pipes[pipeFactory.meta.name] = pipeFactory);\n\t\treturn Object.assign({}, ...importedPipes, pipes);\n\t}\n\tprotected static resolveFactories(meta: IModuleParsedImportedMeta, exported?: boolean): FactoryList {\n\t\tconst importedFactories: FactoryList[] = meta.imports.map((importMeta: any) => this.resolveFactories(importMeta, true));\n\t\tconst factoryList: FactoryList = (exported ? meta.exports : meta.declarations).filter((x): x is typeof Factory => x.prototype instanceof Factory);\n\t\treturn Array.prototype.concat.call(factoryList, ...importedFactories);\n\t}\n\tprotected static sortFactories(factories: FactoryList): void {\n\t\tfactories.sort((a, b) => {\n\t\t\tconst ai = ORDER.reduce((p, c, i) => a.prototype instanceof c ? i : p, -1);\n\t\t\tconst bi = ORDER.reduce((p, c, i) => b.prototype instanceof c ? i : p, -1);\n\t\t\t// return ai - bi;\n\t\t\tconst o = ai - bi;\n\t\t\tif (o === 0) {\n\t\t\t\treturn (a.meta.hosts ? 1 : 0) - (b.meta.hosts ? 1 : 0);\n\t\t\t}\n\t\t\treturn o;\n\t\t});\n\t}\n\tprotected static getExpressions(selector: string): MatchFunction[] {\n\t\tlet matchers: ((node: HTMLElement) => boolean)[] = [];\n\t\tselector.replace(/\\.([\\w\\-\\_]+)|\\[(.+?\\]*)(\\=)(.*?)\\]|\\[(.+?\\]*)\\]|([\\w\\-\\_]+)/g, function (value: string, c1, a2, u3, v4, a5, e6) {\n\t\t\tif (c1) {\n\t\t\t\t// className\n\t\t\t\tmatchers.push(function (node) {\n\t\t\t\t\treturn node.classList.contains(c1);\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (a2) {\n\t\t\t\tmatchers.push(function (node) {\n\t\t\t\t\treturn (node.hasAttribute(a2) && node.getAttribute(a2) === v4) ||\n\t\t\t\t\t\t(node.hasAttribute(`[${a2}]`) && node.getAttribute(`[${a2}]`) === v4);\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (a5) {\n\t\t\t\t// attribute\n\t\t\t\tmatchers.push(function (node) {\n\t\t\t\t\treturn node.hasAttribute(a5) || node.hasAttribute(`[${a5}]`);\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (e6) {\n\t\t\t\t// nodeName\n\t\t\t\tmatchers.push(function (node) {\n\t\t\t\t\treturn node.nodeName.toLowerCase() === e6.toLowerCase();\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn '';\n\t\t});\n\t\treturn matchers;\n\n\t}\n\tprotected static unwrapSelectors(factories: FactoryList): SelectorFunction[] {\n\t\tconst selectors: SelectorFunction[] = [];\n\t\tfactories.forEach((factory: typeof Factory) => {\n\t\t\tif (factory.meta && factory.meta.selector) {\n\t\t\t\tfactory.meta.selector.split(',').forEach((selector: string) => {\n\t\t\t\t\tselector = selector.trim();\n\t\t\t\t\tlet excludes: MatchFunction[] = [];\n\t\t\t\t\tconst matchSelector = selector.replace(/\\:not\\((.+?)\\)/g, (value, unmatchSelector) => {\n\t\t\t\t\t\texcludes = this.getExpressions(unmatchSelector);\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t});\n\t\t\t\t\tconst includes: MatchFunction[] = this.getExpressions(matchSelector);\n\t\t\t\t\tselectors.push(function (node) {\n\t\t\t\t\t\tconst included = includes.reduce(function (p, match) {\n\t\t\t\t\t\t\treturn p && match(node);\n\t\t\t\t\t\t}, true);\n\t\t\t\t\t\tif (included) {\n\t\t\t\t\t\t\tconst excluded = excludes.length && excludes.reduce(function (p, match) {\n\t\t\t\t\t\t\t\treturn p || match(node);\n\t\t\t\t\t\t\t}, false);\n\t\t\t\t\t\t\tif (!excluded) {\n\t\t\t\t\t\t\t\treturn { node, factory, selector } as ISelectorResult;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\treturn selectors;\n\t}\n}\n/* global window self */\nexport const PLATFORM_BROWSER = typeof window !== 'undefined' && typeof window.document !== 'undefined';\n/* eslint-disable no-undef */\nexport const PLATFORM_JS_DOM = (typeof window !== 'undefined' && window.name === 'nodejs') || (typeof navigator !== 'undefined' && navigator.userAgent.indexOf('Node.js') !== -1) || (typeof navigator !== 'undefined' && navigator.userAgent.indexOf('jsdom') !== -1);\n/* eslint-enable no-undef */\nexport const PLATFORM_NODE = typeof process !== 'undefined' && process.versions != null && process.versions.node != null;\n/* eslint-disable no-restricted-globals */\nexport const PLATFORM_WEB_WORKER = typeof self === 'object' && self.constructor && self.constructor.name === 'DedicatedWorkerGlobalScope';\nexport const isPlatformServer = PLATFORM_NODE;\nexport const isPlatformBrowser = !PLATFORM_NODE && PLATFORM_BROWSER;\nexport const isPlatformWorker = PLATFORM_WEB_WORKER;\n","import { isPlatformBrowser } from \"../../platform\";\n\n/**\n * @example Serializer.encode(value, [encodeJson, encodeUriComponent, encodeBase64]);\n * @example Serializer.decode(value, [decodeBase64, decodeUriComponent, decodeJson]);\n */\nexport default class Serializer {\n\tstatic encode<T>(value: any, encoders: ((from: any) => any)[]): T;\n\tstatic encode(value: any, encoders: ((from: any) => any)[] = [encodeJson]): any {\n\t\treturn encoders.reduce((p, c) => c(p), value);\n\t}\n\n\tstatic decode<T>(value: any, decoders: ((from: any) => any)[]): T;\n\tstatic decode(value: any, decoders: ((from: any) => any)[] = [decodeJson]): any {\n\t\treturn decoders.reduce((p, c) => c(p), value);\n\t}\n\n\tstatic encodeJson<T>(value: any): T;\n\tstatic encodeJson(value: any): any {\n\t\treturn this.encode(value, [encodeJson]);\n\t}\n\n\tstatic decodeJson<T>(value: any): T;\n\tstatic decodeJson(value: any): any {\n\t\treturn this.decode(value, [decodeJson]);\n\t}\n\n\tstatic encodeBase64<T>(value: any): T;\n\tstatic encodeBase64(value: any): any {\n\t\treturn this.encode(value, [encodeJson, encodeBase64]);\n\t}\n\n\tstatic decodeBase64<T>(value: any): T;\n\tstatic decodeBase64(value: any): any {\n\t\treturn this.decode(value, [decodeBase64, decodeJson]);\n\t}\n}\nexport function encodeJson(value: any, circularRef?: any, space?: string | number): string {\n\tlet decoded: any;\n\ttry {\n\t\t// const pool: Map<any, boolean> = new Map();\n\t\tconst pool: any[] = [];\n\t\tconst json: string = JSON.stringify(value, function (key, value) {\n\t\t\tif (typeof value === 'object' && value != null) {\n\t\t\t\t// if (pool.has(value)) {\n\t\t\t\tif (pool.indexOf(value) !== -1) {\n\t\t\t\t\t// console.warn(`Serializer.encodeJson.error`, `circular reference found, discard key \"${key}\"`);\n\t\t\t\t\treturn circularRef;\n\t\t\t\t}\n\t\t\t\tpool.push(value);\n\t\t\t\t// pool.set(value, true);\n\t\t\t}\n\t\t\treturn value;\n\t\t}, space);\n\t\tdecoded = json;\n\t} catch (error) {\n\t\t// console.warn(`Serializer.encodeJson.error`, value, error);\n\t}\n\treturn decoded;\n}\nexport function encodeJsonWithOptions(circularRef?: any, space?: string | number): (value: any) => string {\n\treturn (value: any) => encodeJson(value, circularRef, space);\n}\nexport function decodeJson(value: string): any {\n\tlet decoded: any;\n\tif (value) {\n\t\ttry {\n\t\t\tdecoded = JSON.parse(value);\n\t\t} catch (error) {\n\t\t\t// console.warn(`Serializer.decodeJson.error`, value, error);\n\t\t}\n\t}\n\treturn decoded;\n}\nexport function encodeBase64(value: string): string {\n\tlet encoded: string;\n\ttry {\n\t\tencoded = isPlatformBrowser ? btoa(value) : Buffer.from(value).toString('base64');\n\t} catch (error) {\n\t\tencoded = value;\n\t}\n\treturn encoded;\n}\nexport function decodeBase64(value: string): string {\n\tlet decoded: string;\n\ttry {\n\t\tdecoded = isPlatformBrowser ? atob(value) : Buffer.from(value, 'base64').toString();\n\t} catch (error) {\n\t\tdecoded = value;\n\t}\n\treturn decoded;\n}\n","import Pipe from '../core/pipe';\nimport { IPipeMeta } from '../core/types';\nimport Serializer, { encodeJsonWithOptions } from '../platform/common/serializer/serializer';\n\nexport default class JsonPipe extends Pipe {\n\tstatic transform(value: any): string | undefined {\n\t\treturn Serializer.encode(value, [encodeJsonWithOptions('#ref', 2)]);\n\t}\n\tstatic meta: IPipeMeta = {\n\t\tname: 'json',\n\t};\n}\n","import { Observable, Subject } from 'rxjs';\nimport { takeUntil, tap } from 'rxjs/operators';\nimport Component from '../core/component';\nimport Context from '../core/context';\nimport Factory, { CONTEXT_MAP, EXPRESSION_MAP, getContext, NODE_MAP } from '../core/factory';\nimport Structure from '../core/structure';\nimport { ExpressionFunction, IContext, IElement, IFactoryMeta, IModuleMeta, IModuleParsedMeta, ISelectorResult, IText } from '../core/types';\nimport { ExpressionError, nextError$ } from '../error/error';\n\nexport default class Module {\n\tmeta!: IModuleParsedMeta; // !!!\n\tinstances?: Factory[];\n\tunsubscribe$: Subject<void> = new Subject();\n\tstatic forRoot?: (...args: any[]) => typeof Module;\n\tpublic compile(node: IElement, parentInstance: Factory | Window, instances: Factory[] = []): Factory[] {\n\t\tif (node.nodeType === 1) {\n\t\t\tconst selectors = this.meta.selectors;\n\t\t\tconst matches: ISelectorResult[] = [];\n\t\t\t// const childNodes: NodeListOf<ChildNode> = node.childNodes;\n\t\t\t// copying array to avoid multiple compilation\n\t\t\tconst childNodes: Array<ChildNode> = Array.prototype.slice.call(node.childNodes);\n\t\t\t// const foundStructure : boolean = Module.matchSelectors(node as HTMLElement, selectors, matches);\n\t\t\tlet foundStructure = false;\n\t\t\tfor (let i: number = 0, len: number = selectors.length; i < len; i++) {\n\t\t\t\tconst selectorResult: ISelectorResult | false = selectors[i](node);\n\t\t\t\tif (selectorResult) { // !== false\n\t\t\t\t\t// match found\n\t\t\t\t\tmatches.push(selectorResult as ISelectorResult);\n\t\t\t\t\tconst factory: typeof Factory = selectorResult.factory;\n\t\t\t\t\t// structure found\n\t\t\t\t\tif (factory.prototype instanceof Structure) {\n\t\t\t\t\t\tfoundStructure = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t// injecting template\n\t\t\t\t\tif (factory.prototype instanceof Component && factory.meta.template) {\n\t\t\t\t\t\tnode.innerHTML = factory.meta.template;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet nextParentInstance = parentInstance;\n\t\t\tfor (let i: number = 0, len: number = matches.length; i < len; i++) {\n\t\t\t\tconst match: ISelectorResult = matches[i];\n\t\t\t\t// console.log('makeInstance', parentInstance.constructor.name, match.factory.name);\n\t\t\t\t// make instance\n\t\t\t\tconst instance: Factory | undefined = this.makeInstance(match.node, match.factory, match.selector, parentInstance);\n\t\t\t\tif (instance) {\n\t\t\t\t\tinstances.push(instance);\n\t\t\t\t\t// updating parentInstance\n\t\t\t\t\tif (match.factory.prototype instanceof Component) {\n\t\t\t\t\t\tnextParentInstance = instance;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t/*\n\t\t\tmatches.forEach((match: ISelectorResult) => {\n\t\t\t\t// console.log('makeInstance', parentInstance.constructor.name, match.factory.name);\n\t\t\t\t// make instance\n\t\t\t\tconst instance: Factory | undefined = this.makeInstance(match.node, match.factory, match.selector, parentInstance);\n\t\t\t\tif (instance) {\n\t\t\t\t\tinstances.push(instance);\n\t\t\t\t\t// updating parentInstance\n\t\t\t\t\tif (match.factory.prototype instanceof Component) {\n\t\t\t\t\t\tnextParentInstance = instance;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\t*/\n\t\t\tif (!foundStructure) {\n\t\t\t\t// compiling childNodes\n\t\t\t\tfor (let i: number = 0, len: number = childNodes.length; i < len; i++) {\n\t\t\t\t\tthis.compile(childNodes[i] as IElement, nextParentInstance, instances);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn instances;\n\t}\n\tpublic makeInstance(node: IElement, factory: typeof Factory, selector: string, parentInstance: Factory | Window, args?: any[], inject?: { [key: string]: any }): Factory {\n\t\tconst meta: IFactoryMeta = factory.meta;\n\t\t// creating factory instance\n\t\tconst instance = new factory(...(args || []));\n\t\t// console.log(instance.constructor.name, parentInstance.constructor.name);\n\t\t// injecting custom properties\n\t\tif (inject != null) {\n\t\t\tfor (let i: number = 0, keys = Object.keys(inject), len = keys.length; i < len; i++) {\n\t\t\t\tconst key = keys[i];\n\t\t\t\tObject.defineProperty(instance, key, {\n\t\t\t\t\tvalue: inject[key],\n\t\t\t\t\tconfigurable: false,\n\t\t\t\t\tenumerable: false,\n\t\t\t\t\twritable: true,\n\t\t\t\t});\n\t\t\t}\n\t\t\t/*\n\t\t\tObject.keys(inject).forEach((key: string) => {\n\t\t\t\t// console.log('Module.makeInstance', key, inject[key]);\n\t\t\t\tObject.defineProperty(instance, key, {\n\t\t\t\t\tvalue: inject[key],\n\t\t\t\t\tconfigurable: false,\n\t\t\t\t\tenumerable: false,\n\t\t\t\t\twritable: true,\n\t\t\t\t});\n\t\t\t});\n\t\t\t*/\n\t\t}\n\t\t// creating instance context\n\t\tconst context = Module.makeContext(this, instance, parentInstance, node, factory, selector);\n\t\t// creating component input and outputs\n\t\tif (instance instanceof Context) {\n\t\t\t// skipping hosts, inputs & outputs\n\t\t} else {\n\t\t\tthis.makeHosts(meta, instance, node);\n\t\t\tcontext.inputs = this.makeInputs(meta, node, factory);\n\t\t\tcontext.outputs = this.makeOutputs(meta, instance);\n\t\t\t// if (parentInstance instanceof Factory) {\n\t\t\tthis.resolveInputsOutputs(instance, parentInstance);\n\t\t\t// }\n\t\t}\n\t\t// calling onInit event\n\t\tinstance.onInit();\n\t\t// subscribe to parent changes\n\t\tif (parentInstance instanceof Factory) {\n\t\t\tconst { childInstances } = getContext(parentInstance);\n\t\t\tchildInstances.push(instance);\n\t\t\tinstance.onParentDidChange(parentInstance);\n\t\t\t/*\n\t\t\tparentInstance.changes$.pipe(\n\t\t\t\t// distinctUntilChanged(deepEqual),\n\t\t\t\tstartWith(parentInstance),\n\t\t\t\ttakeUntil(instance.unsubscribe$)\n\t\t\t).subscribe(function (changes: Factory | Window) {\n\t\t\t\tinstance.onParentDidChange(changes);\n\t\t\t});\n\t\t\t*/\n\t\t}\n\t\treturn instance;\n\t}\n\tpublic makeFunction(expression: string, params: string[] = ['$instance']): ExpressionFunction {\n\t\tconst name = expression + '_' + params.join(',');\n\t\tconst cachedExpressionFunction = EXPRESSION_MAP.get(name);\n\t\tif (cachedExpressionFunction) {\n\t\t\treturn cachedExpressionFunction;\n\t\t} else {\n\t\t\t(this.meta as any).context = Context; // !!!\n\t\t\texpression = Module.parseExpression(expression);\n\t\t\tconst text: string = `\n\t\t\treturn (function (${params.join(',')}, $$module) {\n\t\t\t\tvar $$pipes = $$module.meta.pipes;\n\t\t\t\ttry {\n\t\t\t\t\tif (this.parentInstance) {\n\t\t\t\t\t\twith(this.parentInstance) {\n\t\t\t\t\t\t\twith(this) {\n\t\t\t\t\t\t\t\treturn ${expression};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\twith(this) {\n\t\t\t\t\t\t\treturn ${expression};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} catch(error) {\n\t\t\t\t\t$$module.nextError(error, this, ${JSON.stringify(expression)}, arguments);\n\t\t\t\t}\n\t\t\t}.bind(this)).apply(this, arguments);`;\n\t\t\t/*\n\t\t\tconst text: string = `\n\t\t\treturn (function (${params.join(',')}, $$module) {\n\t\t\t\tvar $$pipes = $$module.meta.pipes;\n\t\t\t\treturn ${expression};\n\t\t\t}.bind(this)).apply(this, arguments);`;\n\t\t\t*/\n\t\t\t/*\n\t\t\tconst text: string = `\n\t\t\treturn (function (${params.join(',')}, $$module) {\n\t\t\t\tvar $$pipes = $$module.meta.pipes;\n\t\t\t\ttry {\n\t\t\t\t\twith(this) {\n\t\t\t\t\t\treturn ${expression};\n\t\t\t\t\t}\n\t\t\t\t} catch(error) {\n\t\t\t\t\t$$module.nextError(error, this, ${JSON.stringify(expression)}, arguments);\n\t\t\t\t}\n\t\t\t}.bind(this)).apply(this, arguments);`;\n\t\t\t*/\n\t\t\tconst expressionFunction = new Function(text) as ExpressionFunction;\n\t\t\t(expressionFunction as any).expression = expression;\n\t\t\tEXPRESSION_MAP.set(name, expressionFunction);\n\t\t\treturn expressionFunction;\n\t\t}\n\t}\n\tpublic resolveInputsOutputs(instance: Factory, changes: Factory | Window): void {\n\t\tconst context: IContext = getContext(instance);\n\t\tconst parentInstance: Factory | Window = context.parentInstance;\n\t\tconst inputs: { [key: string]: ExpressionFunction } = context.inputs!;\n\t\tfor (let i: number = 0, keys = Object.keys(inputs), len = keys.length; i < len; i++) {\n\t\t\tconst key = keys[i];\n\t\t\tconst expression: ExpressionFunction = inputs[key];\n\t\t\tconst value: any = this.resolve(expression, parentInstance, instance);\n\t\t\tinstance[key] = value;\n\t\t}\n\t\t/*\n\t\tObject.keys(inputs).forEach(key => {\n\t\t\tconst expression: ExpressionFunction = inputs[key];\n\t\t\tconst value: any = this.resolve(expression, parentInstance, instance);\n\t\t\tinstance[key] = value;\n\t\t});\n\t\t*/\n\t}\n\tpublic getInputAttributeExpression(key: string, node: IElement): string | null {\n\t\tlet expression: string | null = null;\n\t\tif (node.hasAttribute(`[${key}]`)) {\n\t\t\texpression = node.getAttribute(`[${key}]`);\n\t\t\t// console.log('Module.getInputAttributeExpression.expression.1', expression);\n\t\t} else if (node.hasAttribute(`*${key}`)) {\n\t\t\texpression = node.getAttribute(`*${key}`);\n\t\t\t// console.log('Module.getInputAttributeExpression.expression.2', expression);\n\t\t} else if (node.hasAttribute(key)) {\n\t\t\texpression = node.getAttribute(key);\n\t\t\tif (expression) {\n\t\t\t\tconst attribute: string = expression.replace(/({{)|(}})|(\")/g, function (substring: string, a, b, c) {\n\t\t\t\t\tif (a) {\n\t\t\t\t\t\treturn '\"+';\n\t\t\t\t\t}\n\t\t\t\t\tif (b) {\n\t\t\t\t\t\treturn '+\"';\n\t\t\t\t\t}\n\t\t\t\t\tif (c) {\n\t\t\t\t\t\treturn '\\\"';\n\t\t\t\t\t}\n\t\t\t\t\treturn '';\n\t\t\t\t});\n\t\t\t\texpression = `\"${attribute}\"`;\n\t\t\t\t// console.log('Module.getInputAttributeExpression.expression.3', expression);\n\t\t\t}\n\t\t}\n\t\t// console.log('Module.getInputAttributeExpression.expression', expression);\n\t\treturn expression;\n\t}\n\tpublic resolve(expression: ExpressionFunction, parentInstance: Factory | Window, payload: any): any {\n\t\t// console.log('Module.resolve', expression, parentInstance, payload, getContext);\n\t\treturn expression.apply(parentInstance, [payload, this]);\n\t}\n\tpublic parse(node: HTMLElement, instance: Factory): void {\n\t\tfor (let i: number = 0, len: number = node.childNodes.length; i < len; i++) {\n\t\t\tconst child: ChildNode = node.childNodes[i];\n\t\t\tif (child.nodeType === 1) {\n\t\t\t\tconst element: HTMLElement = child as HTMLElement;\n\t\t\t\tconst context: IContext | undefined = getParsableContextByElement(element);\n\t\t\t\tif (!context) {\n\t\t\t\t\tthis.parse(element, instance);\n\t\t\t\t}\n\t\t\t} else if (child.nodeType === 3) {\n\t\t\t\tconst text: IText = child as IText;\n\t\t\t\tthis.parseTextNode(text, instance);\n\t\t\t}\n\t\t}\n\t}\n\tpublic remove(node: Node, keepInstance?: Factory): Node {\n\t\tconst keepContext: IContext | undefined = keepInstance ? getContext(keepInstance) : undefined;\n\t\tModule.traverseDown(node, (node: Node) => {\n\t\t\tModule.deleteContext(node as IElement, keepContext);\n\t\t});\n\t\treturn node;\n\t}\n\tpublic destroy(): void {\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t\tthis.remove(this.meta.node);\n\t\tthis.meta.node.innerHTML = this.meta.nodeInnerHTML;\n\t}\n\tpublic nextError(error: Error, instance: Factory, expression: string, params: any[]): void {\n\t\tconst expressionError: ExpressionError = new ExpressionError(error, this, instance, expression, params);\n\t\tnextError$.next(expressionError);\n\t}\n\tprotected makeContext(instance: Factory, parentInstance: Factory | Window, node: IElement, selector: string): IContext {\n\t\tconst context: IContext = Module.makeContext(this, instance, parentInstance, node, instance.constructor as typeof Factory, selector);\n\t\t// console.log('Module.makeContext', context, context.instance, context.node);\n\t\treturn context;\n\t}\n\tprotected makeHosts(meta: IFactoryMeta, instance: Factory, node: IElement): void {\n\t\tif (meta.hosts) {\n\t\t\tfor (let i: number = 0, keys = Object.keys(meta.hosts), len = keys.length; i < len; i++) {\n\t\t\t\tconst key = keys[i];\n\t\t\t\tconst factory: typeof Factory = meta.hosts![key];\n\t\t\t\tinstance[key] = getHost(instance, factory, node);\n\t\t\t}\n\t\t\t/*\n\t\t\tObject.keys(meta.hosts).forEach((key: string) => {\n\t\t\t\tconst factory: typeof Factory = meta.hosts![key];\n\t\t\t\tinstance[key] = getHost(instance, factory, node);\n\t\t\t});\n\t\t\t*/\n\t\t}\n\t}\n\tprotected makeInputs(meta: IFactoryMeta, node: IElement, factory: typeof Factory): { [key: string]: ExpressionFunction } {\n\t\tconst inputs: { [key: string]: ExpressionFunction } = {};\n\t\tif (meta.inputs) {\n\t\t\tfor (let i: number = 0, len: number = meta.inputs.length; i < len; i++) {\n\t\t\t\tconst key: string = meta.inputs[i];\n\t\t\t\tlet expression: string | null = this.getInputAttributeExpression(key, node);\n\t\t\t\tif (expression) {\n\t\t\t\t\texpression = factory.mapExpression(key, expression);\n\t\t\t\t\tinputs[key] = this.makeFunction(expression);\n\t\t\t\t}\n\t\t\t}\n\t\t\t/*\n\t\t\tmeta.inputs.forEach(key => {\n\t\t\t\tlet expression: string | null = this.getInputAttributeExpression(key, node);\n\t\t\t\tif (expression) {\n\t\t\t\t\texpression = factory.mapExpression(key, expression);\n\t\t\t\t\tinputs[key] = this.makeFunction(expression);\n\t\t\t\t}\n\t\t\t});\n\t\t\t*/\n\t\t}\n\t\treturn inputs;\n\t}\n\tprotected makeOutput(instance: Factory, key: string): Observable<any> {\n\t\tconst context: IContext = getContext(instance);\n\t\tconst node: IElement = context.node;\n\t\tconst parentInstance: Factory | Window = context.parentInstance;\n\t\tconst expression: string | null = node.getAttribute(`(${key})`);\n\t\tconst outputExpression: ExpressionFunction | null = expression ? this.makeFunction(expression, ['$event']) : null;\n\t\tconst output$: Observable<any> = new Subject<any>().pipe(\n\t\t\ttap((event) => {\n\t\t\t\tif (outputExpression) {\n\t\t\t\t\t// console.log(expression, parentInstance);\n\t\t\t\t\tthis.resolve(outputExpression, parentInstance, event);\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t\toutput$.pipe(\n\t\t\ttakeUntil(instance.unsubscribe$)\n\t\t).subscribe();\n\t\tinstance[key] = output$;\n\t\treturn output$;\n\t}\n\tprotected makeOutputs(meta: IFactoryMeta, instance: Factory): { [key: string]: Observable<any> } {\n\t\tconst outputs: { [key: string]: Observable<any> } = {};\n\t\tif (meta.outputs) {\n\t\t\tmeta.outputs.forEach((key: string) => {\n\t\t\t\tconst output = this.makeOutput(instance, key);\n\t\t\t\tif (output) {\n\t\t\t\t\toutputs[key] = output;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn outputs;\n\t}\n\tprotected parseTextNode(node: IText, instance: Factory): void {\n\t\tlet expressions: (ExpressionFunction | string)[] | undefined = node.nodeExpressions;\n\t\tif (!expressions) {\n\t\t\texpressions = this.parseTextNodeExpression(node.wholeText);\n\t\t}\n\t\tif (expressions.length) {\n\t\t\tconst replacedText: string = expressions.reduce((p: string, c: ExpressionFunction | string) => {\n\t\t\t\tlet text: string;\n\t\t\t\tif (typeof c === 'function') { // instanceOf ExpressionFunction ?;\n\t\t\t\t\t// console.log('Module.parseTextNode', c, instance);\n\t\t\t\t\ttext = this.resolve(c as ExpressionFunction, instance, instance);\n\t\t\t\t\tif (text == undefined) { // !!! keep == loose equality\n\t\t\t\t\t\ttext = '';\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\ttext = c;\n\t\t\t\t}\n\t\t\t\treturn p + text;\n\t\t\t}, '');\n\t\t\tif (node.nodeValue !== replacedText) {\n\t\t\t\tconst textNode: IText = document.createTextNode(replacedText) as IText;\n\t\t\t\ttextNode.nodeExpressions = expressions;\n\t\t\t\tnode.parentNode!.replaceChild(textNode, node);\n\t\t\t}\n\t\t} else {\n\t\t\tnode.nodeExpressions = expressions;\n\t\t}\n\t}\n\tprotected pushFragment(nodeValue: string, from: number, to: number, expressions: (ExpressionFunction | string)[]): void {\n\t\tconst fragment: string = nodeValue.substring(from, to);\n\t\texpressions.push(fragment);\n\t}\n\tprotected parseTextNodeExpression(nodeValue: string): (ExpressionFunction | string)[] {\n\t\tconst expressions: (ExpressionFunction | string)[] = [];\n\t\tconst regex: RegExp = /\\{{2}((([^{}])|(\\{([^{}]|(\\{.*?\\}))+?\\}))*?)\\}{2}/g;\n\t\tlet lastIndex: number = 0,\n\t\t\tmatches: RegExpExecArray | null;\n\t\twhile ((matches = regex.exec(nodeValue)) !== null) {\n\t\t\tconst index: number = regex.lastIndex - matches[0].length;\n\t\t\tif (index > lastIndex) {\n\t\t\t\tthis.pushFragment(nodeValue, index, lastIndex, expressions);\n\t\t\t}\n\t\t\tlastIndex = regex.lastIndex;\n\t\t\tif (matches[1]) {\n\t\t\t\tconst expression: ExpressionFunction = this.makeFunction(matches[1]);\n\t\t\t\texpressions.push(expression);\n\t\t\t}\n\t\t}\n\t\t// console.log('Module.parseTextNodeExpression', regex.source, expressions, nodeValue);\n\t\tconst length: number = nodeValue.length;\n\t\tif (length > lastIndex) {\n\t\t\tthis.pushFragment(nodeValue, lastIndex, length, expressions);\n\t\t}\n\t\tif (expressions.find(x => typeof x === 'function')) {\n\t\t\treturn expressions;\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\tprotected static makeContext(module: Module, instance: Factory, parentInstance: Factory | Window, node: IElement, factory: typeof Factory, selector: string): IContext {\n\t\tconst context: IContext = { module, instance, parentInstance, childInstances: [], node, factory, selector };\n\t\tlet nodeContexts = NODE_MAP.get(node);\n\t\tif (!nodeContexts) {\n\t\t\tnodeContexts = [];\n\t\t\tNODE_MAP.set(node, nodeContexts);\n\t\t}\n\t\tnodeContexts.push(context);\n\t\tCONTEXT_MAP.set(instance, context);\n\t\treturn context;\n\t}\n\n\tprotected static parseExpression(expression: string): string {\n\t\texpression = Module.parseGroup(expression);\n\t\texpression = Module.parseOptionalChaining(expression);\n\t\t// expression = Module.parseThis(expression);\n\t\treturn expression;\n\t}\n\tprotected static parseGroup(expression: string): string {\n\t\tconst l = '┌';\n\t\tconst r = '┘';\n\t\tconst rx1 = /(\\()([^\\(\\)]*)(\\))/;\n\t\twhile (rx1.test(expression)) {\n\t\t\texpression = expression.replace(rx1, function (m, ...args) {\n\t\t\t\treturn `${l}${Module.parsePipes(args[1])}${r}`;\n\t\t\t});\n\t\t}\n\t\texpression = Module.parsePipes(expression);\n\t\tconst rx2 = /(┌)|(┘)/g;\n\t\texpression = expression.replace(rx2, function (m, ...args) {\n\t\t\treturn args[0] ? '(' : ')';\n\t\t});\n\t\treturn expression;\n\t}\n\tprotected static parsePipes(expression: string): string {\n\t\tconst rx = /(.*?[^\\|])\\|\\s*(\\w+)\\s*([^\\|]+)?/;\n\t\twhile (rx.test(expression)) {\n\t\t\texpression = expression.replace(rx, function (m, value, name, expression) {\n\t\t\t\tconst params = Module.parsePipeParams(expression);\n\t\t\t\treturn `$$pipes.${name}.transform(${[value, ...params]})`;\n\t\t\t});\n\t\t}\n\t\treturn expression;\n\t}\n\tprotected static parsePipeParams(expression: string): string[] {\n\t\tconst params = [];\n\t\t// const rx = /:\\s*(\\[.+\\]|\\{.+\\}|\\(.+\\)|\\'.+\\'|[^:\\s]+)/g;\n\t\tconst rx = /:\\s*(\\{.+\\}|\\(.+\\)|[^:]+)/g;\n\t\tlet match;\n\t\twhile (match = rx.exec(expression)) {\n\t\t\tparams.push(match[1]);\n\t\t}\n\t\treturn params;\n\t}\n\tprotected static parseOptionalChaining(expression: string): string {\n\t\tconst rx = /([\\w|\\.]+)(?:\\?\\.)+([\\.|\\w]+)/;\n\t\twhile (rx.test(expression)) {\n\t\t\texpression = expression.replace(rx, function (m, a, b) {\n\t\t\t\treturn `${a} && ${a}.${b}`;\n\t\t\t});\n\t\t}\n\t\treturn expression;\n\t}\n\tprotected static parseThis(expression: string): string {\n\t\tconst rx = /(\\'.+\\'|\\[.+\\]|\\{.+\\}|\\$\\$pipes)|([^\\w.])([^\\W\\d])|^([^\\W\\d])/g;\n\t\texpression = expression.replace(rx, function (m, g1, g2, g3, g4) {\n\t\t\tif (g4) {\n\t\t\t\treturn `this.${g4}`;\n\t\t\t} else if (g3) {\n\t\t\t\treturn `${g2}this.${g3}`;\n\t\t\t} else {\n\t\t\t\treturn g1;\n\t\t\t}\n\t\t});\n\t\treturn expression;\n\t}\n\n\t/*\n\tprotected static parseExpression__(expression: string): string {\n\t\texpression = Module.parseGroup__(expression);\n\t\treturn Module.parseOptionalChaining__(expression);\n\t}\n\tprotected static parseGroup__(expression: string): string {\n\t\tconst l: string = '┌';\n\t\tconst r: string = '┘';\n\t\tconst rx1: RegExp = /(\\()([^\\(\\)]*)(\\))/;\n\t\twhile (expression.match(rx1)) {\n\t\t\texpression = expression.replace(rx1, function (substring: string, ...args: any[]) {\n\t\t\t\treturn `${l}${Module.parsePipes__(args[1])}${r}`;\n\t\t\t});\n\t\t}\n\t\texpression = Module.parsePipes__(expression);\n\t\texpression = expression.replace(/(┌)|(┘)/g, function (substring: string, ...args) {\n\t\t\treturn args[0] ? '(' : ')';\n\t\t});\n\t\treturn expression;\n\t}\n\tprotected static parsePipes__(expression: string): string {\n\t\tconst l: string = '┌';\n\t\tconst r: string = '┘';\n\t\tconst rx1: RegExp = /(.*?[^\\|])\\|([^\\|]+)/;\n\t\twhile (expression.match(rx1)) {\n\t\t\texpression = expression.replace(rx1, function (substring: string, ...args: any[]) {\n\t\t\t\tconst value: string = args[0].trim();\n\t\t\t\tconst params: string[] = Module.parsePipeParams__(args[1]);\n\t\t\t\tconst func: string = params.shift()!.trim();\n\t\t\t\treturn `$$pipes.${func}.transform${l}${[value, ...params]}${r}`;\n\t\t\t});\n\t\t}\n\t\treturn expression;\n\t}\n\tprotected static parsePipeParams__(expression: string): string[] {\n\t\tconst segments: string[] = [];\n\t\tlet i: number = 0,\n\t\t\tword: string = '',\n\t\t\tblock: number = 0;\n\t\tconst t: number = expression.length;\n\t\twhile (i < t) {\n\t\t\tconst c: string = expression.substr(i, 1);\n\t\t\tif (c === '{' || c === '(' || c === '[') {\n\t\t\t\tblock++;\n\t\t\t}\n\t\t\tif (c === '}' || c === ')' || c === ']') {\n\t\t\t\tblock--;\n\t\t\t}\n\t\t\tif (c === ':' && block === 0) {\n\t\t\t\tif (word.length) {\n\t\t\t\t\tsegments.push(word.trim());\n\t\t\t\t}\n\t\t\t\tword = '';\n\t\t\t} else {\n\t\t\t\tword += c;\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\t\tif (word.length) {\n\t\t\tsegments.push(word.trim());\n\t\t}\n\t\treturn segments;\n\t}\n\tprotected static parseOptionalChaining__(expression: string): string {\n\t\tconst regex: RegExp = /(\\w+(\\?\\.))+([\\.|\\w]+)/g;\n\t\tlet previous: string;\n\t\texpression = expression.replace(regex, function (substring: string, ...args: any[]) {\n\t\t\tconst tokens: string[] = substring.split('?.');\n\t\t\tfor (let i: number = 0, len: number = tokens.length - 1; i < len; i++) {\n\t\t\t\tconst a: string = i > 0 ? `(${tokens[i]} = ${previous})` : tokens[i];\n\t\t\t\tconst b: string = tokens[i + 1];\n\t\t\t\tprevious = i > 0 ? `${a}.${b}` : `(${a} ? ${a}.${b} : void 0)`;\n\t\t\t}\n\t\t\treturn previous || '';\n\t\t});\n\t\treturn expression;\n\t}\n\t*/\n\n\tprotected static removeFromParentInstance(instance: Factory, parentInstance: Factory | Window): void {\n\t\t// console.log('Module.removeFromParentInstance', instance);\n\t\tif (parentInstance instanceof Factory) {\n\t\t\tconst parentContext: IContext = getContext(parentInstance);\n\t\t\tif (parentContext) {\n\t\t\t\tconst i = parentContext.childInstances.indexOf(instance);\n\t\t\t\tif (i !== -1) {\n\t\t\t\t\tparentContext.childInstances.splice(i, 1);\n\t\t\t\t}/* else {\n\t\t\t\t\tconsole.log('not found', instance, 'in', parentInstance);\n\t\t\t\t}*/\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected static deleteContext(node: IElement, keepContext: IContext | undefined): IContext[] {\n\t\tconst keepContexts: IContext[] = [];\n\t\tconst nodeContexts: IContext[] | undefined = NODE_MAP.get(node);\n\t\tif (nodeContexts) {\n\t\t\tnodeContexts.forEach((context: IContext) => {\n\t\t\t\tif (context === keepContext) {\n\t\t\t\t\tkeepContexts.push(keepContext);\n\t\t\t\t} else {\n\t\t\t\t\tconst instance: Factory = context.instance;\n\t\t\t\t\t// !!!\n\t\t\t\t\tModule.removeFromParentInstance(instance, context.parentInstance);\n\t\t\t\t\t// !!!\n\t\t\t\t\tinstance.unsubscribe$.next();\n\t\t\t\t\tinstance.unsubscribe$.complete();\n\t\t\t\t\tinstance.onDestroy();\n\t\t\t\t\tCONTEXT_MAP.delete(instance);\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (keepContexts.length) {\n\t\t\t\tNODE_MAP.set(node, keepContexts);\n\t\t\t} else {\n\t\t\t\tNODE_MAP.delete(node);\n\t\t\t}\n\t\t}\n\t\treturn keepContexts;\n\t}\n\tprotected static traverseUp(node: Node | null, callback: (node: Node, i: number) => any, i: number = 0): any {\n\t\tif (!node) {\n\t\t\treturn;\n\t\t}\n\t\tconst result = callback(node, i);\n\t\tif (result) {\n\t\t\treturn result;\n\t\t}\n\t\treturn this.traverseUp(node.parentNode, callback, i + 1);\n\t}\n\tprotected static traverseDown(node: Node | null, callback: (node: Node, i: number) => any, i: number = 0): any {\n\t\tif (!node) {\n\t\t\treturn;\n\t\t}\n\t\tlet result = callback(node, i);\n\t\tif (result) {\n\t\t\treturn result;\n\t\t}\n\t\tif (node.nodeType === 1) {\n\t\t\tlet j = 0,\n\t\t\t\tt = node.childNodes.length;\n\t\t\twhile (j < t && !result) {\n\t\t\t\tresult = this.traverseDown(node.childNodes[j], callback, i + 1);\n\t\t\t\tj++;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\tprotected static traversePrevious(node: Node | null, callback: (node: Node, i: number) => any, i: number = 0): any {\n\t\tif (!node) {\n\t\t\treturn;\n\t\t}\n\t\tconst result = callback(node, i);\n\t\tif (result) {\n\t\t\treturn result;\n\t\t}\n\t\treturn this.traversePrevious(node.previousSibling, callback, i + 1);\n\t}\n\tprotected static traverseNext(node: Node | null, callback: (node: Node, i: number) => any, i: number = 0): any {\n\t\tif (!node) {\n\t\t\treturn;\n\t\t}\n\t\tconst result = callback(node, i);\n\t\tif (result) {\n\t\t\treturn result;\n\t\t}\n\t\treturn this.traverseNext(node.nextSibling, callback, i + 1);\n\t}\n\t/*\n\tprotected static matchSelectors(node: HTMLElement, selectors: SelectorFunction[], results: ISelectorResult[]): boolean {\n\t\tlet foundStructure = false;\n\t\tfor (let i: number = 0, len:number = selectors.length; i < len; i++) {\n\t\t\tconst selectorResult: ISelectorResult | false = selectors[i](node);\n\t\t\tif (selectorResult) { // !== false\n\t\t\t\tresults.push(selectorResult as ISelectorResult);\n\t\t\t\tconst factory: typeof Factory = selectorResult.factory;\n\t\t\t\tif (factory.prototype instanceof Structure) {\n\t\t\t\t\tfoundStructure = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (factory.prototype instanceof Component && factory.meta.template) {\n\t\t\t\t\tnode.innerHTML = factory.meta.template;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn foundStructure;\n\t}\n\t*/\n\tstatic meta: IModuleMeta;\n}\nexport function getParsableContextByElement(element: HTMLElement): IContext | undefined {\n\tlet context: IContext | undefined;\n\tconst contexts: IContext[] | undefined = NODE_MAP.get(element);\n\tif (contexts) {\n\t\tcontext = contexts.reduce((previous: IContext | undefined, current: IContext) => {\n\t\t\tif (current.instance instanceof Context) {\n\t\t\t\treturn previous ? previous : current;\n\t\t\t} else if (current.instance instanceof Component) {\n\t\t\t\treturn current;\n\t\t\t} else {\n\t\t\t\treturn previous;\n\t\t\t}\n\t\t}, undefined);\n\t}\n\t// context = contexts ? contexts.find(x => x.instance instanceof Component) : undefined;\n\treturn context;\n}\nexport function getContextByNode(element: HTMLElement): IContext | undefined {\n\tlet context: IContext | undefined = getParsableContextByElement(element);\n\tif (context && context.factory.prototype instanceof Structure) {\n\t\treturn undefined;\n\t}\n\treturn context;\n}\nexport function getHost(instance: Factory, factory: typeof Factory, node: IElement): Factory | undefined {\n\tif (!node) {\n\t\tnode = getContext(instance).node;\n\t}\n\tconst nodeContexts: IContext[] | undefined = NODE_MAP.get(node);\n\tif (nodeContexts) {\n\t\t// console.log(nodeContexts);\n\t\tfor (let i: number = 0, len: number = nodeContexts.length; i < len; i++) {\n\t\t\tconst context: IContext = nodeContexts[i];\n\t\t\tif (context.instance !== instance) {\n\t\t\t\t// console.log(context.instance, instance);\n\t\t\t\tif (context.instance instanceof factory) {\n\t\t\t\t\treturn context.instance;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif (node.parentNode) {\n\t\treturn getHost(instance, factory, node.parentNode as IElement);\n\t} else {\n\t\treturn undefined;\n\t}\n}\n/*\nexport function deepEqual(prev: any, curr: any, pool: any[] = []): boolean {\n\tlet equal: boolean = typeof prev === typeof curr;\n\tif (prev && pool.indexOf(prev) === -1 && pool.indexOf(curr) === -1) {\n\t\tpool.push(prev, curr);\n\t\tconst type = Array.isArray(curr) ? 'array' : typeof curr;\n\t\tswitch (type) {\n\t\t\tcase 'array':\n\t\t\t\tequal = prev.length === curr.length;\n\t\t\t\tequal = equal && prev.reduce((p: boolean, a: any[], i: number) => p && deepEqual(a, curr[i], pool), true);\n\t\t\t\tbreak;\n\t\t\tcase 'object':\n\t\t\t\tif ('Symbol' in WINDOW && Symbol.iterator in prev) {\n\t\t\t\t\t// || prev instanceof Map\n\t\t\t\t\tequal = prev.size === curr.size;\n\t\t\t\t\tconst ea = prev.entries();\n\t\t\t\t\tconst eb = curr.entries();\n\t\t\t\t\tfor (let item = ea.next(); item.done !== true; item = ea.next()) {\n\t\t\t\t\t\tconst ia = item.value;\n\t\t\t\t\t\tconst ib = eb.next().value;\n\t\t\t\t\t\tequal = equal && deepEqual(ia, ib, pool);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst prevKeys = Object.keys(prev);\n\t\t\t\t\tconst currKeys = Object.keys(curr);\n\t\t\t\t\tequal = prevKeys.length === currKeys.length;\n\t\t\t\t\tequal = equal && prevKeys.reduce((p: boolean, k: string) => p && deepEqual(prev[k], curr[k], pool), true);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tequal = prev === curr;\n\t\t}\n\t}\n\t// console.log(equal, prev, curr);\n\treturn equal;\n}\n*/\n","import Directive from '../core/directive';\nimport { getContext } from '../core/factory';\nimport { IFactoryMeta } from '../core/types';\n\nexport default class SrcDirective extends Directive {\n\tset src(src: string) {\n\t\tif (this.src_ !== src) {\n\t\t\tthis.src_ = src;\n\t\t\tconst { node } = getContext(this);\n\t\t\tsrc ? node.setAttribute('src', src) : node.removeAttribute('src');\n\t\t}\n\t}\n\tget src(): string {\n\t\treturn this.src_;\n\t}\n\tstatic meta: IFactoryMeta = {\n\t\tselector: '[[src]]',\n\t\tinputs: ['src'],\n\t};\n}\n","import Directive from '../core/directive';\nimport { getContext } from '../core/factory';\nimport { IFactoryMeta } from '../core/types';\n\nexport default class StyleDirective extends Directive {\n\tstyle?: { [key: string]: string } | null;\n\tpreviousStyle?: { [key: string]: string } | null;\n\tonChanges() {\n\t\tconst { node } = getContext(this);\n\t\tconst style = this.style;\n\t\tconst previousStyle = this.previousStyle;\n\t\tif (previousStyle) {\n\t\t\tfor (let key in previousStyle) {\n\t\t\t\tif (!style || !style[key]) {\n\t\t\t\t\tconst splitted: string[] = key.split('.');\n\t\t\t\t\tconst propertyName = splitted.shift();\n\t\t\t\t\tnode.style.removeProperty(propertyName!);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (style) {\n\t\t\tfor (let key in style) {\n\t\t\t\tif (!previousStyle || previousStyle[key] !== style[key]) {\n\t\t\t\t\tconst splitted: string[] = key.split('.');\n\t\t\t\t\tconst propertyName = splitted.shift();\n\t\t\t\t\tconst value = style[key] + (splitted.length ? splitted[0] : '');\n\t\t\t\t\t// console.log(propertyName, value, style, key, style[key]);\n\t\t\t\t\tnode.style.setProperty(propertyName!, value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.previousStyle = style;\n\t\t// console.log('StyleDirective.onChanges', style);\n\t}\n\tstatic meta: IFactoryMeta = {\n\t\tselector: `[[style]]`,\n\t\tinputs: ['style']\n\t};\n}\n","\nimport { takeUntil } from 'rxjs/operators';\nimport ClassDirective from './class/class.directive';\nimport Factory from './core/factory';\nimport Pipe from './core/pipe';\nimport { errors$ } from './error/error';\nimport EventDirective from './event/event.directive';\nimport ForStructure from './for/for.structure';\nimport HrefTargetDirective from './href/href-target.directive';\nimport HrefDirective from './href/href.directive';\nimport IfStructure from './if/if.structure';\nimport InnerHtmlDirective from './inner-html/inner-html.directive';\nimport JsonComponent from './json/json.component';\nimport JsonPipe from './json/json.pipe';\nimport Module from './module/module';\nimport SrcDirective from './src/src.directive';\nimport StyleDirective from './style/style.directive';\n\nconst factories: typeof Factory[] = [\n\tClassDirective,\n\tEventDirective,\n\tForStructure,\n\tHrefDirective,\n\tHrefTargetDirective,\n\tIfStructure,\n\tInnerHtmlDirective,\n\tJsonComponent,\n\tSrcDirective,\n\tStyleDirective,\n];\nconst pipes: typeof Pipe[] = [\n\tJsonPipe,\n];\nexport default class CoreModule extends Module {\n\tconstructor() {\n\t\tsuper();\n\t\t// console.log('CoreModule');\n\t\terrors$.pipe(\n\t\t\ttakeUntil(this.unsubscribe$),\n\t\t).subscribe();\n\t}\n\tstatic meta = {\n\t\tdeclarations: [\n\t\t\t...factories,\n\t\t\t...pipes,\n\t\t],\n\t\texports: [\n\t\t\t...factories,\n\t\t\t...pipes,\n\t\t]\n\t};\n}\n","export const WINDOW: Window = ((typeof self === 'object' && self.self === self && self) || (typeof global === 'object' && global.global === global && global) || this) as unknown as Window;\n","import { IElement, IModuleParsedMeta } from '../core/types';\nimport { ModuleError } from '../error/error';\nimport Module from '../module/module';\nimport { WINDOW } from './common/window/window';\nimport Platform, { isPlatformBrowser } from './platform';\n\nexport default class Browser extends Platform {\n\t/**\n\t * @param moduleFactory\n\t * @description This method returns a Browser compiled module\n\t */\n\tstatic bootstrap(moduleFactory?: typeof Module): Module {\n\t\tif (!isPlatformBrowser) {\n\t\t\tthrow new ModuleError('missing platform browser, Window not found');\n\t\t}\n\t\tif (!moduleFactory) {\n\t\t\tthrow new ModuleError('missing moduleFactory');\n\t\t}\n\t\tif (!moduleFactory.meta) {\n\t\t\tthrow new ModuleError('missing moduleFactory meta');\n\t\t}\n\t\tif (!moduleFactory.meta.bootstrap) {\n\t\t\tthrow new ModuleError('missing bootstrap');\n\t\t}\n\t\tif (!moduleFactory.meta.bootstrap.meta) {\n\t\t\tthrow new ModuleError('missing bootstrap meta');\n\t\t}\n\t\tif (!moduleFactory.meta.bootstrap.meta.selector) {\n\t\t\tthrow new ModuleError('missing bootstrap meta selector');\n\t\t}\n\t\tconst meta: IModuleParsedMeta = this.resolveMeta(moduleFactory!);\n\t\tconst module: Module = new moduleFactory();\n\t\tmodule.meta = meta;\n\t\tmeta.imports.forEach((moduleFactory: typeof Module) => {\n\t\t\tmoduleFactory.prototype.constructor.call(module);\n\t\t});\n\t\tif (WINDOW.rxcomp_hydrate_) {\n\t\t\tconst clonedNode = meta.node.cloneNode() as IElement;\n\t\t\tclonedNode.innerHTML = meta.nodeInnerHTML = WINDOW.rxcomp_hydrate_.innerHTML;\n\t\t\tconst instances = module.compile(clonedNode, WINDOW);\n\t\t\tmodule.instances = instances;\n\t\t\t/*\n\t\t\tconst root = instances[0];\n\t\t\troot.pushChanges();\n\t\t\t*/\n\t\t\tmeta.node.parentNode?.replaceChild(clonedNode, meta.node);\n\t\t} else {\n\t\t\tconst instances = module.compile(meta.node, WINDOW);\n\t\t\tmodule.instances = instances;\n\t\t\t/*\n\t\t\tconst root = instances[0];\n\t\t\troot.pushChanges();\n\t\t\t*/\n\t\t}\n\t\treturn module;\n\t}\n}\n","export interface ILocationInit {\n\thref: string;\n\tprotocol: string;\n\thost: string;\n\thostname: string;\n\tport: string;\n\tpathname: string;\n\tsearch: string;\n\thash: string;\n}\n\nexport function getLocationComponents(href: string): ILocationInit {\n\tlet protocol = '';\n\tlet host = '';\n\tlet hostname = '';\n\tlet port = '';\n\tlet pathname = '';\n\tlet search = '';\n\tlet hash = '';\n\tconst regExp: RegExp = /^((http\\:|https\\:)?\\/\\/)?((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])|(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\\-]*[A-Za-z0-9])|locahost)?(\\:([^\\/]+))?(\\.?\\/[^\\?]+)?(\\?[^\\#]+)?(\\#.+)?$/g;\n\tconst matches = [];\n\tlet match;\n\twhile ((match = regExp.exec(href)) !== null) {\n\t\tmatches.push(match);\n\t}\n\tfor (let match of matches) {\n\t\tprotocol = match[2] || '';\n\t\thost = hostname = match[3] || '';\n\t\tport = match[11] || '';\n\t\tpathname = match[12] || '';\n\t\tsearch = match[13] || '';\n\t\thash = match[14] || '';\n\t}\n\treturn { href, protocol, host, hostname, port, pathname, search, hash };\n}\n","import Serializer, { decodeJson, encodeJson } from \"../serializer/serializer\";\n\nexport default class TransferService {\n\tstatic makeKey(base: string, params?: { [key: string]: any }): string {\n\t\tconst paramsKey: string = params ? optionsToKey(params) : '';\n\t\tlet key: string = `rxcomp-hydrate-${base}-${paramsKey}`;\n\t\tkey = key.replace(/(\\s+)|(\\W+)/g, function (...matches) { return matches[1] ? '' : '_' });\n\t\t// console.log('TransferService.makeKey', key, base, paramsKey);\n\t\treturn key;\n\t}\n\tstatic has(key: string): boolean {\n\t\tconst script = document.querySelector(`#${key}`);\n\t\treturn script !== null;\n\t}\n\tstatic get<T>(key: string): T | undefined;\n\tstatic get(key: string): { [key: string]: any } | undefined;\n\tstatic get(key: string): any {\n\t\tconst node = document.querySelector(`#${key}`);\n\t\tif (node && node.firstChild) {\n\t\t\tconst json: string | null = node.firstChild.nodeValue;\n\t\t\treturn json ? Serializer.decode(json, [decodeJson]) : undefined;\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t}\n\tstatic set(key: string, value: { [key: string]: any }): void {\n\t\t// console.log('TransferService.set', key, value);\n\t\tconst json: string | undefined = Serializer.encode(value, [encodeJson]);\n\t\tif (!json) {\n\t\t\treturn;\n\t\t}\n\t\tconst text = document.createTextNode(json);\n\t\tlet node = document.querySelector(`#${key}`);\n\t\tif (!node) {\n\t\t\tnode = document.createElement('script');\n\t\t\tnode.setAttribute('id', key);\n\t\t\tnode.setAttribute('type', 'text/template');\n\t\t\t// console.log('node', node!!, 'document', document!!, 'head', document.head!!);\n\t\t\tnode.append(text);\n\t\t\tdocument.head!.append(node);\n\t\t} else {\n\t\t\tnode.replaceChild(text, node.firstChild!);\n\t\t}\n\t}\n\tstatic remove(key: string): void {\n\t\tlet node = document.querySelector(`#${key}`);\n\t\tif (node && node.parentNode) {\n\t\t\tnode.parentNode.removeChild(node);\n\t\t}\n\t}\n}\nexport function optionsToKey(v: any, s: string = ''): string {\n\tif (typeof v === 'number') {\n\t\ts += '-' + v.toString();\n\t} else if (typeof v === 'string') {\n\t\ts += '-' + v.substr(0, 20);\n\t} else if (v && Array.isArray(v)) {\n\t\ts += '-' + v.map(v => optionsToKey(v)).join('');\n\t} else if (v && typeof v === 'object') {\n\t\ts += '-' + Object.keys(v).map(k => k + optionsToKey(v[k])).join('-');\n\t}\n\treturn s;\n}\n"]}