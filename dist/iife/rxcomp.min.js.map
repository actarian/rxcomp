{"version":3,"sources":["src/rxcomp.ts","../../src/core/factory.ts","../../src/core/directive.ts","../../src/class/class.directive.ts","../../src/error/error.ts","../../src/event/event.directive.ts","../../src/core/structure.ts","../../src/core/component.ts","../../src/core/context.ts","../../src/for/for.item.ts","../../src/for/for.structure.ts","../../src/href/href-target.directive.ts","../../src/href/href.directive.ts","../../src/if/if.structure.ts","../../src/inner-html/inner-html.directive.ts","../../src/json/json.component.ts","../../src/core/pipe.ts","../../src/platform/platform.ts","../../src/platform/common/serializer/serializer.ts","../../src/json/json.pipe.ts","../../src/module/module.ts","../../src/src/src.directive.ts","../../src/style/style.directive.ts","../../src/core.module.ts","../../src/platform/common/window/window.ts","../../src/platform/browser.ts","../../src/platform/common/location/location.ts","../../src/platform/common/transfer/transfer.service.ts"],"names":["rxcomp","exports","rxjs","operators","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","Constructor","protoProps","staticProps","prototype","_inheritsLoose","subClass","superClass","create","constructor","__proto__","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","_setPrototypeOf","p","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","toString","call","e","_construct","Parent","args","Class","a","push","apply","instance","Function","bind","arguments","_wrapNativeSuper","_cache","Map","undefined","fn","indexOf","TypeError","has","get","set","Wrapper","this","value","CONTEXT_MAP","NODE_MAP","EXPRESSION_MAP","Factory","_proto","onInit","onChanges","changes","onView","onDestroy","pushChanges","childInstances","getContext","len","onParentDidChange","module","resolveInputsOutputs","mapExpression","expression","unsubscribe$_","Subject","Directive","_Factory","ClassDirective","_this","_Directive","class","keys","_this2","node","Array","slice","classList","forEach","object","split","concat","setAttribute","join","selector","inputs","ModuleError","_Error","Error","ExpressionError","_Error2","error","params","message","name","template","outerHTML","ErrorInterceptorHandler","next","interceptor","handle","intercept","DefaultErrorHandler","of","ErrorInterceptors","nextError$","ReplaySubject","errors$","pipe","switchMap","reduceRight","tap","console","EventDirective","event","_getContext","parentInstance","replace","event$","fromEvent","shareReplay","getAttribute","outputFunction","makeFunction","takeUntil","unsubscribe$","subscribe","resolve","Structure","Component","instances","parse","Context","_Component","ForItem","$key","$value","index","count","_Context","even","ForStructure","_Structure","tokens","getForExpressionTokens","nodeRef","document","createComment","parentNode","replaceChild","removeAttribute","context","data","for","isArray","items","total","previous","Math","max","clonedNode","cloneNode","insertBefore","makeInstance","compile","removeChild","remove","iterable","trim","expressions","map","x","filter","forExpressions","keyValueMatches","match","indexExpressions","HrefTargetDirective","target_","HrefDirective","href","href_","IfStructure","element","_getContext2","Boolean","if","InnerHtmlDirective","innerHTML","innerHTML_","JsonComponent","active","onToggle","Pipe","transform","ORDER","Platform","bootstrap","moduleFactory","meta","resolveMeta","imports","querySelector","resolveImportedMeta","nodeInnerHTML","pipes","resolvePipes","factories","resolveFactories","sortFactories","unshift","selectors","unwrapSelectors","assign","declarations","exported","importedPipes","importMeta","pipeFactory","_Array$prototype$conc","_this3","importedFactories","factoryList","sort","b","reduce","c","hosts","getExpressions","matchers","c1","a2","u3","v4","a5","e6","contains","hasAttribute","nodeName","toLowerCase","_this4","factory","excludes","matchSelector","unmatchSelector","includes","PLATFORM_BROWSER","window","PLATFORM_JS_DOM","navigator","userAgent","PLATFORM_NODE","process","versions","PLATFORM_WEB_WORKER","self","isPlatformServer","isPlatformBrowser","isPlatformWorker","Serializer","encode","encoders","encodeJson","decode","decoders","decodeJson","encodeBase64","decodeBase64","circularRef","space","decoded","pool","JSON","stringify","encodeJsonWithOptions","encoded","btoa","Buffer","from","atob","JsonPipe","_Pipe","Module","nodeType","matches","childNodes","foundStructure","selectorResult","nextParentInstance","inject","makeContext","makeHosts","makeInputs","outputs","makeOutputs","cachedExpressionFunction","parseExpression","text","expressionFunction","getInputAttributeExpression","attribute","substring","payload","child","getParsableContextByElement","parseTextNode","keepInstance","keepContext","traverseDown","deleteContext","destroy","complete","nextError","expressionError","getHost","makeOutput","outputExpression","output$","output","nodeExpressions","parseTextNodeExpression","wholeText","replacedText","nodeValue","textNode","createTextNode","pushFragment","to","fragment","regex","lastIndex","exec","find","nodeContexts","parseGroup","parseOptionalChaining","rx1","test","m","parsePipes","rx","parsePipeParams","parseThis","g1","g2","g3","g4","keepContexts","parentContext","splice","delete","traverseUp","callback","result","j","t","traversePrevious","previousSibling","traverseNext","nextSibling","contexts","current","SrcDirective","src","src_","StyleDirective","style","previousStyle","propertyName","shift","removeProperty","splitted","setProperty","CoreModule","_Module","WINDOW","global","Browser","_Platform","rxcomp_hydrate_","_meta$node$parentNode","TransferService","makeKey","base","optionsToKey","firstChild","json","createElement","append","head","v","s","substr","k","_decodeBase","_decodeJson","_encodeBase","_encodeJson","getContextByNode","getLocationComponents","protocol","host","hostname","port","pathname","search","hash","regExp","_i","_matches"],"mappings":"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","file":"dist\\iife\\rxcomp.min.js","sourcesContent":[null,"import { Subject } from 'rxjs';\nimport { ExpressionFunction, IContext, IElement, IFactoryMeta } from './types';\n\nexport const CONTEXTS: { [key: number]: IContext } = {};\nexport const NODES: { [key: number]: IContext[] } = {};\n\nexport const CONTEXT_MAP:Map<Factory, IContext> = new Map<Factory, IContext>();\nexport const NODE_MAP:Map<IElement, IContext[]> = new Map<IElement, IContext[]>();\nexport const EXPRESSION_MAP:Map<string, ExpressionFunction> = new Map<string, ExpressionFunction>();\n\n// console.log(CONTEXT_MAP, NODE_MAP, EXPRESSION_MAP);\n\nexport default class Factory {\n\tstatic meta: IFactoryMeta;\n\tunsubscribe$_: Subject<void> | undefined;\n\tget unsubscribe$(): Subject<void> {\n\t\tif (!this.unsubscribe$_) {\n\t\t\tthis.unsubscribe$_ = new Subject();\n\t\t}\n\t\treturn this.unsubscribe$_;\n\t}\n\t// unsubscribe$: Subject<void> = new Subject();\n\t// changes$: Subject<Factory> = new Subject();\n\t// changes$: ReplaySubject<Factory> = new ReplaySubject(1);\n\tonInit(): void { }\n\tonChanges(changes: Factory | Window): void { }\n\tonView(): void { }\n\tonDestroy(): void { }\n\tpushChanges(): void {\n\t\t// const { module } = getContext(this);\n\t\t// if (module.instances) {\n\t\tconst  { childInstances } = getContext(this);\n\t\tfor (let i:number = 0, len:number = childInstances.length; i < len; i++) {\n\t\t\tchildInstances[i].onParentDidChange(this);\n\t\t}\n\t\t// \tthis.changes$.next(this);\n\t\t\tthis.onView();\n\t\t// }\n\t}\n\tonParentDidChange(changes: Factory | Window): void {\n\t\tconst { module } = getContext(this);\n\t\t// console.log('Component.onParentDidChange', changes);\n\t\tmodule.resolveInputsOutputs(this, changes);\n\t\tthis.onChanges(changes);\n\t\tthis.pushChanges();\n\t}\n\t[key: string]: any; // extensible object\n\tconstructor(...args: any[]) {\n\t\t/*\n\t\t// !!! PROXY\n\t\tconst store: { [key: string]: any } = {};\n\t\tconst handler: ProxyHandler<Factory> = {\n\t\t\tget: function (target: Factory, prop: string, receiver: any) {\n\t\t\t\treturn target[prop];\n\t\t\t},\n\t\t\tset: function (target: Factory, prop: string | number | Symbol, value: any, receiver: any) {\n\t\t\t\tstore[prop as string] = value;\n\t\t\t\tconsole.log('Factory updating store', prop, value, store);\n\t\t\t\ttarget[prop as string] = value;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\tconst proxy = new Proxy(this, handler);\n\t\tconsole.log('proxy', proxy);\n\t\t*/\n\t}\n    static mapExpression(key:string, expression:string) {\n        return expression;\n    }\n}\nexport function getContext(instance: Factory): IContext {\n\treturn CONTEXT_MAP.get(instance) as IContext;\n}\n","import Factory from './factory';\n\nexport default class Directive extends Factory { }\n","import Directive from '../core/directive';\nimport { getContext } from '../core/factory';\nimport { IFactoryMeta } from '../core/types';\n\nexport default class ClassDirective extends Directive {\n\tclass: { [key: string]: string } | string | null = '';\n\tkeys: string[] = [];\n\tonInit() {\n\t\tconst { node } = getContext(this);\n\t\tArray.prototype.slice.call(node.classList).forEach((value: string) => {\n\t\t\tthis.keys.push(value);\n\t\t});\n\t\t// console.log('ClassDirective.onInit');\n\t}\n\tonChanges() {\n\t\tconst { node } = getContext(this);\n\t\tlet keys: string[] = [];\n\t\tconst object = this.class;\n\t\tif (typeof object === 'object') {\n\t\t\tfor (let key in object) {\n\t\t\t\tif (object[key]) {\n\t\t\t\t\tkeys.push(key);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (typeof object === 'string') {\n\t\t\tkeys = object.split(/\\s+/);\n\t\t}\n\t\tkeys = keys.concat(this.keys);\n\t\t// console.log(keys);\n\t\tnode.setAttribute('class', keys.join(' '));\n\t\t// console.log('ClassDirective.onChanges', keys);\n\t}\n\tstatic meta: IFactoryMeta = {\n\t\tselector: `[[class]]`,\n\t\tinputs: ['class']\n\t};\n}\n","import { Observable, of, ReplaySubject } from \"rxjs\";\nimport { switchMap, tap } from \"rxjs/operators\";\nimport Factory, { getContext } from \"../core/factory\";\nimport Module from \"../module/module\";\n\nexport class ModuleError extends Error { }\n\nexport class ExpressionError extends Error {\n\tmodule: Module;\n\tinstance: Factory;\n\texpression: string;\n\tparams: any[];\n\ttemplate: string;\n\tconstructor(error: Error, module: Module, instance: Factory, expression: string, params: any[]) {\n\t\tconst message: string = `ExpressionError in ${instance.constructor.name} \"${expression}\"\n\t\t${error.message}`;\n\t\tsuper(message);\n\t\tthis.name = error.name;\n\t\t// this.stack = error.stack;\n\t\tthis.module = module;\n\t\tthis.instance = instance;\n\t\tthis.expression = expression;\n\t\tthis.params = params;\n\t\tconst { node } = getContext(instance);\n\t\tthis.template = node.outerHTML;\n\t}\n}\nexport interface IErrorHandler {\n\thandle(error: Error): Observable<Error | void>\n}\nexport interface IErrorInterceptor {\n\tintercept(error: Error | void, next: IErrorHandler): Observable<Error | void>\n}\nexport class ErrorInterceptorHandler implements IErrorHandler {\n\tconstructor(\n\t\tprivate next: IErrorHandler,\n\t\tprivate interceptor: IErrorInterceptor,\n\t) { }\n\thandle(error: Error | void): Observable<Error | void> {\n\t\treturn this.interceptor.intercept(error, this.next);\n\t}\n}\nexport class DefaultErrorHandler implements IErrorHandler {\n\thandle(error: Error | void): Observable<Error | void> {\n\t\treturn of(error);\n\t}\n}\nexport const ErrorInterceptors: IErrorInterceptor[] = [];\nexport const nextError$: ReplaySubject<Error> = new ReplaySubject<Error>(1);\nexport const errors$: Observable<Error | void> = nextError$.pipe(\n\tswitchMap((error: Error) => {\n\t\tconst chain: IErrorHandler = ErrorInterceptors.reduceRight((next: IErrorHandler, interceptor: IErrorInterceptor) => {\n\t\t\treturn new ErrorInterceptorHandler(next, interceptor);\n\t\t}, new DefaultErrorHandler());\n\t\treturn chain.handle(error);\n\t}),\n\ttap((error: Error | void) => {\n\t\tif (error) {\n\t\t\tconsole.error(error);\n\t\t}\n\t}),\n);\n","import { fromEvent, Observable } from 'rxjs';\nimport { shareReplay, takeUntil } from 'rxjs/operators';\nimport Directive from '../core/directive';\nimport { getContext } from '../core/factory';\nimport { IFactoryMeta } from '../core/types';\n\nconst EVENTS = ['mousedown', 'mouseup', 'mousemove', 'click', 'dblclick', 'mouseover', 'mouseout', 'mouseenter', 'mouseleave', 'contextmenu', 'touchstart', 'touchmove', 'touchend', 'keydown', 'keyup', 'input', 'change', 'loaded'];\n\nexport default class EventDirective extends Directive {\n\tevent: string = '';\n\tonInit() {\n\t\tconst { module, node, parentInstance, selector } = getContext(this);\n\t\tconst event = this.event = selector.replace(/\\[|\\]|\\(|\\)/g, '');\n\t\tconst event$: Observable<Event> = fromEvent<Event>(node, event).pipe(shareReplay(1));\n\t\tconst expression = node.getAttribute(`(${event})`);\n\t\tif (expression) {\n\t\t\tconst outputFunction = module.makeFunction(expression, ['$event']);\n\t\t\tevent$.pipe(\n\t\t\t\ttakeUntil(this.unsubscribe$)\n\t\t\t).subscribe(event => {\n\t\t\t\tmodule.resolve(outputFunction, parentInstance, event);\n\t\t\t});\n\t\t} else {\n\t\t\tparentInstance[`${event}$`] = event$;\n\t\t}\n\t\t// console.log('EventDirective.onInit', 'selector', selector, 'event', event);\n\t}\n\tstatic meta: IFactoryMeta = {\n\t\tselector: `[(${EVENTS.join(')],[(')})]`,\n\t};\n}\n","import Factory from './factory';\n\nexport default class Structure extends Factory { }\n","\nimport Factory, { getContext } from './factory';\n\nexport default class Component extends Factory {\n\tpushChanges(): void {\n\t\tconst { module, node, childInstances } = getContext(this);\n\t\tif (module.instances) {\n\t\t\tfor (let i:number = 0, len:number = childInstances.length; i < len; i++) {\n\t\t\t\tchildInstances[i].onParentDidChange(this);\n\t\t\t}\n\t\t\t// this.changes$.next(this);\n\t\t\tmodule.parse(node, this);\n\t\t\tthis.onView();\n\t\t}\n\t}\n}\n","// import { BehaviorSubject, Subject } from 'rxjs';\nimport Component from './component';\nimport Factory from './factory';\n\n// const RESERVED_PROPERTIES = ['constructor', 'onInit', 'onChanges', 'onDestroy', 'pushChanges', 'changes$', 'unsubscribe$'];\n\nexport default class Context extends Component {\n\tparentInstance: Factory;\n\t// constructor(parentInstance: Factory, descriptors: { [key: string]: PropertyDescriptor } = {}) {\n\tconstructor(parentInstance: Factory) {\n\t\tsuper();\n\t\tthis.parentInstance = parentInstance;\n\t\t/*\n\t\tdescriptors = Context.mergeDescriptors(parentInstance, parentInstance, descriptors);\n\t\tdescriptors = Context.mergeDescriptors(Object.getPrototypeOf(parentInstance), parentInstance, descriptors);\n\t\tObject.defineProperties(this, descriptors);\n\t\t*/\n\t}\n\t/*\n\tpushChanges(): void {\n\t\tconst context = getContext(this);\n\t\tif (!context.keys) {\n\t\t\tcontext.keys = [];\n\t\t\t// context.keys = Object.keys(context.parentInstance).filter(key => RESERVED_PROPERTIES.indexOf(key) === -1);\n\t\t\tfor (let i:number = 0, keys = Object.keys(context.parentInstance), len = keys.length; i < len; i++) {\n\t\t\t\tconst key = keys[i];\n\t\t\t\tif (RESERVED_PROPERTIES.indexOf(key) === -1) {\n\t\t\t\t\tcontext.keys.push(key);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// console.log(context.keys.join(','));\n\t\t}\n\t\tif (context.module.instances) {\n\t\t\tcontext.keys.forEach(key => {\n\t\t\t\t// console.log('Context', key, context.parentInstance);\n\t\t\t\tthis[key] = context.parentInstance[key];\n\t\t\t});\n\t\t}\n\t\tsuper.pushChanges();\n\t}\n\t*/\n\tonParentDidChange(changes: Factory | Window): void {\n\t\tthis.onChanges(changes);\n\t\tthis.pushChanges();\n\t}\n\t/*\n\tstatic mergeDescriptors(source: Object, instance: Factory, descriptors: { [key: string]: PropertyDescriptor } = {}): { [key: string]: PropertyDescriptor } {\n\t\tconst properties: string[] = Object.getOwnPropertyNames(source);\n\t\twhile (properties.length) {\n\t\t\tconst key: string = properties.shift() as string;\n\t\t\tif (RESERVED_PROPERTIES.indexOf(key) === -1 && !descriptors.hasOwnProperty(key)) {\n\t\t\t\tconst descriptor: PropertyDescriptor = Object.getOwnPropertyDescriptor(source, key) as PropertyDescriptor;\n\t\t\t\tif (typeof descriptor.value == 'function') {\n\t\t\t\t\tdescriptor.value = (...args: any[]) => {\n\t\t\t\t\t\treturn instance[key].apply(instance, args);\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tdescriptors[key] = descriptor;\n\t\t\t}\n\t\t}\n\t\treturn descriptors;\n\t}\n\t*/\n}\n","import Context from '../core/context';\nimport Factory from '../core/factory';\n\nexport default class ForItem extends Context {\n\tindex: number;\n\tcount: number;\n\t[key: string]: any;\n\t// !!! todo: payload options { key, $key, value, $value, index, count }\n\tconstructor(key: string, $key: number | string, value: string, $value: any, index: number, count: number, parentInstance: Factory) {\n\t\tsuper(parentInstance);\n\t\tthis[key] = $key;\n\t\tthis[value] = $value;\n\t\tthis.index = index;\n\t\tthis.count = count;\n\t}\n\tget first(): boolean { return this.index === 0; }\n\tget last(): boolean { return this.index === this.count - 1; }\n\tget even(): boolean { return this.index % 2 === 0; }\n\tget odd(): boolean { return !this.even; }\n}\n","import Factory, { getContext } from '../core/factory';\nimport Structure from '../core/structure';\nimport { IComment, IContext, IElement, IFactoryMeta, IForExpressionTokens } from '../core/types';\nimport Module from '../module/module';\nimport ForItem from './for.item';\n\nexport default class ForStructure extends Structure {\n\tinstances: Factory[] = [];\n\tnodeRef!: IComment;\n\ttokens!: IForExpressionTokens;\n\tonInit() {\n\t\tconst { node } = getContext(this);\n        const expression = node.getAttribute('*for');\n        this.tokens = ForStructure.getForExpressionTokens(expression);\n\t\tconst nodeRef: IComment = this.nodeRef = document.createComment(`*for`);\n\t\tnode.parentNode!.replaceChild(nodeRef, node);\n\t\tnode.removeAttribute('*for');\n\t}\n\tonChanges() {\n\t\tconst context: IContext = getContext(this);\n\t\tconst module: Module = context.module;\n\t\tconst node: IElement = context.node;\n\t\tconst selector: string = context.selector;\n\t\tconst parentInstance: Factory | Window = context.parentInstance;\n\t\tconst nodeRef = this.nodeRef;\n\t\tconst tokens: IForExpressionTokens = this.tokens!;\n\t\tlet data = this.for || [];\n\t\tconst isArray = Array.isArray(data);\n\t\tconst items: any[] = isArray ? data : Object.keys(data);\n\t\tconst total: number = items.length;\n\t\tconst instances = this.instances;\n\t\tconst previous: number = instances.length;\n\t\tfor (let i: number = 0, len:number = Math.max(previous, total); i < len; i++) {\n\t\t\tif (i < total) {\n\t\t\t\tconst key: number | string = isArray ? i : items[i];\n\t\t\t\tconst value: any = isArray ? items[key as number] : data[key];\n\t\t\t\tif (i < previous) {\n\t\t\t\t\t// update\n\t\t\t\t\tconst instance: Factory = instances[i];\n\t\t\t\t\tinstance[tokens.key] = key;\n\t\t\t\t\tinstance[tokens.value] = value;\n\t\t\t\t} else {\n\t\t\t\t\t// create\n\t\t\t\t\tconst clonedNode: IElement = node.cloneNode(true) as IElement;\n\t\t\t\t\tnodeRef.parentNode!.insertBefore(clonedNode, nodeRef);\n\t\t\t\t\tconst args = [tokens.key, key, tokens.value, value, i, total, parentInstance];\n\t\t\t\t\tconst instance = module.makeInstance(clonedNode, ForItem, selector, parentInstance, args);\n\t\t\t\t\tif (instance) {\n\t\t\t\t\t\tmodule.compile(clonedNode, instance);\n\t\t\t\t\t\tinstances.push(instance);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// remove\n\t\t\t\tconst instance: Factory = instances[i];\n\t\t\t\tconst { node } = getContext(instance);\n\t\t\t\tnode.parentNode!.removeChild(node);\n\t\t\t\tmodule.remove(node);\n\t\t\t}\n\t\t}\n\t\tinstances.length = total;\n\t}\n    static mapExpression(key:string, expression:string) {\n        const tokens = this.getForExpressionTokens(expression);\n        return tokens.iterable;\n    }\n\tstatic getForExpressionTokens(expression: string | null = null): IForExpressionTokens {\n\t\tif (expression == null) {\n\t\t\tthrow new Error('invalid for');\n\t\t}\n\t\tif (expression.trim().indexOf('let ') === -1 || expression.trim().indexOf(' of ') === -1) {\n\t\t\tthrow new Error('invalid for');\n\t\t}\n\t\tconst expressions: string[] = expression.split(';').map(x => x.trim()).filter(x => x !== '');\n\t\tconst forExpressions: string[] = expressions[0].split(' of ').map(x => x.trim());\n\t\tlet value: string = forExpressions[0].replace(/\\s*let\\s*/, '');\n\t\tconst iterable: string = forExpressions[1];\n\t\tlet key: string = 'index';\n\t\tconst keyValueMatches: RegExpMatchArray | null = value.match(/\\[(.+)\\s*,\\s*(.+)\\]/);\n\t\tif (keyValueMatches) {\n\t\t\tkey = keyValueMatches[1];\n\t\t\tvalue = keyValueMatches[2];\n\t\t}\n\t\tif (expressions.length > 1) {\n\t\t\tconst indexExpressions: string[] = expressions[1].split(/\\s*let\\s*|\\s*=\\s*index/).map(x => x.trim());\n\t\t\tif (indexExpressions.length === 3) {\n\t\t\t\tkey = indexExpressions[1];\n\t\t\t}\n\t\t}\n\t\treturn { key, value, iterable };\n\t}\n\tstatic meta: IFactoryMeta = {\n\t\tselector: '[*for]',\n\t\tinputs: ['for'],\n\t};\n}\n","import Directive from '../core/directive';\nimport { getContext } from '../core/factory';\nimport { IFactoryMeta } from '../core/types';\n\nexport default class HrefTargetDirective extends Directive {\n\tset target(target: string) {\n\t\tif (this.target_ !== target) {\n\t\t\tthis.target_ = target;\n\t\t\tconst { node } = getContext(this);\n\t\t\ttarget ? node.setAttribute('target', target) : node.removeAttribute('target');\n\t\t}\n\t}\n\tget target(): string {\n\t\treturn this.target_;\n\t}\n\tstatic meta: IFactoryMeta = {\n\t\tselector: '[[target]]',\n\t\tinputs: ['target'],\n\t};\n}\n","import Directive from '../core/directive';\nimport { getContext } from '../core/factory';\nimport { IFactoryMeta } from '../core/types';\n\nexport default class HrefDirective extends Directive {\n\tset href(href: string) {\n\t\tif (this.href_ !== href) {\n\t\t\tthis.href_ = href;\n\t\t\tconst { node } = getContext(this);\n\t\t\thref ? node.setAttribute('href', href) : node.removeAttribute('href');\n\t\t}\n\t}\n\tget href(): string {\n\t\treturn this.href_;\n\t}\n\tstatic meta: IFactoryMeta = {\n\t\tselector: '[[href]]',\n\t\tinputs: ['href'],\n\t};\n}\n\n","import { getContext } from '../core/factory';\nimport Structure from '../core/structure';\nimport { IComment, IElement, IFactoryMeta } from '../core/types';\n\nexport default class IfStructure extends Structure {\n\tnodeRef?: IComment;\n\tclonedNode?: IElement;\n\telement?: IElement;\n\tonInit() {\n\t\tconst { node } = getContext(this);\n\t\tconst nodeRef: IComment = this.nodeRef = document.createComment(`*if`);\n\t\tnode.parentNode!.replaceChild(nodeRef, node);\n\t\tconst clonedNode = node.cloneNode(true) as IElement;\n\t\tclonedNode.removeAttribute('*if');\n\t\tthis.clonedNode = clonedNode;\n\t\tthis.element = clonedNode.cloneNode(true) as IElement;\n\t}\n\tonChanges() {\n\t\tconst { module, parentInstance } = getContext(this);\n\t\tconst element: IElement = this.element!;\n\t\t// console.log('IfStructure.onChanges.if', this.if);\n\t\tif (Boolean(this.if)) { // !!! keep == loose equality\n\t\t\tif (!element.parentNode) {\n\t\t\t\tconst nodeRef = this.nodeRef!;\n\t\t\t\tnodeRef.parentNode!.insertBefore(element, nodeRef);\n\t\t\t\tmodule.compile(element, parentInstance);\n\t\t\t\t// console.log('IfStructure.onChanges.add', element);\n\t\t\t}\n\t\t} else {\n\t\t\tif (element.parentNode) {\n\t\t\t\tmodule.remove(element, this);\n\t\t\t\telement.parentNode.removeChild(element);\n\t\t\t\tthis.element = this.clonedNode!.cloneNode(true) as IElement;\n\t\t\t\t// console.log('IfStructure.onChanges.remove', element);\n\t\t\t}\n\t\t}\n\t}\n\tstatic meta: IFactoryMeta = {\n\t\tselector: '[*if]',\n\t\tinputs: ['if'],\n\t};\n}\n","import Directive from '../core/directive';\nimport { getContext } from '../core/factory';\nimport { IFactoryMeta } from '../core/types';\n\nexport default class InnerHtmlDirective extends Directive {\n\tset innerHTML(innerHTML: string) {\n\t\tif (this.innerHTML_ !== innerHTML) {\n\t\t\tthis.innerHTML_ = innerHTML;\n\t\t\tconst { node } = getContext(this);\n\t\t\tnode.innerHTML = innerHTML == undefined ? '' : innerHTML; // !!! keep == loose equality\n\t\t}\n\t}\n\tget innerHTML(): string {\n\t\treturn this.innerHTML_;\n\t}\n\tstatic meta: IFactoryMeta = {\n\t\tselector: `[innerHTML]`,\n\t\tinputs: ['innerHTML'],\n\t};\n}\n","import Component from '../core/component';\nimport { IFactoryMeta } from '../core/types';\n\nexport default class JsonComponent extends Component {\n\tactive: boolean = false;\n\tonToggle() {\n\t\tthis.active = !this.active;\n\t\tthis.pushChanges();\n\t}\n\tstatic meta: IFactoryMeta = {\n\t\tselector: 'json-component',\n\t\tinputs: ['item'],\n\t\ttemplate: /* html */`\n\t\t<div class=\"rxc-block\">\n\t\t\t<div class=\"rxc-head\">\n\t\t\t\t<span class=\"rxc-head__title\" (click)=\"onToggle()\">\n\t\t\t\t\t<span *if=\"!active\">+ json </span>\n\t\t\t\t\t<span *if=\"active\">- json </span>\n\t\t\t\t\t<span [innerHTML]=\"item\"></span>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t<ul class=\"rxc-list\" *if=\"active\">\n\t\t\t\t<li class=\"rxc-list__item\">\n\t\t\t\t\t<span class=\"rxc-list__value\" [innerHTML]=\"item | json\"></span>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</div>`,\n\t};\n}\n","import { IPipeMeta } from \"./types\";\n\nexport default class Pipe {\n\tstatic transform(value: any): any {\n\t\treturn value;\n\t}\n\tstatic meta: IPipeMeta;\n}\n","import Component from '../core/component';\nimport Directive from '../core/directive';\nimport Factory from '../core/factory';\nimport Pipe from '../core/pipe';\nimport Structure from '../core/structure';\nimport { FactoryList, IElement, IModuleParsedImportedMeta, IModuleParsedMeta, ISelectorResult, MatchFunction, PipeList, PipeMap, SelectorFunction } from '../core/types';\nimport { ModuleError } from '../error/error';\nimport Module from '../module/module';\n\nconst ORDER: FactoryList = [Structure, Component, Directive];\n\nexport default class Platform {\n\t/**\n\t * @param moduleFactory\n\t * @description This method returns an uncompiled module\n\t */\n\tstatic bootstrap(moduleFactory?: typeof Module): Module {\n\t\tif (!moduleFactory) {\n\t\t\tthrow new ModuleError('missing moduleFactory');\n\t\t}\n\t\tif (!moduleFactory.meta) {\n\t\t\tthrow new ModuleError('missing moduleFactory meta');\n\t\t}\n\t\tif (!moduleFactory.meta.bootstrap) {\n\t\t\tthrow new ModuleError('missing bootstrap');\n\t\t}\n\t\tif (!moduleFactory.meta.bootstrap.meta) {\n\t\t\tthrow new ModuleError('missing bootstrap meta');\n\t\t}\n\t\tif (!moduleFactory.meta.bootstrap.meta.selector) {\n\t\t\tthrow new ModuleError('missing bootstrap meta selector');\n\t\t}\n\t\tconst meta: IModuleParsedMeta = this.resolveMeta(moduleFactory!);\n\t\tconst module: Module = new moduleFactory();\n\t\tmodule.meta = meta;\n\t\tmeta.imports.forEach((moduleFactory: typeof Module) => {\n\t\t\tmoduleFactory.prototype.constructor.call(module);\n\t\t});\n\t\treturn module;\n\t}\n\tprotected static querySelector(selector: string): IElement | null {\n\t\treturn document.querySelector(selector);\n\t}\n\tprotected static resolveMeta(moduleFactory: typeof Module): IModuleParsedMeta {\n\t\tconst meta: IModuleParsedImportedMeta = this.resolveImportedMeta(moduleFactory);\n\t\tconst bootstrap: typeof Factory = moduleFactory.meta.bootstrap!;\n\t\tconst node = this.querySelector(bootstrap.meta.selector!);\n\t\tif (!node) {\n\t\t\tthrow new ModuleError(`missing node ${bootstrap.meta.selector}`);\n\t\t}\n\t\tconst nodeInnerHTML = node.innerHTML;\n\t\tconst pipes = this.resolvePipes(meta);\n\t\tconst factories = this.resolveFactories(meta);\n\t\tthis.sortFactories(factories);\n\t\tfactories.unshift(bootstrap);\n\t\tconst selectors = this.unwrapSelectors(factories);\n\t\treturn { factories, pipes, selectors, bootstrap, node, nodeInnerHTML, imports: moduleFactory.meta.imports || [] };\n\t}\n\tprotected static resolveImportedMeta(moduleFactory: typeof Module): IModuleParsedImportedMeta {\n\t\tconst meta: IModuleParsedImportedMeta = Object.assign({\n\t\t\timports: [],\n\t\t\tdeclarations: [],\n\t\t\tpipes: [],\n\t\t\texports: []\n\t\t}, moduleFactory.meta);\n\t\tmeta.imports = (moduleFactory.meta.imports || []).map(moduleFactory => this.resolveImportedMeta(moduleFactory));\n\t\treturn meta;\n\t}\n\tprotected static resolvePipes(meta: IModuleParsedImportedMeta, exported?: boolean): PipeMap {\n\t\tconst importedPipes: PipeMap[] = meta.imports.map((importMeta: IModuleParsedImportedMeta) => this.resolvePipes(importMeta, true));\n\t\tconst pipes: PipeMap = {};\n\t\tconst pipeList: PipeList = (exported ? meta.exports : meta.declarations).filter((x): x is typeof Pipe => x.prototype instanceof Pipe);\n\t\tpipeList.forEach(pipeFactory => pipes[pipeFactory.meta.name] = pipeFactory);\n\t\treturn Object.assign({}, ...importedPipes, pipes);\n\t}\n\tprotected static resolveFactories(meta: IModuleParsedImportedMeta, exported?: boolean): FactoryList {\n\t\tconst importedFactories: FactoryList[] = meta.imports.map((importMeta: any) => this.resolveFactories(importMeta, true));\n\t\tconst factoryList: FactoryList = (exported ? meta.exports : meta.declarations).filter((x): x is typeof Factory => x.prototype instanceof Factory);\n\t\treturn Array.prototype.concat.call(factoryList, ...importedFactories);\n\t}\n\tprotected static sortFactories(factories: FactoryList): void {\n\t\tfactories.sort((a, b) => {\n\t\t\tconst ai = ORDER.reduce((p, c, i) => a.prototype instanceof c ? i : p, -1);\n\t\t\tconst bi = ORDER.reduce((p, c, i) => b.prototype instanceof c ? i : p, -1);\n\t\t\t// return ai - bi;\n\t\t\tconst o = ai - bi;\n\t\t\tif (o === 0) {\n\t\t\t\treturn (a.meta.hosts ? 1 : 0) - (b.meta.hosts ? 1 : 0);\n\t\t\t}\n\t\t\treturn o;\n\t\t});\n\t}\n\tprotected static getExpressions(selector: string): MatchFunction[] {\n\t\tlet matchers: ((node: HTMLElement) => boolean)[] = [];\n\t\tselector.replace(/\\.([\\w\\-\\_]+)|\\[(.+?\\]*)(\\=)(.*?)\\]|\\[(.+?\\]*)\\]|([\\w\\-\\_]+)/g, function (value: string, c1, a2, u3, v4, a5, e6) {\n\t\t\tif (c1) {\n\t\t\t\t// className\n\t\t\t\tmatchers.push(function (node) {\n\t\t\t\t\treturn node.classList.contains(c1);\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (a2) {\n\t\t\t\tmatchers.push(function (node) {\n\t\t\t\t\treturn (node.hasAttribute(a2) && node.getAttribute(a2) === v4) ||\n\t\t\t\t\t\t(node.hasAttribute(`[${a2}]`) && node.getAttribute(`[${a2}]`) === v4);\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (a5) {\n\t\t\t\t// attribute\n\t\t\t\tmatchers.push(function (node) {\n\t\t\t\t\treturn node.hasAttribute(a5) || node.hasAttribute(`[${a5}]`);\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (e6) {\n\t\t\t\t// nodeName\n\t\t\t\tmatchers.push(function (node) {\n\t\t\t\t\treturn node.nodeName.toLowerCase() === e6.toLowerCase();\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn '';\n\t\t});\n\t\treturn matchers;\n\n\t}\n\tprotected static unwrapSelectors(factories: FactoryList): SelectorFunction[] {\n\t\tconst selectors: SelectorFunction[] = [];\n\t\tfactories.forEach((factory: typeof Factory) => {\n\t\t\tif (factory.meta && factory.meta.selector) {\n\t\t\t\tfactory.meta.selector.split(',').forEach((selector: string) => {\n\t\t\t\t\tselector = selector.trim();\n\t\t\t\t\tlet excludes: MatchFunction[] = [];\n\t\t\t\t\tconst matchSelector = selector.replace(/\\:not\\((.+?)\\)/g, (value, unmatchSelector) => {\n\t\t\t\t\t\texcludes = this.getExpressions(unmatchSelector);\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t});\n\t\t\t\t\tconst includes: MatchFunction[] = this.getExpressions(matchSelector);\n\t\t\t\t\tselectors.push(function(node) {\n\t\t\t\t\t\tconst included = includes.reduce(function(p, match) {\n\t\t\t\t\t\t\treturn p && match(node);\n\t\t\t\t\t\t}, true);\n\t\t\t\t\t\tif (included) {\n\t\t\t\t\t\t\tconst excluded = excludes.length && excludes.reduce(function(p, match) {\n\t\t\t\t\t\t\t\treturn p || match(node);\n\t\t\t\t\t\t\t}, false);\n\t\t\t\t\t\t\tif (!excluded) {\n\t\t\t\t\t\t\t\treturn { node, factory, selector } as ISelectorResult;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\treturn selectors;\n\t}\n}\n/* global window self */\nexport const PLATFORM_BROWSER = typeof window !== 'undefined' && typeof window.document !== 'undefined';\n/* eslint-disable no-undef */\nexport const PLATFORM_JS_DOM = (typeof window !== 'undefined' && window.name === 'nodejs') || (typeof navigator !== 'undefined' && navigator.userAgent.indexOf('Node.js') !== -1) || (typeof navigator !== 'undefined' && navigator.userAgent.indexOf('jsdom') !== -1);\n/* eslint-enable no-undef */\nexport const PLATFORM_NODE = typeof process !== 'undefined' && process.versions != null && process.versions.node != null;\n/* eslint-disable no-restricted-globals */\nexport const PLATFORM_WEB_WORKER = typeof self === 'object' && self.constructor && self.constructor.name === 'DedicatedWorkerGlobalScope';\nexport const isPlatformServer = PLATFORM_NODE;\nexport const isPlatformBrowser = !PLATFORM_NODE && PLATFORM_BROWSER;\nexport const isPlatformWorker = PLATFORM_WEB_WORKER;\n","import { isPlatformBrowser } from \"../../platform\";\n\n/**\n * @example Serializer.encode(value, [encodeJson, encodeUriComponent, encodeBase64]);\n * @example Serializer.decode(value, [decodeBase64, decodeUriComponent, decodeJson]);\n */\nexport default class Serializer {\n\tstatic encode<T>(value: any, encoders: ((from: any) => any)[]): T;\n\tstatic encode(value: any, encoders: ((from: any) => any)[] = [encodeJson]): any {\n\t\treturn encoders.reduce((p, c) => c(p), value);\n\t}\n\n\tstatic decode<T>(value: any, decoders: ((from: any) => any)[]): T;\n\tstatic decode(value: any, decoders: ((from: any) => any)[] = [decodeJson]): any {\n\t\treturn decoders.reduce((p, c) => c(p), value);\n\t}\n\n\tstatic encodeJson<T>(value: any): T;\n\tstatic encodeJson(value: any): any {\n\t\treturn this.encode(value, [encodeJson]);\n\t}\n\n\tstatic decodeJson<T>(value: any): T;\n\tstatic decodeJson(value: any): any {\n\t\treturn this.decode(value, [decodeJson]);\n\t}\n\n\tstatic encodeBase64<T>(value: any): T;\n\tstatic encodeBase64(value: any): any {\n\t\treturn this.encode(value, [encodeJson, encodeBase64]);\n\t}\n\n\tstatic decodeBase64<T>(value: any): T;\n\tstatic decodeBase64(value: any): any {\n\t\treturn this.decode(value, [decodeBase64, decodeJson]);\n\t}\n}\nexport function encodeJson(value: any, circularRef?: any, space?: string | number): string {\n\tlet decoded: any;\n\ttry {\n\t\t// const pool: Map<any, boolean> = new Map();\n\t\tconst pool: any[] = [];\n\t\tconst json: string = JSON.stringify(value, function (key, value) {\n\t\t\tif (typeof value === 'object' && value != null) {\n\t\t\t\t// if (pool.has(value)) {\n\t\t\t\tif (pool.indexOf(value) !== -1) {\n\t\t\t\t\t// console.warn(`Serializer.encodeJson.error`, `circular reference found, discard key \"${key}\"`);\n\t\t\t\t\treturn circularRef;\n\t\t\t\t}\n\t\t\t\tpool.push(value);\n\t\t\t\t// pool.set(value, true);\n\t\t\t}\n\t\t\treturn value;\n\t\t}, space);\n\t\tdecoded = json;\n\t} catch (error) {\n\t\t// console.warn(`Serializer.encodeJson.error`, value, error);\n\t}\n\treturn decoded;\n}\nexport function encodeJsonWithOptions(circularRef?: any, space?: string | number): (value: any) => string {\n\treturn (value: any) => encodeJson(value, circularRef, space);\n}\nexport function decodeJson(value: string): any {\n\tlet decoded: any;\n\tif (value) {\n\t\ttry {\n\t\t\tdecoded = JSON.parse(value);\n\t\t} catch (error) {\n\t\t\t// console.warn(`Serializer.decodeJson.error`, value, error);\n\t\t}\n\t}\n\treturn decoded;\n}\nexport function encodeBase64(value: string): string {\n\tlet encoded: string;\n\ttry {\n\t\tencoded = isPlatformBrowser ? btoa(value) : Buffer.from(value).toString('base64');\n\t} catch (error) {\n\t\tencoded = value;\n\t}\n\treturn encoded;\n}\nexport function decodeBase64(value: string): string {\n\tlet decoded: string;\n\ttry {\n\t\tdecoded = isPlatformBrowser ? atob(value) : Buffer.from(value, 'base64').toString();\n\t} catch (error) {\n\t\tdecoded = value;\n\t}\n\treturn decoded;\n}\n","import Pipe from '../core/pipe';\nimport { IPipeMeta } from '../core/types';\nimport Serializer, { encodeJsonWithOptions } from '../platform/common/serializer/serializer';\n\nexport default class JsonPipe extends Pipe {\n\tstatic transform(value: any): string | undefined {\n\t\treturn Serializer.encode(value, [encodeJsonWithOptions('#ref', 2)]);\n\t}\n\tstatic meta: IPipeMeta = {\n\t\tname: 'json',\n\t};\n}\n","import { Observable, Subject } from 'rxjs';\nimport { takeUntil, tap } from 'rxjs/operators';\nimport Component from '../core/component';\nimport Context from '../core/context';\nimport Factory, { CONTEXT_MAP, EXPRESSION_MAP, getContext, NODE_MAP } from '../core/factory';\nimport Structure from '../core/structure';\nimport { ExpressionFunction, IContext, IElement, IFactoryMeta, IModuleMeta, IModuleParsedMeta, ISelectorResult, IText } from '../core/types';\nimport { ExpressionError, nextError$ } from '../error/error';\n\nexport default class Module {\n\tmeta!: IModuleParsedMeta; // !!!\n\tinstances?: Factory[];\n\tunsubscribe$: Subject<void> = new Subject();\n\tstatic forRoot?: (...args: any[]) => typeof Module;\n\tpublic compile(node: IElement, parentInstance: Factory | Window, instances: Factory[] = []): Factory[] {\n\t\tif (node.nodeType === 1) {\n\t\t\tconst selectors = this.meta.selectors;\n\t\t\tconst matches: ISelectorResult[] = [];\n\t\t\t// const childNodes: NodeListOf<ChildNode> = node.childNodes;\n\t\t\t// copying array to avoid multiple compilation\n\t\t\tconst childNodes: Array<ChildNode> = Array.prototype.slice.call(node.childNodes);\n\t\t\t// const foundStructure : boolean = Module.matchSelectors(node as HTMLElement, selectors, matches);\n\t\t\tlet foundStructure = false;\n\t\t\tfor (let i: number = 0, len: number = selectors.length; i < len; i++) {\n\t\t\t\tconst selectorResult: ISelectorResult | false = selectors[i](node);\n\t\t\t\tif (selectorResult) { // !== false\n\t\t\t\t\t// match found\n\t\t\t\t\tmatches.push(selectorResult as ISelectorResult);\n\t\t\t\t\tconst factory: typeof Factory = selectorResult.factory;\n\t\t\t\t\t// structure found\n\t\t\t\t\tif (factory.prototype instanceof Structure) {\n\t\t\t\t\t\tfoundStructure = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t// injecting template\n\t\t\t\t\tif (factory.prototype instanceof Component && factory.meta.template) {\n\t\t\t\t\t\tnode.innerHTML = factory.meta.template;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet nextParentInstance = parentInstance;\n\t\t\tfor (let i: number = 0, len: number = matches.length; i < len; i++) {\n\t\t\t\tconst match: ISelectorResult = matches[i];\n\t\t\t\t// console.log('makeInstance', parentInstance.constructor.name, match.factory.name);\n\t\t\t\t// make instance\n\t\t\t\tconst instance: Factory | undefined = this.makeInstance(match.node, match.factory, match.selector, parentInstance);\n\t\t\t\tif (instance) {\n\t\t\t\t\tinstances.push(instance);\n\t\t\t\t\t// updating parentInstance\n\t\t\t\t\tif (match.factory.prototype instanceof Component) {\n\t\t\t\t\t\tnextParentInstance = instance;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t/*\n\t\t\tmatches.forEach((match: ISelectorResult) => {\n\t\t\t\t// console.log('makeInstance', parentInstance.constructor.name, match.factory.name);\n\t\t\t\t// make instance\n\t\t\t\tconst instance: Factory | undefined = this.makeInstance(match.node, match.factory, match.selector, parentInstance);\n\t\t\t\tif (instance) {\n\t\t\t\t\tinstances.push(instance);\n\t\t\t\t\t// updating parentInstance\n\t\t\t\t\tif (match.factory.prototype instanceof Component) {\n\t\t\t\t\t\tnextParentInstance = instance;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\t*/\n\t\t\tif (!foundStructure) {\n\t\t\t\t// compiling childNodes\n\t\t\t\tfor (let i: number = 0, len: number = childNodes.length; i < len; i++) {\n\t\t\t\t\tthis.compile(childNodes[i] as IElement, nextParentInstance, instances);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn instances;\n\t}\n\tpublic makeInstance(node: IElement, factory: typeof Factory, selector: string, parentInstance: Factory | Window, args?: any[], inject?: { [key: string]: any }): Factory {\n\t\tconst meta: IFactoryMeta = factory.meta;\n\t\t// creating factory instance\n\t\tconst instance = new factory(...(args || []));\n\t\t// console.log(instance.constructor.name, parentInstance.constructor.name);\n\t\t// injecting custom properties\n\t\tif (inject != null) {\n\t\t\tfor (let i:number = 0, keys = Object.keys(inject), len = keys.length; i < len; i++) {\n\t\t\t\tconst key = keys[i];\n\t\t\t\tObject.defineProperty(instance, key, {\n\t\t\t\t\tvalue: inject[key],\n\t\t\t\t\tconfigurable: false,\n\t\t\t\t\tenumerable: false,\n\t\t\t\t\twritable: true,\n\t\t\t\t});\n\t\t\t}\n\t\t\t/*\n\t\t\tObject.keys(inject).forEach((key: string) => {\n\t\t\t\t// console.log('Module.makeInstance', key, inject[key]);\n\t\t\t\tObject.defineProperty(instance, key, {\n\t\t\t\t\tvalue: inject[key],\n\t\t\t\t\tconfigurable: false,\n\t\t\t\t\tenumerable: false,\n\t\t\t\t\twritable: true,\n\t\t\t\t});\n\t\t\t});\n\t\t\t*/\n\t\t}\n\t\t// creating instance context\n\t\tconst context = Module.makeContext(this, instance, parentInstance, node, factory, selector);\n\t\t// creating component input and outputs\n\t\tif (instance instanceof Context) {\n\t\t\t// skipping hosts, inputs & outputs\n\t\t} else {\n\t\t\tthis.makeHosts(meta, instance, node);\n\t\t\tcontext.inputs = this.makeInputs(meta, node, factory);\n\t\t\tcontext.outputs = this.makeOutputs(meta, instance);\n\t\t\t// if (parentInstance instanceof Factory) {\n\t\t\tthis.resolveInputsOutputs(instance, parentInstance);\n\t\t\t// }\n\t\t}\n\t\t// calling onInit event\n\t\tinstance.onInit();\n\t\t// subscribe to parent changes\n\t\tif (parentInstance instanceof Factory) {\n\t\t\tconst { childInstances } = getContext(parentInstance);\n\t\t\tchildInstances.push(instance);\n\t\t\tinstance.onParentDidChange(parentInstance);\n\t\t\t/*\n\t\t\tparentInstance.changes$.pipe(\n\t\t\t\t// distinctUntilChanged(deepEqual),\n\t\t\t\tstartWith(parentInstance),\n\t\t\t\ttakeUntil(instance.unsubscribe$)\n\t\t\t).subscribe(function (changes: Factory | Window) {\n\t\t\t\tinstance.onParentDidChange(changes);\n\t\t\t});\n\t\t\t*/\n\t\t}\n\t\treturn instance;\n\t}\n\tpublic makeFunction(expression: string, params: string[] = ['$instance']): ExpressionFunction {\n\t\tconst name = expression + '_' + params.join(',');\n\t\tconst cachedExpressionFunction = EXPRESSION_MAP.get(name);\n\t\tif (cachedExpressionFunction) {\n\t\t\treturn cachedExpressionFunction;\n\t\t} else {\n\t\t\t(this.meta as any).context = Context; // !!!\n\t\t\texpression = Module.parseExpression(expression);\n\t\t\tconst text: string = `\n\t\t\treturn (function (${params.join(',')}, $$module) {\n\t\t\t\tvar $$pipes = $$module.meta.pipes;\n\t\t\t\ttry {\n\t\t\t\t\tif (this.parentInstance) {\n\t\t\t\t\t\twith(this.parentInstance) {\n\t\t\t\t\t\t\twith(this) {\n\t\t\t\t\t\t\t\treturn ${expression};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\twith(this) {\n\t\t\t\t\t\t\treturn ${expression};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} catch(error) {\n\t\t\t\t\t$$module.nextError(error, this, ${JSON.stringify(expression)}, arguments);\n\t\t\t\t}\n\t\t\t}.bind(this)).apply(this, arguments);`;\n\t\t\t/*\n\t\t\tconst text: string = `\n\t\t\treturn (function (${params.join(',')}, $$module) {\n\t\t\t\tvar $$pipes = $$module.meta.pipes;\n\t\t\t\treturn ${expression};\n\t\t\t}.bind(this)).apply(this, arguments);`;\n\t\t\t*/\n\t\t\t/*\n\t\t\tconst text: string = `\n\t\t\treturn (function (${params.join(',')}, $$module) {\n\t\t\t\tvar $$pipes = $$module.meta.pipes;\n\t\t\t\ttry {\n\t\t\t\t\twith(this) {\n\t\t\t\t\t\treturn ${expression};\n\t\t\t\t\t}\n\t\t\t\t} catch(error) {\n\t\t\t\t\t$$module.nextError(error, this, ${JSON.stringify(expression)}, arguments);\n\t\t\t\t}\n\t\t\t}.bind(this)).apply(this, arguments);`;\n\t\t\t*/\n\t\t\tconst expressionFunction = new Function(text) as ExpressionFunction;\n\t\t\t(expressionFunction as any).expression = expression;\n\t\t\tEXPRESSION_MAP.set(name, expressionFunction);\n\t\t\treturn expressionFunction;\n\t\t}\n\t}\n\tpublic resolveInputsOutputs(instance: Factory, changes: Factory | Window): void {\n\t\tconst context: IContext = getContext(instance);\n\t\tconst parentInstance: Factory | Window = context.parentInstance;\n\t\tconst inputs: { [key: string]: ExpressionFunction } = context.inputs!;\n\t\tfor (let i:number = 0, keys = Object.keys(inputs), len = keys.length; i < len; i++) {\n\t\t\tconst key = keys[i];\n\t\t\tconst expression: ExpressionFunction = inputs[key];\n\t\t\tconst value: any = this.resolve(expression, parentInstance, instance);\n\t\t\tinstance[key] = value;\n\t\t}\n\t\t/*\n\t\tObject.keys(inputs).forEach(key => {\n\t\t\tconst expression: ExpressionFunction = inputs[key];\n\t\t\tconst value: any = this.resolve(expression, parentInstance, instance);\n\t\t\tinstance[key] = value;\n\t\t});\n\t\t*/\n\t}\n\tpublic getInputAttributeExpression(key: string, node: IElement): string | null {\n\t\tlet expression: string | null = null;\n\t\tif (node.hasAttribute(`[${key}]`)) {\n\t\t\texpression = node.getAttribute(`[${key}]`);\n\t\t\t// console.log('Module.getInputAttributeExpression.expression.1', expression);\n\t\t} else if (node.hasAttribute(`*${key}`)) {\n\t\t\texpression = node.getAttribute(`*${key}`);\n\t\t\t// console.log('Module.getInputAttributeExpression.expression.2', expression);\n\t\t} else if (node.hasAttribute(key)) {\n\t\t\texpression = node.getAttribute(key);\n\t\t\tif (expression) {\n\t\t\t\tconst attribute: string = expression.replace(/({{)|(}})|(\")/g, function (substring: string, a, b, c) {\n\t\t\t\t\tif (a) {\n\t\t\t\t\t\treturn '\"+';\n\t\t\t\t\t}\n\t\t\t\t\tif (b) {\n\t\t\t\t\t\treturn '+\"';\n\t\t\t\t\t}\n\t\t\t\t\tif (c) {\n\t\t\t\t\t\treturn '\\\"';\n\t\t\t\t\t}\n\t\t\t\t\treturn '';\n\t\t\t\t});\n\t\t\t\texpression = `\"${attribute}\"`;\n\t\t\t\t// console.log('Module.getInputAttributeExpression.expression.3', expression);\n\t\t\t}\n\t\t}\n\t\t// console.log('Module.getInputAttributeExpression.expression', expression);\n\t\treturn expression;\n\t}\n\tpublic resolve(expression: ExpressionFunction, parentInstance: Factory | Window, payload: any): any {\n\t\t// console.log('Module.resolve', expression, parentInstance, payload, getContext);\n\t\treturn expression.apply(parentInstance, [payload, this]);\n\t}\n\tpublic parse(node: HTMLElement, instance: Factory): void {\n\t\tfor (let i: number = 0, len: number = node.childNodes.length; i < len; i++) {\n\t\t\tconst child: ChildNode = node.childNodes[i];\n\t\t\tif (child.nodeType === 1) {\n\t\t\t\tconst element: HTMLElement = child as HTMLElement;\n\t\t\t\tconst context: IContext | undefined = getParsableContextByElement(element);\n\t\t\t\tif (!context) {\n\t\t\t\t\tthis.parse(element, instance);\n\t\t\t\t}\n\t\t\t} else if (child.nodeType === 3) {\n\t\t\t\tconst text: IText = child as IText;\n\t\t\t\tthis.parseTextNode(text, instance);\n\t\t\t}\n\t\t}\n\t}\n\tpublic remove(node: Node, keepInstance?: Factory): Node {\n\t\tconst keepContext: IContext | undefined = keepInstance ? getContext(keepInstance) : undefined;\n\t\tModule.traverseDown(node, (node: Node) => {\n\t\t\tModule.deleteContext(node as IElement, keepContext);\n\t\t});\n\t\treturn node;\n\t}\n\tpublic destroy(): void {\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t\tthis.remove(this.meta.node);\n\t\tthis.meta.node.innerHTML = this.meta.nodeInnerHTML;\n\t}\n\tpublic nextError(error: Error, instance: Factory, expression: string, params: any[]): void {\n\t\tconst expressionError: ExpressionError = new ExpressionError(error, this, instance, expression, params);\n\t\tnextError$.next(expressionError);\n\t}\n\tprotected makeContext(instance: Factory, parentInstance: Factory | Window, node: IElement, selector: string): IContext {\n\t\tconst context: IContext = Module.makeContext(this, instance, parentInstance, node, instance.constructor as typeof Factory, selector);\n\t\t// console.log('Module.makeContext', context, context.instance, context.node);\n\t\treturn context;\n\t}\n\tprotected makeHosts(meta: IFactoryMeta, instance: Factory, node: IElement): void {\n\t\tif (meta.hosts) {\n\t\t\tfor (let i:number = 0, keys = Object.keys(meta.hosts), len = keys.length; i < len; i++) {\n\t\t\t\tconst key = keys[i];\n\t\t\t\tconst factory: typeof Factory = meta.hosts![key];\n\t\t\t\tinstance[key] = getHost(instance, factory, node);\n\t\t\t}\n\t\t\t/*\n\t\t\tObject.keys(meta.hosts).forEach((key: string) => {\n\t\t\t\tconst factory: typeof Factory = meta.hosts![key];\n\t\t\t\tinstance[key] = getHost(instance, factory, node);\n\t\t\t});\n\t\t\t*/\n\t\t}\n\t}\n\tprotected makeInputs(meta: IFactoryMeta, node: IElement, factory: typeof Factory): { [key: string]: ExpressionFunction } {\n\t\tconst inputs: { [key: string]: ExpressionFunction } = {};\n\t\tif (meta.inputs) {\n\t\t\tfor (let i: number = 0, len: number = meta.inputs.length; i < len; i++) {\n\t\t\t\tconst key:string = meta.inputs[i];\n\t\t\t\tlet expression: string | null = this.getInputAttributeExpression(key, node);\n\t\t\t\tif (expression) {\n\t\t\t\t\texpression = factory.mapExpression(key, expression);\n\t\t\t\t\tinputs[key] = this.makeFunction(expression);\n\t\t\t\t}\n\t\t\t}\n\t\t\t/*\n\t\t\tmeta.inputs.forEach(key => {\n\t\t\t\tlet expression: string | null = this.getInputAttributeExpression(key, node);\n\t\t\t\tif (expression) {\n\t\t\t\t\texpression = factory.mapExpression(key, expression);\n\t\t\t\t\tinputs[key] = this.makeFunction(expression);\n\t\t\t\t}\n\t\t\t});\n\t\t\t*/\n\t\t}\n\t\treturn inputs;\n\t}\n\tprotected makeOutput(instance: Factory, key: string): Observable<any> {\n\t\tconst context: IContext = getContext(instance);\n\t\tconst node: IElement = context.node;\n\t\tconst parentInstance: Factory | Window = context.parentInstance;\n\t\tconst expression: string | null = node.getAttribute(`(${key})`);\n\t\tconst outputExpression: ExpressionFunction | null = expression ? this.makeFunction(expression, ['$event']) : null;\n\t\tconst output$: Observable<any> = new Subject<any>().pipe(\n\t\t\ttap((event) => {\n\t\t\t\tif (outputExpression) {\n\t\t\t\t\t// console.log(expression, parentInstance);\n\t\t\t\t\tthis.resolve(outputExpression, parentInstance, event);\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t\toutput$.pipe(\n\t\t\ttakeUntil(instance.unsubscribe$)\n\t\t).subscribe();\n\t\tinstance[key] = output$;\n\t\treturn output$;\n\t}\n\tprotected makeOutputs(meta: IFactoryMeta, instance: Factory): { [key: string]: Observable<any> } {\n\t\tconst outputs: { [key: string]: Observable<any> } = {};\n\t\tif (meta.outputs) {\n\t\t\tmeta.outputs.forEach((key: string) => {\n\t\t\t\tconst output = this.makeOutput(instance, key);\n\t\t\t\tif (output) {\n\t\t\t\t\toutputs[key] = output;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn outputs;\n\t}\n\tprotected parseTextNode(node: IText, instance: Factory): void {\n\t\tlet expressions: (ExpressionFunction | string)[] | undefined = node.nodeExpressions;\n\t\tif (!expressions) {\n\t\t\texpressions = this.parseTextNodeExpression(node.wholeText);\n\t\t}\n\t\tif (expressions.length) {\n\t\t\tconst replacedText: string = expressions.reduce((p: string, c: ExpressionFunction | string) => {\n\t\t\t\tlet text: string;\n\t\t\t\tif (typeof c === 'function') { // instanceOf ExpressionFunction ?;\n\t\t\t\t\t// console.log('Module.parseTextNode', c, instance);\n\t\t\t\t\ttext = this.resolve(c as ExpressionFunction, instance, instance);\n\t\t\t\t\tif (text == undefined) { // !!! keep == loose equality\n\t\t\t\t\t\ttext = '';\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\ttext = c;\n\t\t\t\t}\n\t\t\t\treturn p + text;\n\t\t\t}, '');\n\t\t\tif (node.nodeValue !== replacedText) {\n\t\t\t\tconst textNode: IText = document.createTextNode(replacedText) as IText;\n\t\t\t\ttextNode.nodeExpressions = expressions;\n\t\t\t\tnode.parentNode!.replaceChild(textNode, node);\n\t\t\t}\n\t\t} else {\n\t\t\tnode.nodeExpressions = expressions;\n\t\t}\n\t}\n\tprotected pushFragment(nodeValue: string, from: number, to: number, expressions: (ExpressionFunction | string)[]): void {\n\t\tconst fragment: string = nodeValue.substring(from, to);\n\t\texpressions.push(fragment);\n\t}\n\tprotected parseTextNodeExpression(nodeValue: string): (ExpressionFunction | string)[] {\n\t\tconst expressions: (ExpressionFunction | string)[] = [];\n\t\tconst regex: RegExp = /\\{{2}((([^{}])|(\\{([^{}]|(\\{.*?\\}))+?\\}))*?)\\}{2}/g;\n\t\tlet lastIndex: number = 0,\n\t\t\tmatches: RegExpExecArray | null;\n\t\twhile ((matches = regex.exec(nodeValue)) !== null) {\n\t\t\tconst index: number = regex.lastIndex - matches[0].length;\n\t\t\tif (index > lastIndex) {\n\t\t\t\tthis.pushFragment(nodeValue, index, lastIndex, expressions);\n\t\t\t}\n\t\t\tlastIndex = regex.lastIndex;\n\t\t\tif (matches[1]) {\n\t\t\t\tconst expression: ExpressionFunction = this.makeFunction(matches[1]);\n\t\t\t\texpressions.push(expression);\n\t\t\t}\n\t\t}\n\t\t// console.log('Module.parseTextNodeExpression', regex.source, expressions, nodeValue);\n\t\tconst length: number = nodeValue.length;\n\t\tif (length > lastIndex) {\n\t\t\tthis.pushFragment(nodeValue, lastIndex, length, expressions);\n\t\t}\n\t\tif (expressions.find(x => typeof x === 'function')) {\n\t\t\treturn expressions;\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\tprotected static makeContext(module: Module, instance: Factory, parentInstance: Factory | Window, node: IElement, factory: typeof Factory, selector: string): IContext {\n\t\tconst context: IContext = { module, instance, parentInstance, childInstances: [], node, factory, selector };\n\t\tlet nodeContexts = NODE_MAP.get(node);\n\t\tif (!nodeContexts) {\n\t\t\tnodeContexts = [];\n\t\t\tNODE_MAP.set(node, nodeContexts);\n\t\t}\n\t\tnodeContexts.push(context);\n\t\tCONTEXT_MAP.set(instance, context);\n\t\treturn context;\n\t}\n\n\n\tprotected static parseExpression(expression:string):string {\n\t\texpression = Module.parseGroup(expression);\n\t\texpression = Module.parseOptionalChaining(expression);\n\t\t// expression = Module.parseThis(expression);\n\t\treturn expression;\n\t}\n\tprotected static parseGroup(expression:string):string {\n\t\tconst l = '┌';\n\t\tconst r = '┘';\n\t\tconst rx1 = /(\\()([^\\(\\)]*)(\\))/;\n\t\twhile (rx1.test(expression)) {\n\t\t\texpression = expression.replace(rx1, function (m, ...args) {\n\t\t\t\treturn `${l}${Module.parsePipes(args[1])}${r}`;\n\t\t\t});\n\t\t}\n\t\texpression = Module.parsePipes(expression);\n\t\tconst rx2 = /(┌)|(┘)/g;\n\t\texpression = expression.replace(rx2, function (m, ...args) {\n\t\t\treturn args[0] ? '(' : ')';\n\t\t});\n\t\treturn expression;\n\t}\n\tprotected static parsePipes(expression:string):string {\n\t\tconst rx = /(.*?[^\\|])\\|\\s*(\\w+)\\s*([^\\|]+)/;\n\t\twhile (rx.test(expression)) {\n\t\t\texpression = expression.replace(rx, function(m,value,name,expression) {\n\t\t\t\tconst params = Module.parsePipeParams(expression);\n\t\t\t\treturn `$$pipes.${name}.transform(${[value, ...params]})`;\n\t\t\t});\n\t\t}\n\t\treturn expression;\n\t}\n\tprotected static parsePipeParams(expression:string):string[] {\n\t\tconst params = [];\n\t\t// const rx = /:\\s*(\\[.+\\]|\\{.+\\}|\\(.+\\)|\\'.+\\'|[^:\\s]+)/g;\n\t\tconst rx = /:\\s*(\\{.+\\}|\\(.+\\)|[^:]+)/g;\n\t\tlet match;\n\t\twhile(match = rx.exec(expression)) {\n\t\t\tparams.push(match[1]);\n\t\t}\n\t\treturn params;\n\t}\n\tprotected static parseOptionalChaining(expression:string):string {\n\t\tconst rx = /([\\w|\\.]+)(?:\\?\\.)+([\\.|\\w]+)/;\n\t\twhile (rx.test(expression)) {\n\t\t\texpression = expression.replace(rx, function(m,a,b) {\n\t\t\t\treturn `${a} && ${a}.${b}`;\n\t\t\t});\n\t\t}\n\t\treturn expression;\n\t}\n\tprotected static parseThis(expression:string):string {\n\t\tconst rx = /(\\'.+\\'|\\[.+\\]|\\{.+\\}|\\$\\$pipes)|([^\\w.])([^\\W\\d])|^([^\\W\\d])/g;\n\t\texpression = expression.replace(rx, function(m,g1,g2,g3,g4) {\n\t\t\tif (g4) {\n\t\t\t\treturn `this.${g4}`;\n\t\t\t} else if(g3) {\n\t\t\t\treturn `${g2}this.${g3}`;\n\t\t\t} else {\n\t\t\t\treturn g1;\n\t\t\t}\n\t\t});\n\t\treturn expression;\n\t}\n\n\t/*\n\tprotected static parseExpression__(expression: string): string {\n\t\texpression = Module.parseGroup__(expression);\n\t\treturn Module.parseOptionalChaining__(expression);\n\t}\n\tprotected static parseGroup__(expression: string): string {\n\t\tconst l: string = '┌';\n\t\tconst r: string = '┘';\n\t\tconst rx1: RegExp = /(\\()([^\\(\\)]*)(\\))/;\n\t\twhile (expression.match(rx1)) {\n\t\t\texpression = expression.replace(rx1, function (substring: string, ...args: any[]) {\n\t\t\t\treturn `${l}${Module.parsePipes__(args[1])}${r}`;\n\t\t\t});\n\t\t}\n\t\texpression = Module.parsePipes__(expression);\n\t\texpression = expression.replace(/(┌)|(┘)/g, function (substring: string, ...args) {\n\t\t\treturn args[0] ? '(' : ')';\n\t\t});\n\t\treturn expression;\n\t}\n\tprotected static parsePipes__(expression: string): string {\n\t\tconst l: string = '┌';\n\t\tconst r: string = '┘';\n\t\tconst rx1: RegExp = /(.*?[^\\|])\\|([^\\|]+)/;\n\t\twhile (expression.match(rx1)) {\n\t\t\texpression = expression.replace(rx1, function (substring: string, ...args: any[]) {\n\t\t\t\tconst value: string = args[0].trim();\n\t\t\t\tconst params: string[] = Module.parsePipeParams__(args[1]);\n\t\t\t\tconst func: string = params.shift()!.trim();\n\t\t\t\treturn `$$pipes.${func}.transform${l}${[value, ...params]}${r}`;\n\t\t\t});\n\t\t}\n\t\treturn expression;\n\t}\n\tprotected static parsePipeParams__(expression: string): string[] {\n\t\tconst segments: string[] = [];\n\t\tlet i: number = 0,\n\t\t\tword: string = '',\n\t\t\tblock: number = 0;\n\t\tconst t: number = expression.length;\n\t\twhile (i < t) {\n\t\t\tconst c: string = expression.substr(i, 1);\n\t\t\tif (c === '{' || c === '(' || c === '[') {\n\t\t\t\tblock++;\n\t\t\t}\n\t\t\tif (c === '}' || c === ')' || c === ']') {\n\t\t\t\tblock--;\n\t\t\t}\n\t\t\tif (c === ':' && block === 0) {\n\t\t\t\tif (word.length) {\n\t\t\t\t\tsegments.push(word.trim());\n\t\t\t\t}\n\t\t\t\tword = '';\n\t\t\t} else {\n\t\t\t\tword += c;\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\t\tif (word.length) {\n\t\t\tsegments.push(word.trim());\n\t\t}\n\t\treturn segments;\n\t}\n\tprotected static parseOptionalChaining__(expression: string): string {\n\t\tconst regex: RegExp = /(\\w+(\\?\\.))+([\\.|\\w]+)/g;\n\t\tlet previous: string;\n\t\texpression = expression.replace(regex, function (substring: string, ...args: any[]) {\n\t\t\tconst tokens: string[] = substring.split('?.');\n\t\t\tfor (let i: number = 0, len: number = tokens.length - 1; i < len; i++) {\n\t\t\t\tconst a: string = i > 0 ? `(${tokens[i]} = ${previous})` : tokens[i];\n\t\t\t\tconst b: string = tokens[i + 1];\n\t\t\t\tprevious = i > 0 ? `${a}.${b}` : `(${a} ? ${a}.${b} : void 0)`;\n\t\t\t}\n\t\t\treturn previous || '';\n\t\t});\n\t\treturn expression;\n\t}\n\t*/\n\n\tprotected static deleteContext(node: IElement, keepContext: IContext | undefined): IContext[] {\n\t\tconst keepContexts: IContext[] = [];\n\t\tconst nodeContexts: IContext[] | undefined = NODE_MAP.get(node);\n\t\tif (nodeContexts) {\n\t\t\tnodeContexts.forEach((context: IContext) => {\n\t\t\t\tif (context === keepContext) {\n\t\t\t\t\tkeepContexts.push(keepContext);\n\t\t\t\t} else {\n\t\t\t\t\tconst instance: Factory = context.instance;\n\t\t\t\t\t// !!!\n\t\t\t\t\tconst parentInstance: Factory | Window = context.parentInstance;\n\t\t\t\t\tif (parentInstance instanceof Factory) {\n\t\t\t\t\t\tconst parentContext:IContext = getContext(parentInstance);\n\t\t\t\t\t\tif (parentContext) {\n\t\t\t\t\t\t\tconst i = parentContext.childInstances.indexOf(instance);\n\t\t\t\t\t\t\tif (i !== -1) {\n\t\t\t\t\t\t\t\tparentContext.childInstances.splice(i, 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// !!!\n\t\t\t\t\tinstance.unsubscribe$.next();\n\t\t\t\t\tinstance.unsubscribe$.complete();\n\t\t\t\t\tinstance.onDestroy();\n\t\t\t\t\tCONTEXT_MAP.delete(instance);\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (keepContexts.length) {\n\t\t\t\tNODE_MAP.set(node, keepContexts);\n\t\t\t} else {\n\t\t\t\tNODE_MAP.delete(node);\n\t\t\t}\n\t\t}\n\t\treturn keepContexts;\n\t}\n\tprotected static traverseUp(node: Node | null, callback: (node: Node, i: number) => any, i: number = 0): any {\n\t\tif (!node) {\n\t\t\treturn;\n\t\t}\n\t\tconst result = callback(node, i);\n\t\tif (result) {\n\t\t\treturn result;\n\t\t}\n\t\treturn this.traverseUp(node.parentNode, callback, i + 1);\n\t}\n\tprotected static traverseDown(node: Node | null, callback: (node: Node, i: number) => any, i: number = 0): any {\n\t\tif (!node) {\n\t\t\treturn;\n\t\t}\n\t\tlet result = callback(node, i);\n\t\tif (result) {\n\t\t\treturn result;\n\t\t}\n\t\tif (node.nodeType === 1) {\n\t\t\tlet j = 0,\n\t\t\t\tt = node.childNodes.length;\n\t\t\twhile (j < t && !result) {\n\t\t\t\tresult = this.traverseDown(node.childNodes[j], callback, i + 1);\n\t\t\t\tj++;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\tprotected static traversePrevious(node: Node | null, callback: (node: Node, i: number) => any, i: number = 0): any {\n\t\tif (!node) {\n\t\t\treturn;\n\t\t}\n\t\tconst result = callback(node, i);\n\t\tif (result) {\n\t\t\treturn result;\n\t\t}\n\t\treturn this.traversePrevious(node.previousSibling, callback, i + 1);\n\t}\n\tprotected static traverseNext(node: Node | null, callback: (node: Node, i: number) => any, i: number = 0): any {\n\t\tif (!node) {\n\t\t\treturn;\n\t\t}\n\t\tconst result = callback(node, i);\n\t\tif (result) {\n\t\t\treturn result;\n\t\t}\n\t\treturn this.traverseNext(node.nextSibling, callback, i + 1);\n\t}\n\t/*\n\tprotected static matchSelectors(node: HTMLElement, selectors: SelectorFunction[], results: ISelectorResult[]): boolean {\n\t\tlet foundStructure = false;\n\t\tfor (let i: number = 0, len:number = selectors.length; i < len; i++) {\n\t\t\tconst selectorResult: ISelectorResult | false = selectors[i](node);\n\t\t\tif (selectorResult) { // !== false\n\t\t\t\tresults.push(selectorResult as ISelectorResult);\n\t\t\t\tconst factory: typeof Factory = selectorResult.factory;\n\t\t\t\tif (factory.prototype instanceof Structure) {\n\t\t\t\t\tfoundStructure = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (factory.prototype instanceof Component && factory.meta.template) {\n\t\t\t\t\tnode.innerHTML = factory.meta.template;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn foundStructure;\n\t}\n\t*/\n\tstatic meta: IModuleMeta;\n}\nexport function getParsableContextByElement(element: HTMLElement): IContext | undefined {\n\tlet context: IContext | undefined;\n\tconst contexts: IContext[] | undefined = NODE_MAP.get(element);\n\tif (contexts) {\n\t\tcontext = contexts.reduce((previous: IContext | undefined, current: IContext) => {\n\t\t\tif (current.instance instanceof Context) {\n\t\t\t\treturn previous ? previous : current;\n\t\t\t} else if (current.instance instanceof Component) {\n\t\t\t\treturn current;\n\t\t\t} else {\n\t\t\t\treturn previous;\n\t\t\t}\n\t\t}, undefined);\n\t}\n\t// context = contexts ? contexts.find(x => x.instance instanceof Component) : undefined;\n\treturn context;\n}\nexport function getContextByNode(element: HTMLElement): IContext | undefined {\n\tlet context: IContext | undefined = getParsableContextByElement(element);\n\tif (context && context.factory.prototype instanceof Structure) {\n\t\treturn undefined;\n\t}\n\treturn context;\n}\nexport function getHost(instance: Factory, factory: typeof Factory, node: IElement): Factory | undefined {\n\tif (!node) {\n\t\tnode = getContext(instance).node;\n\t}\n\tconst nodeContexts: IContext[] | undefined = NODE_MAP.get(node);\n\tif (nodeContexts) {\n\t\t// console.log(nodeContexts);\n\t\tfor (let i: number = 0, len: number = nodeContexts.length; i < len; i++) {\n\t\t\tconst context: IContext = nodeContexts[i];\n\t\t\tif (context.instance !== instance) {\n\t\t\t\t// console.log(context.instance, instance);\n\t\t\t\tif (context.instance instanceof factory) {\n\t\t\t\t\treturn context.instance;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif (node.parentNode) {\n\t\treturn getHost(instance, factory, node.parentNode as IElement);\n\t} else {\n\t\treturn undefined;\n\t}\n}\n/*\nexport function deepEqual(prev: any, curr: any, pool: any[] = []): boolean {\n\tlet equal: boolean = typeof prev === typeof curr;\n\tif (prev && pool.indexOf(prev) === -1 && pool.indexOf(curr) === -1) {\n\t\tpool.push(prev, curr);\n\t\tconst type = Array.isArray(curr) ? 'array' : typeof curr;\n\t\tswitch (type) {\n\t\t\tcase 'array':\n\t\t\t\tequal = prev.length === curr.length;\n\t\t\t\tequal = equal && prev.reduce((p: boolean, a: any[], i: number) => p && deepEqual(a, curr[i], pool), true);\n\t\t\t\tbreak;\n\t\t\tcase 'object':\n\t\t\t\tif ('Symbol' in WINDOW && Symbol.iterator in prev) {\n\t\t\t\t\t// || prev instanceof Map\n\t\t\t\t\tequal = prev.size === curr.size;\n\t\t\t\t\tconst ea = prev.entries();\n\t\t\t\t\tconst eb = curr.entries();\n\t\t\t\t\tfor (let item = ea.next(); item.done !== true; item = ea.next()) {\n\t\t\t\t\t\tconst ia = item.value;\n\t\t\t\t\t\tconst ib = eb.next().value;\n\t\t\t\t\t\tequal = equal && deepEqual(ia, ib, pool);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst prevKeys = Object.keys(prev);\n\t\t\t\t\tconst currKeys = Object.keys(curr);\n\t\t\t\t\tequal = prevKeys.length === currKeys.length;\n\t\t\t\t\tequal = equal && prevKeys.reduce((p: boolean, k: string) => p && deepEqual(prev[k], curr[k], pool), true);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tequal = prev === curr;\n\t\t}\n\t}\n\t// console.log(equal, prev, curr);\n\treturn equal;\n}\n*/\n","import Directive from '../core/directive';\nimport { getContext } from '../core/factory';\nimport { IFactoryMeta } from '../core/types';\n\nexport default class SrcDirective extends Directive {\n\tset src(src: string) {\n\t\tif (this.src_ !== src) {\n\t\t\tthis.src_ = src;\n\t\t\tconst { node } = getContext(this);\n\t\t\tsrc ? node.setAttribute('src', src) : node.removeAttribute('src');\n\t\t}\n\t}\n\tget src(): string {\n\t\treturn this.src_;\n\t}\n\tstatic meta: IFactoryMeta = {\n\t\tselector: '[[src]]',\n\t\tinputs: ['src'],\n\t};\n}\n","import Directive from '../core/directive';\nimport { getContext } from '../core/factory';\nimport { IFactoryMeta } from '../core/types';\n\nexport default class StyleDirective extends Directive {\n\tstyle?: { [key: string]: string } | null;\n\tpreviousStyle?: { [key: string]: string } | null;\n\tonChanges() {\n\t\tconst { node } = getContext(this);\n\t\tconst style = this.style;\n\t\tconst previousStyle = this.previousStyle;\n\t\tif (previousStyle) {\n\t\t\tfor (let key in previousStyle) {\n\t\t\t\tif (!style || !style[key]) {\n\t\t\t\t\tconst splitted: string[] = key.split('.');\n\t\t\t\t\tconst propertyName = splitted.shift();\n\t\t\t\t\tnode.style.removeProperty(propertyName!);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (style) {\n\t\t\tfor (let key in style) {\n\t\t\t\tif (!previousStyle || previousStyle[key] !== style[key]) {\n\t\t\t\t\tconst splitted: string[] = key.split('.');\n\t\t\t\t\tconst propertyName = splitted.shift();\n\t\t\t\t\tconst value = style[key] + (splitted.length ? splitted[0] : '');\n\t\t\t\t\t// console.log(propertyName, value, style, key, style[key]);\n\t\t\t\t\tnode.style.setProperty(propertyName!, value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.previousStyle = style;\n\t\t// console.log('StyleDirective.onChanges', style);\n\t}\n\tstatic meta: IFactoryMeta = {\n\t\tselector: `[[style]]`,\n\t\tinputs: ['style']\n\t};\n}\n","\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport ClassDirective from './class/class.directive';\r\nimport Factory from './core/factory';\r\nimport Pipe from './core/pipe';\r\nimport { errors$ } from './error/error';\r\nimport EventDirective from './event/event.directive';\r\nimport ForStructure from './for/for.structure';\r\nimport HrefTargetDirective from './href/href-target.directive';\r\nimport HrefDirective from './href/href.directive';\r\nimport IfStructure from './if/if.structure';\r\nimport InnerHtmlDirective from './inner-html/inner-html.directive';\r\nimport JsonComponent from './json/json.component';\r\nimport JsonPipe from './json/json.pipe';\r\nimport Module from './module/module';\r\nimport SrcDirective from './src/src.directive';\r\nimport StyleDirective from './style/style.directive';\r\n\r\nconst factories: typeof Factory[] = [\r\n\tClassDirective,\r\n\tEventDirective,\r\n\tForStructure,\r\n\tHrefDirective,\r\n\tHrefTargetDirective,\r\n\tIfStructure,\r\n\tInnerHtmlDirective,\r\n\tJsonComponent,\r\n\tSrcDirective,\r\n\tStyleDirective,\r\n];\r\nconst pipes: typeof Pipe[] = [\r\n\tJsonPipe,\r\n];\r\nexport default class CoreModule extends Module {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\t// console.log('CoreModule');\r\n\t\terrors$.pipe(\r\n\t\t\ttakeUntil(this.unsubscribe$),\r\n\t\t).subscribe();\r\n\t}\r\n\tstatic meta = {\r\n\t\tdeclarations: [\r\n\t\t\t...factories,\r\n\t\t\t...pipes,\r\n\t\t],\r\n\t\texports: [\r\n\t\t\t...factories,\r\n\t\t\t...pipes,\r\n\t\t]\r\n\t};\r\n}\r\n","export const WINDOW: Window = ((typeof self === 'object' && self.self === self && self) || (typeof global === 'object' && global.global === global && global) || this) as unknown as Window;\n","import { IElement, IModuleParsedMeta } from '../core/types';\nimport { ModuleError } from '../error/error';\nimport Module from '../module/module';\nimport { WINDOW } from './common/window/window';\nimport Platform, { isPlatformBrowser } from './platform';\n\nexport default class Browser extends Platform {\n\t/**\n\t * @param moduleFactory\n\t * @description This method returns a Browser compiled module\n\t */\n\tstatic bootstrap(moduleFactory?: typeof Module): Module {\n\t\tif (!isPlatformBrowser) {\n\t\t\tthrow new ModuleError('missing platform browser, Window not found');\n\t\t}\n\t\tif (!moduleFactory) {\n\t\t\tthrow new ModuleError('missing moduleFactory');\n\t\t}\n\t\tif (!moduleFactory.meta) {\n\t\t\tthrow new ModuleError('missing moduleFactory meta');\n\t\t}\n\t\tif (!moduleFactory.meta.bootstrap) {\n\t\t\tthrow new ModuleError('missing bootstrap');\n\t\t}\n\t\tif (!moduleFactory.meta.bootstrap.meta) {\n\t\t\tthrow new ModuleError('missing bootstrap meta');\n\t\t}\n\t\tif (!moduleFactory.meta.bootstrap.meta.selector) {\n\t\t\tthrow new ModuleError('missing bootstrap meta selector');\n\t\t}\n\t\tconst meta: IModuleParsedMeta = this.resolveMeta(moduleFactory!);\n\t\tconst module: Module = new moduleFactory();\n\t\tmodule.meta = meta;\n\t\tmeta.imports.forEach((moduleFactory: typeof Module) => {\n\t\t\tmoduleFactory.prototype.constructor.call(module);\n\t\t});\n\t\tif (WINDOW.rxcomp_hydrate_) {\n\t\t\tconst clonedNode = meta.node.cloneNode() as IElement;\n\t\t\tclonedNode.innerHTML = meta.nodeInnerHTML = WINDOW.rxcomp_hydrate_.innerHTML;\n\t\t\tconst instances = module.compile(clonedNode, WINDOW);\n\t\t\tmodule.instances = instances;\n\t\t\t/*\n\t\t\tconst root = instances[0];\n\t\t\troot.pushChanges();\n\t\t\t*/\n\t\t\tmeta.node.parentNode?.replaceChild(clonedNode, meta.node);\n\t\t} else {\n\t\t\tconst instances = module.compile(meta.node, WINDOW);\n\t\t\tmodule.instances = instances;\n\t\t\t/*\n\t\t\tconst root = instances[0];\n\t\t\troot.pushChanges();\n\t\t\t*/\n\t\t}\n\t\treturn module;\n\t}\n}\n","export interface ILocationInit {\n\thref: string;\n\tprotocol: string;\n\thost: string;\n\thostname: string;\n\tport: string;\n\tpathname: string;\n\tsearch: string;\n\thash: string;\n}\n\nexport function getLocationComponents(href: string): ILocationInit {\n\tlet protocol = '';\n\tlet host = '';\n\tlet hostname = '';\n\tlet port = '';\n\tlet pathname = '';\n\tlet search = '';\n\tlet hash = '';\n\tconst regExp: RegExp = /^((http\\:|https\\:)?\\/\\/)?((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])|(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\\-]*[A-Za-z0-9])|locahost)?(\\:([^\\/]+))?(\\.?\\/[^\\?]+)?(\\?[^\\#]+)?(\\#.+)?$/g;\n\tconst matches = [];\n\tlet match;\n\twhile ((match = regExp.exec(href)) !== null) {\n\t\tmatches.push(match);\n\t}\n\tfor (let match of matches) {\n\t\tprotocol = match[2] || '';\n\t\thost = hostname = match[3] || '';\n\t\tport = match[11] || '';\n\t\tpathname = match[12] || '';\n\t\tsearch = match[13] || '';\n\t\thash = match[14] || '';\n\t}\n\treturn { href, protocol, host, hostname, port, pathname, search, hash };\n}\n","import Serializer, { decodeJson, encodeJson } from \"../serializer/serializer\";\n\nexport default class TransferService {\n\tstatic makeKey(base: string, params?: { [key: string]: any }): string {\n\t\tconst paramsKey: string = params ? optionsToKey(params) : '';\n\t\tlet key: string = `rxcomp-hydrate-${base}-${paramsKey}`;\n\t\tkey = key.replace(/(\\s+)|(\\W+)/g, function (...matches) { return matches[1] ? '' : '_' });\n\t\t// console.log('TransferService.makeKey', key, base, paramsKey);\n\t\treturn key;\n\t}\n\tstatic has(key: string): boolean {\n\t\tconst script = document.querySelector(`#${key}`);\n\t\treturn script !== null;\n\t}\n\tstatic get<T>(key: string): T | undefined;\n\tstatic get(key: string): { [key: string]: any } | undefined;\n\tstatic get(key: string): any {\n\t\tconst node = document.querySelector(`#${key}`);\n\t\tif (node && node.firstChild) {\n\t\t\tconst json: string | null = node.firstChild.nodeValue;\n\t\t\treturn json ? Serializer.decode(json, [decodeJson]) : undefined;\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t}\n\tstatic set(key: string, value: { [key: string]: any }): void {\n\t\t// console.log('TransferService.set', key, value);\n\t\tconst json: string | undefined = Serializer.encode(value, [encodeJson]);\n\t\tif (!json) {\n\t\t\treturn;\n\t\t}\n\t\tconst text = document.createTextNode(json);\n\t\tlet node = document.querySelector(`#${key}`);\n\t\tif (!node) {\n\t\t\tnode = document.createElement('script');\n\t\t\tnode.setAttribute('id', key);\n\t\t\tnode.setAttribute('type', 'text/template');\n\t\t\t// console.log('node', node!!, 'document', document!!, 'head', document.head!!);\n\t\t\tnode.append(text);\n\t\t\tdocument.head!.append(node);\n\t\t} else {\n\t\t\tnode.replaceChild(text, node.firstChild!);\n\t\t}\n\t}\n\tstatic remove(key: string): void {\n\t\tlet node = document.querySelector(`#${key}`);\n\t\tif (node && node.parentNode) {\n\t\t\tnode.parentNode.removeChild(node);\n\t\t}\n\t}\n}\nexport function optionsToKey(v: any, s: string = ''): string {\n\tif (typeof v === 'number') {\n\t\ts += '-' + v.toString();\n\t} else if (typeof v === 'string') {\n\t\ts += '-' + v.substr(0, 20);\n\t} else if (v && Array.isArray(v)) {\n\t\ts += '-' + v.map(v => optionsToKey(v)).join('');\n\t} else if (v && typeof v === 'object') {\n\t\ts += '-' + Object.keys(v).map(k => k + optionsToKey(v[k])).join('-');\n\t}\n\treturn s;\n}\n"]}