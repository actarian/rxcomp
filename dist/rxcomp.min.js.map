{"version":3,"sources":["dist/rxcomp.js","../src/core/factory.ts","../src/core/directive.ts","../src/core/component.ts","../src/core/context.ts","../src/core/structure.ts","../src/module/module.ts","../src/class/class.directive.ts","../src/event/event.directive.ts","../src/for/for.item.ts","../src/for/for.structure.ts","../src/href/href.directive.ts","../src/if/if.structure.ts","../src/inner-html/inner-html.directive.ts","../src/core/pipe.ts","../src/json/json.pipe.ts","../src/src/src.directive.ts","../src/style/style.directive.ts","../src/core.module.ts","../src/platform/platform.ts","../src/platform/browser.ts"],"names":["global","factory","exports","module","require","define","amd","self","rxcomp","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__spreadArrays","s","i","il","arguments","length","r","k","a","j","jl","_super","RxCompElement","apply","HTMLElement","RxCompText","Text","Factory","args","_i","Directive","Component","RESERVED_PROPERTIES","Context","instance","descriptors","_this","call","mergeDescriptors","getPrototypeOf","defineProperties","source","properties","getOwnPropertyNames","_loop_1","key","shift","indexOf","descriptor","getOwnPropertyDescriptor","value","Structure","ID","CONTEXTS","NODES","Module","compile","node","parentInstance","componentNode","querySelectorsAll","meta","selectors","map","match","undefined","makeInstance","selector","filter","x","parentNode","isComponent_1","meta_1","getParentInstance","initialized_1","instance_1","bind","context","makeContext","changes$","BehaviorSubject","writable","enumerable","unsubscribe$","Subject","module_1","pushChanges","next","parse","setTimeout","makeHosts","inputs","makeInputs","outputs","makeOutputs","pipe","takeUntil","subscribe","changes","resolveInputsOutputs","makeFunction","expression","params","parseExpression","join","Function","getInstance","Document","window","getContextByNode","traverseUp","childNodes","child","nodeType","htmlNode","text","parseTextNode","expressions","nodeExpressions","parseTextNodeExpression","nodeValue","replacedText","reduce","c","resolve","textNode","document","createTextNode","replaceChild","pushFragment","from","to","fragment","substring","push","matches","regex","lastIndex","exec","index","payload","hosts","keys","forEach","getHost","makeInput","input","getContext","hasAttribute","getAttribute","replace","makeOutput","outputFunction","output$","tap","event","inputFunction","destroy","remove","innerHTML","nodeInnerHTML","keepInstance","keepContext","traverseDown","rxcompId","deleteContext","rx1","g1","parsePipes","g2","parseOptionalChaining","trim","parsePipeParams","func","segments","word","block","t","substr","previous","tokens","split","rxcompNodeId","id","keepContexts","nodeContexts","complete","matchSelectors","results","template","concat","find","callback","result","traversePrevious","previousSibling","traverseNext","nextSibling","current","ClassDirective","onInit","_a","classFunction","onChanges","classList","add","EventDirective","event$","fromEvent","shareReplay","outputFunction_1","ForItem","$key","$value","count","defineProperty","get","configurable","even","ForStructure","instances","forbegin","createComment","forend","insertBefore","removeAttribute","token","getExpressionToken","forFunction","iterable","isArray","array","total","Math","max","clonedNode","cloneNode","forItemContext","node_1","removeChild","forExpressions","keyValueMatches","indexExpressions","HrefDirective","setAttribute","href","IfStructure","ifbegin","ifend","ifFunction","InnerHtmlDirective","Pipe","transform","JsonPipe","JSON","stringify","name","SrcDirective","src","StyleDirective","styleFunction","style","setProperty","CoreModule","factories","pipes","declarations","ORDER","Platform","bootstrap","moduleFactory","resolveMeta","console","log","querySelector","resolvePipes","resolveFactories","sortFactories","unshift","unwrapSelectors","assign","imports","exported","importedPipes","importMeta","pipeFactory","importedFactories","factoryList","sort","o","getExpressions","matchers","c1","a2","u3","v4","a5","e6","contains","nodeName","toLowerCase","excludes","matchSelector","unmatchSelector","includes","include","e","exclude","isBrowser","Boolean","Browser"],"mappings":"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","file":"dist/rxcomp.min.js","sourcesContent":[null,"import { BehaviorSubject, Subject } from \"rxjs\";\n\nexport type SelectorFunction = (node: HTMLElement) => boolean;\n\nexport type ExpressionFunction = () => any;\n\nexport interface IFactoryMeta {\n\tselector: string;\n\thosts?: { [key: string]: typeof Factory };\n\tinputs?: string[];\n\toutputs?: string[];\n\ttemplate?: string;\n}\n\nexport class RxCompElement extends HTMLElement {\n\trxcompId?: number;\n}\n\nexport class RxCompText extends Text {\n\tnodeExpressions?: (ExpressionFunction | string)[];\n}\n\nexport default class Factory {\n\trxcompId?: number;\n\tchanges$?: BehaviorSubject<Factory>;\n\tunsubscribe$?: Subject<void>;\n\t/*\n\tonInit?: () => void;\n\tonChanges?: (changes: Factory) => void;\n\tonView?: () => void;\n\tonDestroy?: () => void;\n\t*/\n\tpushChanges?: Function;\n\tstatic meta: IFactoryMeta;\n\n\tconstructor(...args: any[]) {\n\n\t}\n}\n","import Factory from './factory';\n\nexport default class Directive extends Factory {\n}\n","import Factory from './factory';\n\nexport default class Component extends Factory {\n}\n","// import { BehaviorSubject, Subject } from 'rxjs';\nimport Component from './component';\nimport Factory from './factory';\n\nconst RESERVED_PROPERTIES = ['constructor', 'rxcompId', 'onInit', 'onChanges', 'onDestroy', 'pushChanges', 'changes$', 'unsubscribe$'];\n\nexport default class Context extends Component {\n\n\tconstructor(instance: Factory, descriptors = {}) {\n\t\tsuper();\n\t\tdescriptors = Context.mergeDescriptors(instance, instance, descriptors);\n\t\tdescriptors = Context.mergeDescriptors(Object.getPrototypeOf(instance), instance, descriptors);\n\t\t/*\n\t\tconst subjects = {\n\t\t\tchanges$: {\n\t\t\t\tvalue: new BehaviorSubject(this),\n\t\t\t\twritable: false,\n\t\t\t\tenumerable: false,\n\t\t\t},\n\t\t\tunsubscribe$: {\n\t\t\t\tvalue: new Subject(),\n\t\t\t\twritable: false,\n\t\t\t\tenumerable: false,\n\t\t\t}\n\t\t};\n\t\t*/\n\t\tObject.defineProperties(this, descriptors);\n\t}\n\n\tstatic mergeDescriptors(source, instance, descriptors = {}) {\n\t\tconst properties = Object.getOwnPropertyNames(source);\n\t\twhile (properties.length) {\n\t\t\tlet key = properties.shift();\n\t\t\tif (RESERVED_PROPERTIES.indexOf(key) === -1 && !descriptors.hasOwnProperty(key)) {\n\t\t\t\t// console.log('Context.mergeDescriptors', key, source[key]);\n\t\t\t\tconst descriptor = Object.getOwnPropertyDescriptor(source, key);\n\t\t\t\tif (typeof descriptor.value == \"function\") {\n\t\t\t\t\tdescriptor.value = (...args) => {\n\t\t\t\t\t\treturn instance[key].apply(instance, args);\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tdescriptors[key] = descriptor;\n\t\t\t}\n\t\t}\n\t\treturn descriptors;\n\t}\n\n}\n","import Factory from './factory';\n\nexport default class Structure extends Factory {\n}\n","import { BehaviorSubject, Subject } from 'rxjs';\nimport { takeUntil, tap } from 'rxjs/operators';\nimport Component from '../core/component';\nimport Context from '../core/context';\nimport Factory, { ExpressionFunction, IFactoryMeta, RxCompElement, RxCompText, SelectorFunction } from '../core/factory';\nimport Pipe from '../core/pipe';\nimport Structure from '../core/structure';\n\nexport interface ModuleContext {\n\tmodule: Module;\n\tinstance: Factory;\n\tparentInstance: Factory | Window;\n\tnode: RxCompElement;\n\tfactory: typeof Factory;\n\tselector: string;\n\tinputs?: {};\n\toutputs?: {};\n}\n\nlet ID: number = 0;\nconst CONTEXTS: { [key: number]: ModuleContext } = {};\nconst NODES: { [key: number]: ModuleContext[] } = {};\n\nexport interface IModuleMeta {\n\tdeclarations?: (typeof Factory | typeof Pipe)[];\n\texports?: (typeof Factory | typeof Pipe)[];\n\timports?: (typeof Module | IModuleMeta)[];\n\tpipes?: { [key: string]: typeof Pipe };\n\tfactories?: typeof Factory[];\n\tselectors?: SelectorFunction[];\n\tbootstrap?: typeof Factory;\n\tnode?: RxCompElement;\n\tnodeInnerHTML?: string;\n}\n\nexport default class Module {\n\n\tmeta: IModuleMeta;\n\n\tcompile(node: RxCompElement, parentInstance?: Factory | Window): Factory[] {\n\t\tlet componentNode;\n\t\tconst instances = Module.querySelectorsAll(node, this.meta.selectors, []).map(match => {\n\t\t\tif (componentNode && componentNode !== match.node) {\n\t\t\t\tparentInstance = undefined;\n\t\t\t}\n\t\t\tconst instance = this.makeInstance(match.node, match.factory, match.selector, parentInstance);\n\t\t\tif (match.factory.prototype instanceof Component) {\n\t\t\t\tcomponentNode = match.node;\n\t\t\t}\n\t\t\treturn instance;\n\t\t}).filter(x => x);\n\t\t// console.log('compile', instances, node, parentInstance);\n\t\treturn instances;\n\t}\n\n\tmakeInstance(node: RxCompElement, factory: typeof Factory, selector: string, parentInstance: Factory | Window, args?: any[]): Factory | void {\n\t\tif (parentInstance || node.parentNode) {\n\t\t\tconst isComponent = factory.prototype instanceof Component;\n\t\t\tconst meta = factory.meta;\n\t\t\t// console.log('meta', meta, factory);\n\t\t\t// collect parentInstance scope\n\t\t\tparentInstance = parentInstance || this.getParentInstance(node.parentNode);\n\t\t\tif (!parentInstance) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// creating factory instance\n\t\t\tconst instance = new factory(...(args || []));\n\t\t\t// creating instance context\n\t\t\tconst context = Module.makeContext(this, instance, parentInstance, node, factory, selector);\n\t\t\t// injecting changes$ and unsubscribe$ subjects\n\t\t\tObject.defineProperties(instance, {\n\t\t\t\tchanges$: {\n\t\t\t\t\tvalue: new BehaviorSubject(instance),\n\t\t\t\t\twritable: false,\n\t\t\t\t\tenumerable: false,\n\t\t\t\t},\n\t\t\t\tunsubscribe$: {\n\t\t\t\t\tvalue: new Subject(),\n\t\t\t\t\twritable: false,\n\t\t\t\t\tenumerable: false,\n\t\t\t\t}\n\t\t\t});\n\t\t\tlet initialized;\n\t\t\t// injecting instance pushChanges method\n\t\t\tconst module = this;\n\t\t\tinstance.pushChanges = function () {\n\t\t\t\t// console.log(new Error(`pushChanges ${instance.constructor.name}`).stack);\n\t\t\t\tthis.changes$.next(this);\n\t\t\t\t// parse component text nodes\n\t\t\t\tif (isComponent) {\n\t\t\t\t\t// console.log('Module.parse', instance.constructor.name);\n\t\t\t\t\tinitialized ? module.parse(node, instance) : setTimeout(function () { module.parse(node, instance); });\n\t\t\t\t}\n\t\t\t\t// calling onView event\n\t\t\t\tif (instance['onView']) {\n\t\t\t\t\t// console.log('onView', instance.constructor.name);\n\t\t\t\t\tinstance['onView']();\n\t\t\t\t}\n\t\t\t};\n\t\t\t// creating component input and outputs\n\t\t\t// if (isComponent && meta) {\n\t\t\tif (meta) {\n\t\t\t\tthis.makeHosts(meta, instance, node);\n\t\t\t\tcontext.inputs = this.makeInputs(meta, instance);\n\t\t\t\tcontext.outputs = this.makeOutputs(meta, instance);\n\t\t\t}\n\t\t\t// calling onInit event\n\t\t\tif (instance['onInit']) {\n\t\t\t\tinstance['onInit']();\n\t\t\t}\n\t\t\tinitialized = true;\n\t\t\t// subscribe to parent changes\n\t\t\tif (parentInstance instanceof Factory && parentInstance.changes$) {\n\t\t\t\tparentInstance.changes$.pipe(\n\t\t\t\t\t// filter(() => node.parentNode),\n\t\t\t\t\t// debounceTime(1),\n\t\t\t\t\t/*\n\t\t\t\t\tdistinctUntilChanged(function(prev, curr) {\n\t\t\t\t\t\tconsole.log(isComponent, context.inputs);\n\t\t\t\t\t\tif (isComponent && meta && Object.keys(context.inputs).length === 0) {\n\t\t\t\t\t\t\treturn true; // same\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t\t*/\n\t\t\t\t\ttakeUntil(instance.unsubscribe$)\n\t\t\t\t).subscribe(changes => {\n\t\t\t\t\t// resolve component input outputs\n\t\t\t\t\t// if (isComponent && meta) {\n\t\t\t\t\tif (meta) {\n\t\t\t\t\t\tthis.resolveInputsOutputs(instance, changes);\n\t\t\t\t\t}\n\t\t\t\t\t// calling onChanges event with parentInstance\n\t\t\t\t\tif (instance['onChanges']) {\n\t\t\t\t\t\t// console.log('onChanges', instance.constructor.name);\n\t\t\t\t\t\t// console.log('onChanges', instance.constructor.meta.selector, changes);\n\t\t\t\t\t\tinstance['onChanges'](changes);\n\t\t\t\t\t}\n\t\t\t\t\t// push instance changes for subscribers\n\t\t\t\t\tinstance.pushChanges();\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn instance;\n\t\t}\n\t}\n\n\tmakeContext(instance: Factory, parentInstance: Factory | Window, node: RxCompElement, selector: string): ModuleContext {\n\t\tconst context = Module.makeContext(this, instance, parentInstance, node, instance.constructor as typeof Factory, selector);\n\t\t// console.log('Module.makeContext', context, context.instance, context.node);\n\t\treturn context;\n\t}\n\n\tmakeFunction(expression: string, params: string[] = ['$instance']): ExpressionFunction {\n\t\tif (expression) {\n\t\t\texpression = Module.parseExpression(expression);\n\t\t\t// console.log(expression);\n\t\t\tconst args: string = params.join(',');\n\t\t\tconst expression_func: ExpressionFunction = new Function(`with(this) {\n\t\t\t\treturn (function (${args}, $$module) {\n\t\t\t\t\tconst $$pipes = $$module.meta.pipes;\n\t\t\t\t\treturn ${expression};\n\t\t\t\t}.bind(this)).apply(this, arguments);\n\t\t\t}`) as ExpressionFunction;\n\t\t\t// console.log(expression_func);\n\t\t\treturn expression_func;\n\t\t} else {\n\t\t\treturn () => { return null; };\n\t\t}\n\t}\n\n\tgetInstance(node: HTMLElement | Document): Factory | Window {\n\t\tif (node instanceof Document) {\n\t\t\treturn window; // !!! window or global\n\t\t}\n\t\tconst context: ModuleContext | void = getContextByNode(node);\n\t\tif (context) {\n\t\t\treturn context.instance;\n\t\t}\n\t}\n\n\tgetParentInstance(node: Node): Factory | Window {\n\t\treturn Module.traverseUp(node, (node: Node) => {\n\t\t\treturn this.getInstance(node as HTMLElement);\n\t\t});\n\t}\n\n\tparse(node: HTMLElement, instance: Factory): void {\n\t\tfor (let i = 0; i < node.childNodes.length; i++) {\n\t\t\tconst child: ChildNode = node.childNodes[i];\n\t\t\tif (child.nodeType === 1) {\n\t\t\t\tconst htmlNode: HTMLElement = child as HTMLElement;\n\t\t\t\tconst context: ModuleContext | void = getContextByNode(htmlNode);\n\t\t\t\tif (!context) {\n\t\t\t\t\tthis.parse(htmlNode, instance);\n\t\t\t\t}\n\t\t\t} else if (child.nodeType === 3) {\n\t\t\t\tconst text: Text = child as Text;\n\t\t\t\tthis.parseTextNode(text, instance);\n\t\t\t}\n\t\t}\n\t}\n\n\t// reduce(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: T[]) => T, initialValue: T): T;\n\n\tparseTextNode(node: RxCompText, instance: Factory): void {\n\t\tlet expressions: (ExpressionFunction | string)[] = node.nodeExpressions;\n\t\tif (!expressions) {\n\t\t\texpressions = this.parseTextNodeExpression(node.nodeValue);\n\t\t}\n\t\tconst replacedText: string = expressions.reduce((p: string, c: ExpressionFunction | string) => {\n\t\t\tlet text: string;\n\t\t\tif (typeof c === 'function') { // instanceOf ExpressionFunction ?;\n\t\t\t\ttext = this.resolve(c as ExpressionFunction, instance, instance);\n\t\t\t\tif (text == undefined) { // !!! keep == loose equality\n\t\t\t\t\ttext = '';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttext = c;\n\t\t\t}\n\t\t\treturn p + text;\n\t\t}, '') as string;\n\t\tif (node.nodeValue !== replacedText) {\n\t\t\tconst textNode: RxCompText = document.createTextNode(replacedText) as RxCompText;\n\t\t\ttextNode.nodeExpressions = expressions;\n\t\t\tnode.parentNode.replaceChild(textNode, node);\n\t\t}\n\t}\n\n\tpushFragment(nodeValue: string, from: number, to: number, expressions: (ExpressionFunction | string)[]): void {\n\t\tconst fragment = nodeValue.substring(from, to);\n\t\texpressions.push(fragment);\n\t};\n\n\tparseTextNodeExpression(nodeValue: string): (ExpressionFunction | string)[] {\n\t\tconst expressions: (ExpressionFunction | string)[] = [];\n\t\tconst regex: RegExp = /\\{{2}((([^{}])|(\\{([^{}]|(\\{.*?\\}))+?\\}))*?)\\}{2}/g;\n\t\tlet lastIndex: number = 0,\n\t\t\tmatches: RegExpExecArray;\n\t\t/*\n\t\tconst pushFragment = function (from: number, to: number): void {\n\t\t\tconst fragment = nodeValue.substring(from, to);\n\t\t\texpressions.push(fragment);\n\t\t};\n\t\t*/\n\t\twhile ((matches = regex.exec(nodeValue)) !== null) {\n\t\t\tconst index: number = regex.lastIndex - matches[0].length;\n\t\t\tif (index > lastIndex) {\n\t\t\t\tthis.pushFragment(nodeValue, index, lastIndex, expressions);\n\t\t\t}\n\t\t\tlastIndex = regex.lastIndex;\n\t\t\tconst expression: ExpressionFunction = this.makeFunction(matches[1]);\n\t\t\texpressions.push(expression);\n\t\t}\n\t\tconst length: number = nodeValue.length;\n\t\tif (length > lastIndex) {\n\t\t\tthis.pushFragment(nodeValue, lastIndex, length, expressions);\n\t\t}\n\t\treturn expressions;\n\t}\n\n\tresolve(expression: ExpressionFunction, parentInstance: Factory | Window, payload: any): any {\n\t\t// console.log(expression, parentInstance, payload);\n\t\treturn expression.apply(parentInstance, [payload, this]);\n\t}\n\n\tmakeHosts(meta: IFactoryMeta, instance: Factory, node: RxCompElement) {\n\t\tif (meta.hosts) {\n\t\t\tObject.keys(meta.hosts).forEach((key: string) => {\n\t\t\t\tconst factory: typeof Factory = meta.hosts[key];\n\t\t\t\tinstance[key] = getHost(instance, factory, node);\n\t\t\t});\n\t\t}\n\t}\n\n\tmakeInput(instance, key) {\n\t\tconst { node } = getContext(instance);\n\t\tlet input, expression = null;\n\t\tif (node.hasAttribute(key)) {\n\t\t\t// const attribute = node.getAttribute(key).replace(/{{/g, '\"+').replace(/}}/g, '+\"');\n\t\t\tconst attribute = node.getAttribute(key).replace(/({{)|(}})|(\")/g, function (match, a, b, c) {\n\t\t\t\tif (a) {\n\t\t\t\t\treturn '\"+';\n\t\t\t\t}\n\t\t\t\tif (b) {\n\t\t\t\t\treturn '+\"';\n\t\t\t\t}\n\t\t\t\tif (c) {\n\t\t\t\t\treturn '\\\"';\n\t\t\t\t}\n\t\t\t});\n\t\t\texpression = `\"${attribute}\"`;\n\t\t} else if (node.hasAttribute(`[${key}]`)) {\n\t\t\texpression = node.getAttribute(`[${key}]`);\n\t\t}\n\t\tif (expression !== null) {\n\t\t\tinput = this.makeFunction(expression);\n\t\t}\n\t\treturn input;\n\t}\n\n\tmakeInputs(meta, instance) {\n\t\tconst inputs = {};\n\t\tif (meta.inputs) {\n\t\t\tmeta.inputs.forEach((key, i) => {\n\t\t\t\tconst input = this.makeInput(instance, key);\n\t\t\t\tif (input) {\n\t\t\t\t\tinputs[key] = input;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn inputs;\n\t}\n\n\tmakeOutput(instance, key) {\n\t\tconst context = getContext(instance);\n\t\tconst node = context.node;\n\t\tconst parentInstance = context.parentInstance;\n\t\tconst expression = node.getAttribute(`(${key})`);\n\t\tconst outputFunction = this.makeFunction(expression, ['$event']);\n\t\tconst output$ = new Subject().pipe(\n\t\t\ttap((event) => {\n\t\t\t\tthis.resolve(outputFunction, parentInstance, event);\n\t\t\t})\n\t\t);\n\t\toutput$.pipe(\n\t\t\ttakeUntil(instance.unsubscribe$)\n\t\t).subscribe();\n\t\tinstance[key] = output$;\n\t\treturn outputFunction;\n\t}\n\n\tmakeOutputs(meta, instance) {\n\t\tconst outputs = {};\n\t\tif (meta.outputs) {\n\t\t\tmeta.outputs.forEach((key, i) => outputs[key] = this.makeOutput(instance, key));\n\t\t}\n\t\treturn outputs;\n\t}\n\n\tresolveInputsOutputs(instance, changes) {\n\t\tconst context = getContext(instance);\n\t\tconst parentInstance = context.parentInstance;\n\t\tconst inputs = context.inputs;\n\t\tfor (let key in inputs) {\n\t\t\tconst inputFunction = inputs[key];\n\t\t\tconst value = this.resolve(inputFunction, parentInstance, instance);\n\t\t\tinstance[key] = value;\n\t\t}\n\t\t/*\n\t\tconst outputs = context.outputs;\n\t\tfor (let key in outputs) {\n\t\t\tconst inpuoutputFunctiontFunction = outputs[key];\n\t\t\tconst value = this.resolve(outputFunction, parentInstance, null);\n\t\t\t// console.log(`setted -> ${key}`, value);\n\t\t}\n\t\t*/\n\t}\n\n\tdestroy() {\n\t\tthis.remove(this.meta.node);\n\t\tthis.meta.node.innerHTML = this.meta.nodeInnerHTML;\n\t}\n\n\tremove(node, keepInstance?: any) {\n\t\tconst keepContext = keepInstance ? getContext(keepInstance) : undefined;\n\t\tModule.traverseDown(node, (node: RxCompElement) => {\n\t\t\tconst rxcompId = node.rxcompId;\n\t\t\tif (rxcompId) {\n\t\t\t\tconst keepContexts = Module.deleteContext(rxcompId, keepContext);\n\t\t\t\tif (keepContexts.length === 0) {\n\t\t\t\t\tdelete node.rxcompId;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn node;\n\t}\n\n\tstatic parseExpression(expression: string): string {\n\t\tconst l = '┌';\n\t\tconst r = '┘';\n\t\tconst rx1 = /(\\()([^\\(\\)]*)(\\))/;\n\t\twhile (expression.match(rx1)) {\n\t\t\texpression = expression.replace(rx1, function (...g1) {\n\t\t\t\treturn `${l}${Module.parsePipes(g1[2])}${r}`;\n\t\t\t});\n\t\t}\n\t\texpression = Module.parsePipes(expression);\n\t\texpression = expression.replace(/(┌)|(┘)/g, function (...g2) {\n\t\t\treturn g2[1] ? '(' : ')';\n\t\t});\n\t\treturn Module.parseOptionalChaining(expression);\n\t}\n\n\tstatic parsePipes(expression: string): string {\n\t\tconst l: string = '┌';\n\t\tconst r: string = '┘';\n\t\tconst rx1: RegExp = /(.*?[^\\|])\\|([^\\|]+)/;\n\t\twhile (expression.match(rx1)) {\n\t\t\texpression = expression.replace(rx1, function (substring: string, ...args: any[]) {\n\t\t\t\tconst value: string = args[0].trim();\n\t\t\t\tconst params: string[] = Module.parsePipeParams(args[1]);\n\t\t\t\tconst func: string = params.shift().trim();\n\t\t\t\treturn `$$pipes.${func}.transform┌${[value, ...params]}┘`;\n\t\t\t});\n\t\t}\n\t\treturn expression;\n\t}\n\n\tstatic parsePipeParams(expression: string): string[] {\n\t\tconst segments: string[] = [];\n\t\tlet i: number = 0,\n\t\t\tword: string = '',\n\t\t\tblock: number = 0;\n\t\tconst t: number = expression.length;\n\t\twhile (i < t) {\n\t\t\tconst c: string = expression.substr(i, 1);\n\t\t\tif (c === '{' || c === '(' || c === '[') {\n\t\t\t\tblock++;\n\t\t\t}\n\t\t\tif (c === '}' || c === ')' || c === ']') {\n\t\t\t\tblock--;\n\t\t\t}\n\t\t\tif (c === ':' && block === 0) {\n\t\t\t\tif (word.length) {\n\t\t\t\t\tsegments.push(word.trim());\n\t\t\t\t}\n\t\t\t\tword = '';\n\t\t\t} else {\n\t\t\t\tword += c;\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\t\tif (word.length) {\n\t\t\tsegments.push(word.trim());\n\t\t}\n\t\treturn segments;\n\t}\n\n\tstatic parseOptionalChaining(expression: string): string {\n\t\tconst regex: RegExp = /(\\w+(\\?\\.))+([\\.|\\w]+)/g;\n\t\tlet previous: string;\n\t\texpression = expression.replace(regex, function (substring: string, ...args: any[]) {\n\t\t\tconst tokens: string[] = substring.split('?.');\n\t\t\tfor (let i: number = 0; i < tokens.length - 1; i++) {\n\t\t\t\tconst a: string = i > 0 ? `(${tokens[i]} = ${previous})` : tokens[i];\n\t\t\t\tconst b: string = tokens[i + 1];\n\t\t\t\tprevious = i > 0 ? `${a}.${b}` : `(${a} ? ${a}.${b} : void 0)`;\n\t\t\t}\n\t\t\treturn previous || '';\n\t\t});\n\t\treturn expression;\n\t}\n\n\tstatic makeContext(module: Module, instance: Factory, parentInstance: Factory | Window, node: RxCompElement, factory: typeof Factory, selector: string): ModuleContext {\n\t\tinstance.rxcompId = ++ID;\n\t\tconst context = { module, instance, parentInstance, node, factory, selector };\n\t\tconst rxcompNodeId = node.rxcompId = (node.rxcompId || instance.rxcompId);\n\t\tconst nodeContexts = NODES[rxcompNodeId] || (NODES[rxcompNodeId] = []);\n\t\tnodeContexts.push(context);\n\t\tCONTEXTS[instance.rxcompId] = context;\n\t\treturn context;\n\t}\n\n\tstatic deleteContext(id, keepContext) {\n\t\tconst keepContexts = [];\n\t\tconst nodeContexts = NODES[id];\n\t\tif (nodeContexts) {\n\t\t\tnodeContexts.forEach(context => {\n\t\t\t\tif (context === keepContext) {\n\t\t\t\t\tkeepContexts.push(keepContext);\n\t\t\t\t} else {\n\t\t\t\t\tconst instance = context.instance;\n\t\t\t\t\tinstance.unsubscribe$.next();\n\t\t\t\t\tinstance.unsubscribe$.complete();\n\t\t\t\t\tif (instance['onDestroy']) {\n\t\t\t\t\t\tinstance['onDestroy']();\n\t\t\t\t\t\tdelete CONTEXTS[instance.rxcompId];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (keepContexts.length) {\n\t\t\t\tNODES[id] = keepContexts;;\n\t\t\t} else {\n\t\t\t\tdelete NODES[id];\n\t\t\t}\n\t\t}\n\t\treturn keepContexts;\n\t}\n\n\tstatic matchSelectors(node, selectors, results) {\n\t\tfor (let i = 0; i < selectors.length; i++) {\n\t\t\tconst match = selectors[i](node);\n\t\t\tif (match) {\n\t\t\t\tconst factory = match.factory;\n\t\t\t\tif (factory.prototype instanceof Component && factory.meta.template) {\n\t\t\t\t\tnode.innerHTML = factory.meta.template;\n\t\t\t\t}\n\t\t\t\tresults.push(match);\n\t\t\t\tif (factory.prototype instanceof Structure) {\n\t\t\t\t\t// console.log('Structure', node);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn results;\n\t}\n\n\tstatic querySelectorsAll(node, selectors, results) {\n\t\tif (node.nodeType === 1) {\n\t\t\tconst matches = this.matchSelectors(node, selectors, []);\n\t\t\tresults = results.concat(matches);\n\t\t\tconst structure = matches.find(x => x.factory.prototype instanceof Structure);\n\t\t\tif (structure) {\n\t\t\t\treturn results;\n\t\t\t}\n\t\t\tconst childNodes = node.childNodes;\n\t\t\tfor (let i = 0; i < childNodes.length; i++) {\n\t\t\t\tresults = this.querySelectorsAll(childNodes[i], selectors, results);\n\t\t\t}\n\t\t}\n\t\treturn results;\n\t}\n\n\tstatic traverseUp(node: Node, callback: (node: Node, i: number) => any, i: number = 0): any {\n\t\tif (!node) {\n\t\t\treturn;\n\t\t}\n\t\tconst result = callback(node, i);\n\t\tif (result) {\n\t\t\treturn result;\n\t\t}\n\t\treturn this.traverseUp(node.parentNode, callback, i + 1);\n\t}\n\n\tstatic traverseDown(node: Node, callback: (node: Node, i: number) => any, i: number = 0): any {\n\t\tif (!node) {\n\t\t\treturn;\n\t\t}\n\t\tlet result = callback(node, i);\n\t\tif (result) {\n\t\t\treturn result;\n\t\t}\n\t\tif (node.nodeType === 1) {\n\t\t\tlet j = 0,\n\t\t\t\tt = node.childNodes.length;\n\t\t\twhile (j < t && !result) {\n\t\t\t\tresult = this.traverseDown(node.childNodes[j], callback, i + 1);\n\t\t\t\tj++;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tstatic traversePrevious(node: Node, callback: (node: Node, i: number) => any, i: number = 0): any {\n\t\tif (!node) {\n\t\t\treturn;\n\t\t}\n\t\tconst result = callback(node, i);\n\t\tif (result) {\n\t\t\treturn result;\n\t\t}\n\t\treturn this.traversePrevious(node.previousSibling, callback, i + 1);\n\t}\n\n\tstatic traverseNext(node: Node, callback: (node: Node, i: number) => any, i: number = 0): any {\n\t\tif (!node) {\n\t\t\treturn;\n\t\t}\n\t\tconst result = callback(node, i);\n\t\tif (result) {\n\t\t\treturn result;\n\t\t}\n\t\treturn this.traverseNext(node.nextSibling, callback, i + 1);\n\t}\n\n\tstatic meta: IModuleMeta;\n\n}\n\nexport function getContext(instance: Factory): ModuleContext {\n\treturn CONTEXTS[instance.rxcompId];\n}\n\nexport function getContextByNode(node: Node): ModuleContext | void {\n\tlet context: ModuleContext;\n\tconst rxcompId: number = node['rxcompId'];\n\tif (rxcompId) {\n\t\tconst nodeContexts: ModuleContext[] = NODES[rxcompId];\n\t\tif (nodeContexts) {\n\t\t\tcontext = nodeContexts.reduce((previous: ModuleContext, current: ModuleContext) => {\n\t\t\t\tif (current.factory.prototype instanceof Component) {\n\t\t\t\t\treturn current;\n\t\t\t\t} else if (current.factory.prototype instanceof Context) {\n\t\t\t\t\treturn previous ? previous : current;\n\t\t\t\t} else {\n\t\t\t\t\treturn previous;\n\t\t\t\t}\n\t\t\t}, null);\n\t\t\t// console.log(node.rxcompId, context);\n\t\t}\n\t}\n\treturn context;\n}\n\nexport function getHost(instance: Factory, factory: typeof Factory, node: RxCompElement) {\n\tif (!node) {\n\t\tnode = getContext(instance).node;\n\t}\n\tif (node.rxcompId) {\n\t\tconst nodeContexts: ModuleContext[] = NODES[node.rxcompId];\n\t\tif (nodeContexts) {\n\t\t\t// console.log(nodeContexts);\n\t\t\tfor (let i: number = 0; i < nodeContexts.length; i++) {\n\t\t\t\tconst context: ModuleContext = nodeContexts[i];\n\t\t\t\tif (context.instance !== instance) {\n\t\t\t\t\t// console.log(context.instance, instance);\n\t\t\t\t\tif (context.instance instanceof Factory) {\n\t\t\t\t\t\treturn context.instance;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif (node.parentNode) {\n\t\treturn getHost(instance, factory, node.parentNode as RxCompElement);\n\t}\n}\n","import Directive from '../core/directive';\nimport { ExpressionFunction } from '../core/factory';\nimport { getContext } from '../module/module';\n\nexport default class ClassDirective extends Directive {\n\n\tclassFunction: ExpressionFunction;\n\n\tonInit() {\n\t\tconst { module, node } = getContext(this);\n\t\tconst expression = node.getAttribute('[class]');\n\t\tthis.classFunction = module.makeFunction(expression);\n\t\t// console.log('ClassDirective.onInit', this.classList, expression);\n\t}\n\n\tonChanges(changes) {\n\t\tconst { module, node } = getContext(this);\n\t\tconst classList = module.resolve(this.classFunction, changes, this);\n\t\tfor (let key in classList) {\n\t\t\tclassList[key] ? node.classList.add(key) : node.classList.remove(key);\n\t\t}\n\t\t// console.log('ClassDirective.onChanges', classList);\n\t}\n\n}\n\nClassDirective.meta = {\n\tselector: `[[class]]`,\n};\n","import { fromEvent, Observable } from 'rxjs';\nimport { shareReplay, takeUntil } from 'rxjs/operators';\nimport Directive from '../core/directive';\nimport { getContext } from '../module/module';\n\nconst EVENTS = ['mousedown', 'mouseup', 'mousemove', 'click', 'dblclick', 'mouseover', 'mouseout', 'mouseenter', 'mouseleave', 'contextmenu', 'touchstart', 'touchmove', 'touchend', 'keydown', 'keyup', 'input', 'change', 'loaded'];\n\nexport default class EventDirective extends Directive {\n\n\tevent: string;\n\tevent$: Observable<Event>;\n\n\tonInit() {\n\t\tconst { module, node, parentInstance, selector } = getContext(this);\n\t\tconst event = this.event = selector.replace(/\\[|\\]|\\(|\\)/g, '');\n\t\tconst event$ = this.event$ = fromEvent<Event>(node, event).pipe(shareReplay(1));\n\t\tconst expression = node.getAttribute(`(${event})`);\n\t\tif (expression) {\n\t\t\tconst outputFunction = module.makeFunction(expression, ['$event']);\n\t\t\tevent$.pipe(\n\t\t\t\ttakeUntil(this.unsubscribe$)\n\t\t\t).subscribe(event => {\n\t\t\t\t// console.log(parentInstance);\n\t\t\t\tmodule.resolve(outputFunction, parentInstance, event);\n\t\t\t});\n\t\t} else {\n\t\t\tparentInstance[`${event}$`] = event$;\n\t\t}\n\t\t// console.log('EventDirective.onInit', 'selector', selector, 'event', event);\n\t}\n\n}\n\nEventDirective.meta = {\n\tselector: `[(${EVENTS.join(')],[(')})]`,\n};\n","import Context from '../core/context';\nimport Factory from '../core/factory';\n\nexport default class ForItem extends Context {\n\n\tindex: number;\n\tcount: number;\n\t// !!! try with payload options { key, $key, value, $value, index, count } or use onInit()\n\n\tconstructor(key: string, $key: number | string, value: string, $value: any, index: number, count: number, parentInstance: Factory) {\n\t\t// console.log('ForItem', arguments);\n\t\tsuper(parentInstance);\n\t\t/*\n\t\tsuper(parentInstance, {\n\t\t\t[key]: {\n\t\t\t\tget: function() {\n\t\t\t\t\treturn this.$key;\n\t\t\t\t},\n\t\t\t\tset: function(key) {\n\t\t\t\t\tthis.$key = key;\n\t\t\t\t}\n\t\t\t},\n\t\t\t[value]: {\n\t\t\t\tget: function() {\n\t\t\t\t\treturn this.$value;\n\t\t\t\t},\n\t\t\t\tset: function(value) {\n\t\t\t\t\tthis.$value = value;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\t*/\n\t\tthis[key] = $key;\n\t\tthis[value] = $value;\n\t\tthis.index = index;\n\t\tthis.count = count;\n\t}\n\n\tget first(): boolean { return this.index === 0; }\n\n\tget last(): boolean { return this.index === this.count - 1; }\n\n\tget even(): boolean { return this.index % 2 === 0; }\n\n\tget odd(): boolean { return !this.even; }\n\n}\n","import Factory, { ExpressionFunction, RxCompElement } from '../core/factory';\nimport Structure from '../core/structure';\nimport Module, { getContext, ModuleContext } from '../module/module';\nimport ForItem from './for.item';\n\nexport interface IExpressionToken {\n\tkey: string;\n\tvalue: string;\n\titerable: string;\n}\n\nexport default class ForStructure extends Structure {\n\n\tforbegin: Comment;\n\tforend: Comment;\n\tinstances: Factory[] = [];\n\ttoken: IExpressionToken;\n\tforFunction: ExpressionFunction;\n\n\tonInit() {\n\t\tconst { module, node } = getContext(this);\n\t\tconst forbegin: Comment = this.forbegin = document.createComment(`*for begin`);\n\t\tforbegin['rxcompId'] = node.rxcompId;\n\t\tnode.parentNode.replaceChild(forbegin, node);\n\t\tconst forend: Comment = this.forend = document.createComment(`*for end`);\n\t\tforbegin.parentNode.insertBefore(forend, forbegin.nextSibling);\n\t\tconst expression: string = node.getAttribute('*for');\n\t\t// this.expression = expression;\n\t\tnode.removeAttribute('*for');\n\t\tconst token = this.token = this.getExpressionToken(expression);\n\t\tthis.forFunction = module.makeFunction(token.iterable);\n\t}\n\n\tonChanges(changes) {\n\t\tconst context: ModuleContext = getContext(this);\n\t\tconst module: Module = context.module;\n\t\tconst node: RxCompElement = context.node;\n\t\t// resolve\n\t\tconst token: IExpressionToken = this.token;\n\t\tlet result = module.resolve(this.forFunction, changes, this) || [];\n\t\tconst isArray = Array.isArray(result);\n\t\tconst array: any[] = isArray ? result : Object.keys(result);\n\t\tconst total: number = array.length;\n\t\tconst previous: number = this.instances.length;\n\t\t// let nextSibling = this.forbegin.nextSibling;\n\t\tfor (let i: number = 0; i < Math.max(previous, total); i++) {\n\t\t\tif (i < total) {\n\t\t\t\tconst key: number | string = isArray ? i : array[i];\n\t\t\t\tconst value: any = isArray ? array[key] : result[key];\n\t\t\t\tif (i < previous) {\n\t\t\t\t\t// update\n\t\t\t\t\tconst instance: Factory = this.instances[i];\n\t\t\t\t\tinstance[token.key] = key;\n\t\t\t\t\tinstance[token.value] = value;\n\t\t\t\t\t/*\n\t\t\t\t\tif (!nextSibling) {\n\t\t\t\t\t\tconst context = getContext(instance);\n\t\t\t\t\t\tconst node = context.node;\n\t\t\t\t\t\tthis.forend.parentNode.insertBefore(node, this.forend);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnextSibling = nextSibling.nextSibling;\n\t\t\t\t\t}\n\t\t\t\t\t*/\n\t\t\t\t} else {\n\t\t\t\t\t// create\n\t\t\t\t\tconst clonedNode: RxCompElement = node.cloneNode(true) as RxCompElement;\n\t\t\t\t\tdelete clonedNode['rxcompId'];\n\t\t\t\t\tthis.forend.parentNode.insertBefore(clonedNode, this.forend);\n\t\t\t\t\tconst args = [token.key, key, token.value, value, i, total, context.parentInstance]; // !!! context.parentInstance unused?\n\t\t\t\t\tconst instance = module.makeInstance(clonedNode, ForItem, context.selector, context.parentInstance, args);\n\t\t\t\t\tif (instance) {\n\t\t\t\t\t\tconst forItemContext = getContext(instance);\n\t\t\t\t\t\t// console.log('ForStructure', clonedNode, forItemContext.instance.constructor.name);\n\t\t\t\t\t\tmodule.compile(clonedNode, forItemContext.instance);\n\t\t\t\t\t\t// nextSibling = clonedNode.nextSibling;\n\t\t\t\t\t\tthis.instances.push(instance);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// remove\n\t\t\t\tconst instance: Factory = this.instances[i];\n\t\t\t\tconst { node } = getContext(instance);\n\t\t\t\tnode.parentNode.removeChild(node);\n\t\t\t\tmodule.remove(node);\n\t\t\t}\n\t\t}\n\t\tthis.instances.length = array.length;\n\t\t// console.log('ForStructure', this.instances, token);\n\t}\n\n\tgetExpressionToken(expression: string): IExpressionToken {\n\t\tif (expression === null) {\n\t\t\tthrow ('invalid for');\n\t\t}\n\t\tif (expression.trim().indexOf('let ') === -1 || expression.trim().indexOf(' of ') === -1) {\n\t\t\tthrow ('invalid for');\n\t\t}\n\t\tconst expressions: string[] = expression.split(';').map(x => x.trim()).filter(x => x !== '');\n\t\tconst forExpressions: string[] = expressions[0].split(' of ').map(x => x.trim());\n\t\tlet value: string = forExpressions[0].replace(/\\s*let\\s*/, '');\n\t\tconst iterable: string = forExpressions[1];\n\t\tlet key: string = 'index';\n\t\tconst keyValueMatches: RegExpMatchArray = value.match(/\\[(.+)\\s*,\\s*(.+)\\]/);\n\t\tif (keyValueMatches) {\n\t\t\tkey = keyValueMatches[1];\n\t\t\tvalue = keyValueMatches[2];\n\t\t}\n\t\tif (expressions.length > 1) {\n\t\t\tconst indexExpressions: string[] = expressions[1].split(/\\s*let\\s*|\\s*=\\s*index/).map(x => x.trim());\n\t\t\tif (indexExpressions.length === 3) {\n\t\t\t\tkey = indexExpressions[1];\n\t\t\t}\n\t\t}\n\t\treturn { key, value, iterable };\n\t}\n\n}\n\nForStructure.meta = {\n\tselector: '[*for]',\n};\n","import Directive from '../core/directive';\nimport { getContext } from '../module/module';\n\nexport default class HrefDirective extends Directive {\n\n\thref: string;\n\n\tonChanges(changes) {\n\t\tconst { node } = getContext(this);\n\t\tnode.setAttribute('href', this.href);\n\t}\n\n}\n\nHrefDirective.meta = {\n\tselector: '[[href]]',\n\tinputs: ['href'],\n};\n","import Factory, { ExpressionFunction, RxCompElement } from 'src/core/factory';\nimport { IExpressionToken } from 'src/for/for.structure';\nimport Structure from '../core/structure';\nimport { getContext } from '../module/module';\n\nexport default class IfStructure extends Structure {\n\n\tifbegin: Comment;\n\tifend: Comment;\n\tinstances: Factory[] = [];\n\ttoken: IExpressionToken;\n\tifFunction: ExpressionFunction;\n\tclonedNode: RxCompElement;\n\tnode: RxCompElement;\n\n\tonInit() {\n\t\tconst { module, node } = getContext(this);\n\t\tconst ifbegin = this.ifbegin = document.createComment(`*if begin`);\n\t\tifbegin['rxcompId'] = node.rxcompId;\n\t\tnode.parentNode.replaceChild(ifbegin, node);\n\t\tconst ifend = this.ifend = document.createComment(`*if end`);\n\t\tifbegin.parentNode.insertBefore(ifend, ifbegin.nextSibling);\n\t\tconst expression = node.getAttribute('*if');\n\t\tthis.ifFunction = module.makeFunction(expression);\n\t\tconst clonedNode = node.cloneNode(true) as RxCompElement;\n\t\tclonedNode.removeAttribute('*if');\n\t\tthis.clonedNode = clonedNode;\n\t\tthis.node = clonedNode.cloneNode(true) as RxCompElement;\n\t\t// console.log('IfStructure.expression', expression);\n\t}\n\n\tonChanges(changes) {\n\t\tconst { module } = getContext(this);\n\t\t// console.log('IfStructure.onChanges', changes);\n\t\tconst value = module.resolve(this.ifFunction, changes, this);\n\t\tconst node = this.node;\n\t\tif (value) {\n\t\t\tif (!node.parentNode) {\n\t\t\t\tthis.ifend.parentNode.insertBefore(node, this.ifend);\n\t\t\t\tmodule.compile(node);\n\t\t\t}\n\t\t} else {\n\t\t\tif (node.parentNode) {\n\t\t\t\tmodule.remove(node, this);\n\t\t\t\tnode.parentNode.removeChild(node);\n\t\t\t\tthis.node = this.clonedNode.cloneNode(true) as RxCompElement;\n\t\t\t}\n\t\t}\n\t}\n\n}\n\nIfStructure.meta = {\n\tselector: '[*if]',\n};\n","import Directive from '../core/directive';\nimport { getContext } from '../module/module';\n\nexport default class InnerHtmlDirective extends Directive {\n\n\tinnerHTML: string;\n\n\tonChanges(changes) {\n\t\tconst { node } = getContext(this);\n\t\tnode.innerHTML = this.innerHTML == undefined ? '' : this.innerHTML; // !!! keep == loose equality\n\t}\n\n}\n\nInnerHtmlDirective.meta = {\n\tselector: `[innerHTML]`,\n\tinputs: ['innerHTML'],\n};\n","export default class Pipe {\n\n\tstatic transform(value: any): any {\n\t\treturn value;\n\t}\n\n\tstatic meta: any;\n}\n","import Pipe from \"../core/pipe\";\n\nexport default class JsonPipe extends Pipe {\n\n\tstatic transform(value: any): string {\n\t\treturn JSON.stringify(value, null, '\\t');\n\t}\n\n}\n\nJsonPipe.meta = {\n\tname: 'json',\n};\n","import Directive from '../core/directive';\nimport { getContext } from '../module/module';\n\nexport default class SrcDirective extends Directive {\n\n\tsrc: string;\n\n\tonChanges(changes) {\n\t\tconst { node } = getContext(this);\n\t\tnode.setAttribute('src', this.src);\n\t}\n\n}\n\nSrcDirective.meta = {\n\tselector: '[[src]]',\n\tinputs: ['src'],\n};\n","import Directive from '../core/directive';\nimport { ExpressionFunction } from '../core/factory';\nimport { getContext } from '../module/module';\n\nexport default class StyleDirective extends Directive {\n\n\tstyleFunction: ExpressionFunction;\n\n\tonInit() {\n\t\tconst { module, node } = getContext(this);\n\t\tconst expression = node.getAttribute('[style]');\n\t\tthis.styleFunction = module.makeFunction(expression);\n\t\t// console.log('StyleDirective.onInit', expression);\n\t}\n\n\tonChanges(changes) {\n\t\tconst { module, node } = getContext(this);\n\t\tconst style = module.resolve(this.styleFunction, changes, this);\n\t\tfor (let key in style) {\n\t\t\tnode.style.setProperty(key, style[key]);\n\t\t}\n\t\t// console.log('StyleDirective.onChanges', changes, style);\n\t}\n\n}\n\nStyleDirective.meta = {\n\tselector: `[[style]]`\n};\n","import ClassDirective from './class/class.directive';\nimport EventDirective from './event/event.directive';\nimport ForStructure from './for/for.structure';\nimport HrefDirective from './href/href.directive';\nimport IfStructure from './if/if.structure';\nimport InnerHtmlDirective from './inner-html/inner-html.directive';\nimport JsonPipe from './json/json.pipe';\nimport Module from './module/module';\nimport SrcDirective from './src/src.directive';\nimport StyleDirective from './style/style.directive';\n\nexport default class CoreModule extends Module { }\nconst factories = [\n\tClassDirective,\n\tEventDirective,\n\tForStructure,\n\tHrefDirective,\n\tIfStructure,\n\tInnerHtmlDirective,\n\tSrcDirective,\n\tStyleDirective,\n];\nconst pipes = [\n\tJsonPipe,\n];\nCoreModule.meta = {\n\tdeclarations: [\n\t\t...factories,\n\t\t...pipes,\n\t],\n\texports: [\n\t\t...factories,\n\t\t...pipes,\n\t]\n};\n","import Component from '../core/component';\nimport Directive from '../core/directive';\nimport Factory, { RxCompElement, SelectorFunction } from '../core/factory';\nimport Pipe from '../core/pipe';\nimport Structure from '../core/structure';\nimport Module, { IModuleMeta } from '../module/module';\n\nconst ORDER: (typeof Factory)[] = [Structure, Component, Directive];\n\nexport default class Platform {\n\n\tstatic bootstrap(moduleFactory: typeof Module): Module {\n\t\tconst meta = this.resolveMeta(moduleFactory);\n\t\tconsole.log(meta);\n\t\tconst bootstrap = meta.bootstrap;\n\t\tif (!bootstrap) {\n\t\t\tthrow ('missing bootstrap');\n\t\t}\n\t\tconst node = meta.node = this.querySelector(bootstrap.meta.selector);\n\t\tif (!node) {\n\t\t\tthrow (`missing node ${bootstrap.meta.selector}`);\n\t\t}\n\t\tmeta.nodeInnerHTML = node.innerHTML;\n\t\tconst pipes = meta.pipes = this.resolvePipes(meta);\n\t\tconst factories = meta.factories = this.resolveFactories(meta);\n\t\tthis.sortFactories(factories);\n\t\tfactories.unshift(bootstrap);\n\t\tconst selectors = meta.selectors = this.unwrapSelectors(factories);\n\t\tconst module = new moduleFactory();\n\t\tmodule.meta = meta;\n\t\tconst instances = module.compile(node, window);\n\t\tconst root = instances[0];\n\t\t// if (root instanceof module.meta.bootstrap) {\n\t\troot.pushChanges();\n\t\t// }\n\t\treturn module;\n\t}\n\n\tstatic querySelector(selector: string): RxCompElement | null {\n\t\treturn document.querySelector(selector);\n\t}\n\n\tstatic resolveMeta(moduleFactory: typeof Module): IModuleMeta {\n\t\tconst meta = Object.assign({ imports: [], declarations: [], pipes: [], exports: [] }, moduleFactory.meta);\n\t\tmeta.imports = meta.imports.map(moduleFactory => this.resolveMeta(moduleFactory));\n\t\treturn meta;\n\t}\n\n\tstatic resolvePipes(meta: IModuleMeta, exported?: boolean): { [key: string]: typeof Pipe } {\n\t\tconst importedPipes = meta.imports.map((importMeta: IModuleMeta) => this.resolvePipes(importMeta, true));\n\t\tconst pipes = {};\n\t\tconst pipeList: (typeof Factory | typeof Pipe)[] = (exported ? meta.exports : meta.declarations).filter((x: typeof Pipe) => x.prototype instanceof Pipe);\n\t\tpipeList.forEach(pipeFactory => pipes[pipeFactory.meta.name] = pipeFactory);\n\t\treturn Object.assign({}, ...importedPipes, pipes);\n\t}\n\n\tstatic resolveFactories(meta: IModuleMeta, exported?: boolean): (typeof Factory)[] {\n\t\tconst importedFactories = meta.imports.map((importMeta: IModuleMeta) => this.resolveFactories(importMeta, true));\n\t\tconst factoryList: (typeof Factory | typeof Pipe)[] = (exported ? meta.exports : meta.declarations).filter(x => (x.prototype instanceof Structure || x.prototype instanceof Component || x.prototype instanceof Directive));\n\t\treturn Array.prototype.concat.call(factoryList, ...importedFactories);\n\t}\n\n\tstatic sortFactories(factories: (typeof Factory)[]): void {\n\t\tfactories.sort((a, b) => {\n\t\t\tconst ai = ORDER.reduce((p, c, i) => a.prototype instanceof c ? i : p, -1);\n\t\t\tconst bi = ORDER.reduce((p, c, i) => b.prototype instanceof c ? i : p, -1);\n\t\t\t// return ai - bi;\n\t\t\tconst o = ai - bi;\n\t\t\tif (o === 0) {\n\t\t\t\treturn (a.meta.hosts ? 1 : 0) - (b.meta.hosts ? 1 : 0);\n\t\t\t}\n\t\t\treturn o;\n\t\t});\n\t}\n\n\tstatic getExpressions(selector: string): SelectorFunction[] {\n\t\tlet matchers = [];\n\t\tselector.replace(/\\.([\\w\\-\\_]+)|\\[(.+?\\]*)(\\=)(.*?)\\]|\\[(.+?\\]*)\\]|([\\w\\-\\_]+)/g, function (value: string, c1, a2, u3, v4, a5, e6) {\n\t\t\tif (c1) {\n\t\t\t\tmatchers.push(function (node) {\n\t\t\t\t\treturn node.classList.contains(c1);\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (a2) {\n\t\t\t\tmatchers.push(function (node) {\n\t\t\t\t\treturn (node.hasAttribute(a2) && node.getAttribute(a2) === v4) ||\n\t\t\t\t\t\t(node.hasAttribute(`[${a2}]`) && node.getAttribute(`[${a2}]`) === v4);\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (a5) {\n\t\t\t\tmatchers.push(function (node) {\n\t\t\t\t\treturn node.hasAttribute(a5) || node.hasAttribute(`[${a5}]`);\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (e6) {\n\t\t\t\tmatchers.push(function (node) {\n\t\t\t\t\treturn node.nodeName.toLowerCase() === e6.toLowerCase();\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn '';\n\t\t});\n\t\treturn matchers;\n\t}\n\n\tstatic unwrapSelectors(factories: (typeof Factory)[]): SelectorFunction[] {\n\t\tconst selectors = [];\n\t\tfactories.forEach(factory => {\n\t\t\tfactory.meta.selector.split(',').forEach(selector => {\n\t\t\t\tselector = selector.trim();\n\t\t\t\tlet excludes = [];\n\t\t\t\tconst matchSelector = selector.replace(/\\:not\\((.+?)\\)/g, (value, unmatchSelector) => {\n\t\t\t\t\texcludes = this.getExpressions(unmatchSelector);\n\t\t\t\t\treturn '';\n\t\t\t\t});\n\t\t\t\tconst includes = this.getExpressions(matchSelector);\n\t\t\t\tselectors.push((node) => {\n\t\t\t\t\tconst include = includes.reduce((result, e) => {\n\t\t\t\t\t\treturn result && e(node);\n\t\t\t\t\t}, true);\n\t\t\t\t\tconst exclude = excludes.reduce((result, e) => {\n\t\t\t\t\t\treturn result || e(node);\n\t\t\t\t\t}, false);\n\t\t\t\t\tif (include && !exclude) {\n\t\t\t\t\t\treturn { node, factory, selector };\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t\treturn selectors;\n\t}\n\n\tstatic isBrowser(): boolean {\n\t\treturn Boolean(window);\n\t}\n\n\t// static isServer() {}\n\n}\n","import Platform from './platform';\n\nexport default class Browser extends Platform { }\n"]}